{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\Hitos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\n  const [nombre_hito, setNombreHito] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [estadonuevoHito, serEstadonuevoHito] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para el archivo de imagen\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Valor vacío como predeterminado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [estadoActualHito, setEstadoActualHito] = useState(''); // Descripción del hito\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n\n  const alertRef = useRef(null); // Crear una referencia para la alerta\n\n  // Verificar si el usuario está autenticado al cargar el componente\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Manejar la subida de imágenes\n  const handleImagenChange = e => {\n    const file = e.target.files[0]; // Obtén el archivo seleccionado\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagenPrueba(reader.result); // Guarda la cadena Base64 en el estado\n      };\n      reader.onerror = error => {\n        console.error(\"Error al convertir la imagen a Base64:\", error);\n      };\n      reader.readAsDataURL(file); // Convierte el archivo a Base64\n    }\n  };\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitosporPruebas/${id}`);\n        const proyecto = response.data;\n        setNombreHito(proyecto.nombre_hito);\n        setDescripcion(proyecto.descripcion);\n\n        // Obtener los hitos del proyecto\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Obtener los hitos de la API\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      hitoSeleccionado,\n      estadonuevoHito,\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      criterioAceptacion,\n      imagenPrueba // Aquí se envía como Base64\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json' // Asegúrate de usar JSON\n        }\n      };\n      const response = await axios.post(`http://localhost:5000/api/pruebas/registerPrueba/${id}`, planDePrueba, config);\n      if (response.data.msg) {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n        setTimeout(() => navigate('/proyectos/tareas'), 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.errors) {\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\n        setShowAlert({\n          severity: 'error',\n          message: errorMessages\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    } finally {\n      // Desplazar la vista hacia la alerta\n      if (alertRef.current) {\n        alertRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n\n  // Habilitar solo los campos debajo del primer botón\n  const handleEnableForm = () => {\n    setFormularioHabilitado(true);\n  };\n\n  // Manejar la selección de un hito\n  const handleHitoSeleccionado = async e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n\n    // Obtener la descripción del hito seleccionado\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    if (hito) {\n      setDescripcionHito(hito.descripcion);\n      setEstadoActualHito(hito.estado);\n    } else {\n      setDescripcionHito('');\n      setEstadoActualHito('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: alertRef,\n      children: showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        severity: showAlert.severity,\n        message: showAlert.message,\n        autoHideDuration: 2000,\n        sx: {\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Test Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Selecciona un Hito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: hitoSeleccionado,\n            onChange: handleHitoSeleccionado,\n            displayEmpty: true // Para mostrar el placeholder aunque no se haya seleccionado nada\n            ,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Selecciona un hito...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), \" \", hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: hito.id_hito,\n              children: hito.nombre_hito\n            }, hito.id_hito, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleEnableForm,\n            children: \"Habilitar Formulario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), formularioHabilitado && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Selecciona un Hito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: hitoSeleccionado,\n              onChange: handleHitoSeleccionado,\n              displayEmpty: true // Para mostrar el placeholder aunque no se haya seleccionado nada\n              ,\n              disabled: !formularioHabilitado // Solo habilitar si el formulario está habilitado\n              ,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Selecciona un hito...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), \" \", hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: hito.id_hito,\n                children: hito.nombre_hito\n              }, hito.id_hito, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Descripci\\xF3n del Plan de Prueba\",\n              value: descripcionHito,\n              disabled: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Estado actual del hito\",\n              value: estadoActualHito,\n              disabled: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: estadonuevoHito,\n              onChange: e => serEstadonuevoHito(e.target.value),\n              displayEmpty: true // Muestra el placeholder aunque no se haya seleccionado nada\n              ,\n              disabled: !formularioHabilitado // Solo habilitar si el formulario está habilitado\n              ,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Cambia el estado si es el unico caso para el hito ..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"En progreso\",\n                children: \"En Proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Completado\",\n                children: \"Finalizado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Resultado Esperado\",\n              value: resultadoEsperado,\n              onChange: e => setResultadoEsperado(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Prueba Realizada\",\n              value: pruebaRealizada,\n              onChange: e => setPruebaRealizada(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Criterio de aceptaci\\xF3n\",\n              value: criterioAceptacion,\n              onChange: e => setCriterioAceptacion(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: estadoPrueba,\n              onChange: e => setEstadoPrueba(e.target.value),\n              displayEmpty: true // Muestra el placeholder aunque no se haya seleccionado nada\n              ,\n              disabled: !formularioHabilitado // Solo habilitar si el formulario está habilitado\n              ,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Selecciona un estado...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Aprobado\",\n                children: \"Aprobado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Rechazada\",\n                children: \"Rechazada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pendiente\",\n                children: \"Pendiente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Bloqueado\",\n                children: \"Bloqueado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Desconocido\",\n                children: \"Desconocido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Requiere m\\xE1s pruebas\",\n                children: \"Requiere m\\xE1s pruebas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"No aplicable\",\n                children: \"No aplicable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"label\",\n              fullWidth: true,\n              children: [\"Subir Imagen\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                hidden: true,\n                onChange: handleImagenChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), imagenPrueba && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              mt: 1,\n              children: [\"Imagen seleccionada: \", imagenPrueba.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              type: \"submit\",\n              children: \"Enviar Plan de Prueba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"y9kcE5fGAXncoilDWbgKrualdHw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","Fragment","_Fragment","CrearPlanDePrueba","_s","showAlert","setShowAlert","nombre_hito","setNombreHito","descripcion","setDescripcion","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterioAceptacion","setCriterioAceptacion","estadoPrueba","setEstadoPrueba","estadonuevoHito","serEstadonuevoHito","imagenPrueba","setImagenPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","estadoActualHito","setEstadoActualHito","formularioHabilitado","setFormularioHabilitado","navigate","id","alertRef","handleImagenChange","e","file","target","files","reader","FileReader","onload","result","onerror","error","console","readAsDataURL","fetchProyecto","response","get","proyecto","data","severity","message","fetchHitos","handleSubmit","preventDefault","planDePrueba","token","localStorage","getItem","config","headers","post","msg","setTimeout","errors","errorMessages","map","err","join","current","scrollIntoView","behavior","handleEnableForm","handleHitoSeleccionado","hitoId","value","hito","find","id_hito","estado","sx","padding","children","ref","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","mt","item","xs","sm","fullWidth","onChange","displayEmpty","required","disabled","label","onClick","multiline","rows","component","type","accept","hidden","name","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/Hitos.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const [nombre_hito, setNombreHito] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [estadonuevoHito, serEstadonuevoHito] = useState('');\r\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para el archivo de imagen\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState('');  // Valor vacío como predeterminado\r\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n  const [estadoActualHito, setEstadoActualHito] = useState(''); // Descripción del hito\r\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n\r\n  const alertRef = useRef(null); // Crear una referencia para la alerta\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Manejar la subida de imágenes\r\n  const handleImagenChange = (e) => {\r\n    const file = e.target.files[0]; // Obtén el archivo seleccionado\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setImagenPrueba(reader.result); // Guarda la cadena Base64 en el estado\r\n      };\r\n      reader.onerror = (error) => {\r\n        console.error(\"Error al convertir la imagen a Base64:\", error);\r\n      };\r\n      reader.readAsDataURL(file); // Convierte el archivo a Base64\r\n    }\r\n  };\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitosporPruebas/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        setNombreHito(proyecto.nombre_hito);\r\n        setDescripcion(proyecto.descripcion);\r\n        \r\n\r\n        // Obtener los hitos del proyecto\r\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Obtener los hitos de la API\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\r\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      hitoSeleccionado,\r\n      estadonuevoHito,\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      criterioAceptacion,\r\n      imagenPrueba, // Aquí se envía como Base64\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n          'Content-Type': 'application/json', // Asegúrate de usar JSON\r\n        },\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/pruebas/registerPrueba/${id}`,\r\n        planDePrueba,\r\n        config\r\n      );\r\n\r\n      if (response.data.msg) {\r\n        setShowAlert({ severity: 'success', message: response.data.msg });\r\n        setTimeout(() => navigate('/proyectos/tareas'), 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n      if (error.response && error.response.data && error.response.data.errors) {\r\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: errorMessages,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    } finally {\r\n      // Desplazar la vista hacia la alerta\r\n      if (alertRef.current) {\r\n        alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Habilitar solo los campos debajo del primer botón\r\n  const handleEnableForm = () => {\r\n    setFormularioHabilitado(true);\r\n  };\r\n\r\n  // Manejar la selección de un hito\r\n  const handleHitoSeleccionado = async (e) => {\r\n    const hitoId = e.target.value;\r\n    setHitoSeleccionado(hitoId);\r\n\r\n    // Obtener la descripción del hito seleccionado\r\n    const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n    if (hito) {\r\n      setDescripcionHito(hito.descripcion);\r\n      setEstadoActualHito(hito.estado);\r\n    } else {\r\n      setDescripcionHito('');\r\n      setEstadoActualHito('');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      <div ref={alertRef}>\r\n        {showAlert && (\r\n          <AlertMessage\r\n            severity={showAlert.severity}\r\n            message={showAlert.message}\r\n            autoHideDuration={2000}\r\n            sx={{ mb: 4 }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Test Plan\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} mt={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <InputLabel>Selecciona un Hito</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  value={hitoSeleccionado}\r\n                  onChange={handleHitoSeleccionado}\r\n                  displayEmpty // Para mostrar el placeholder aunque no se haya seleccionado nada\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\" disabled>Selecciona un hito...</MenuItem> {/* Este es el placeholder */}\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito.id_hito} value={hito.id_hito}>\r\n                      {hito.nombre_hito}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          \r\n\r\n          <Grid item xs={12}>\r\n            <Button variant=\"contained\" fullWidth onClick={handleEnableForm}>\r\n              Habilitar Formulario\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Formulario del plan de prueba */}\r\n        {formularioHabilitado && (\r\n          <>\r\n            <Grid container spacing={2} mt={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <InputLabel>Selecciona un Hito</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  value={hitoSeleccionado}\r\n                  onChange={handleHitoSeleccionado}\r\n                  displayEmpty // Para mostrar el placeholder aunque no se haya seleccionado nada\r\n                  disabled={!formularioHabilitado} // Solo habilitar si el formulario está habilitado\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\" disabled>Selecciona un hito...</MenuItem> {/* Este es el placeholder */}\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito.id_hito} value={hito.id_hito}>\r\n                      {hito.nombre_hito}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Descripción del Plan de Prueba\"\r\n                  value={descripcionHito}\r\n                  disabled={true}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Estado actual del hito\"\r\n                  value={estadoActualHito}\r\n                  disabled={true}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  fullWidth\r\n                  value={estadonuevoHito}\r\n                  onChange={(e) => serEstadonuevoHito(e.target.value)}\r\n                  displayEmpty // Muestra el placeholder aunque no se haya seleccionado nada\r\n                  disabled={!formularioHabilitado} // Solo habilitar si el formulario está habilitado\r\n                >\r\n                  <MenuItem value=\"\" disabled>Cambia el estado si es el unico caso para el hito ..</MenuItem> {/* Placeholder */}\r\n                  <MenuItem value=\"En progreso\">En Proceso</MenuItem>\r\n                  <MenuItem value=\"Completado\">Finalizado</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Resultado Esperado\"\r\n                  value={resultadoEsperado}\r\n                  onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Prueba Realizada\"\r\n                  value={pruebaRealizada}\r\n                  onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Criterio de aceptación\"\r\n                  value={criterioAceptacion}\r\n                  onChange={(e) => setCriterioAceptacion(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  fullWidth\r\n                  value={estadoPrueba}\r\n                  onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                  displayEmpty // Muestra el placeholder aunque no se haya seleccionado nada\r\n                  disabled={!formularioHabilitado} // Solo habilitar si el formulario está habilitado\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\" disabled>Selecciona un estado...</MenuItem> {/* Placeholder */}\r\n                  <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n                  <MenuItem value=\"Rechazada\">Rechazada</MenuItem>\r\n                  <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n                  <MenuItem value=\"Bloqueado\">Bloqueado</MenuItem>\r\n                  <MenuItem value=\"Desconocido\">Desconocido</MenuItem>\r\n                  <MenuItem value=\"Requiere más pruebas\">Requiere más pruebas</MenuItem>\r\n                  <MenuItem value=\"No aplicable\">No aplicable</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n\r\n              {/* Subida de imagen */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  component=\"label\"\r\n                  fullWidth\r\n                >\r\n                  Subir Imagen\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    hidden\r\n                    onChange={handleImagenChange}\r\n                  />\r\n                </Button>\r\n                {imagenPrueba && (\r\n                  <Typography variant=\"body2\" mt={1}>\r\n                    Imagen seleccionada: {imagenPrueba.name}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                >\r\n                  Enviar Plan de Prueba\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}