{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstoPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\nconst DashboardChartsPrueba = () => {\n  _s();\n  const [proyectos, setProyectos] = useState([]);\n  const [filteredProyectos, setFilteredProyectos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\n  const [noData, setNoData] = useState(false);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    setLoading(true);\n    setNoData(false);\n    setError(null);\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id;\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\n      const {\n        proyectosPorEstado\n      } = response.data;\n      if (!proyectosPorEstado || proyectosPorEstado.length === 0) {\n        setNoData(true);\n        setProyectos([]);\n        return;\n      }\n      setProyectos(proyectosPorEstado);\n      setNoData(false);\n    } catch (err) {\n      console.error('Error al obtener los proyectos:', err);\n      setError('No se pudieron cargar los proyectos');\n      setProyectos([]);\n      setNoData(true);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    fetchProyectos();\n  }, [fetchProyectos]);\n  useEffect(() => {\n    // Filtrar proyectos según el estado seleccionado\n    const filtered = proyectos.filter(proyecto => proyecto.estado_prueba === selectedEstado);\n    setFilteredProyectos(filtered);\n  }, [proyectos, selectedEstado]);\n  const handleEstadoChange = e => {\n    setSelectedEstado(e.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 25\n  }, this);\n\n  // Preparar datos para el gráfico\n  const chartData = {\n    labels: filteredProyectos.map(proyecto => proyecto.nombre),\n    datasets: [{\n      data: filteredProyectos.map(proyecto => proyecto.cantidad),\n      backgroundColor: filteredProyectos.map((_, index) => `hsl(${index * 40}, 70%, 50%)`)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Proyectos por Estado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEstado,\n        onChange: handleEstadoChange,\n        style: {\n          padding: '5px',\n          width: '200px'\n        },\n        children: estadosPosibles.map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado,\n          children: estado\n        }, estado, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), noData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px ',\n        color: '#888'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay proyectos en el estado seleccionado. Intenta con otro estado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: 'red'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                const index = tooltipItem.dataIndex;\n                const label = chartData.labels[index] || 'Desconocido';\n                const value = tooltipItem.raw;\n                return `${label}: ${value} Proyectos`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsPrueba, \"i5+/3aXofGwnDlpK41yBbRQR/fc=\");\n_c = DashboardChartsPrueba;\nexport default DashboardChartsPrueba;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsPrueba\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","estadosPosibles","DashboardChartsPrueba","_s","proyectos","setProyectos","filteredProyectos","setFilteredProyectos","loading","setLoading","error","setError","selectedEstado","setSelectedEstado","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","response","get","proyectosPorEstado","data","length","err","console","filtered","filter","proyecto","estado_prueba","handleEstadoChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","nombre","datasets","cantidad","backgroundColor","_","index","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","onChange","padding","width","estado","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstoPrueba.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\r\n\r\nconst DashboardChartsPrueba = () => {\r\n    const [proyectos, setProyectos] = useState([]);\r\n    const [filteredProyectos, setFilteredProyectos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        setLoading(true);\r\n        setNoData(false);\r\n        setError(null);\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id;\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n            };\r\n\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\r\n            const { proyectosPorEstado } = response.data;\r\n\r\n            if (!proyectosPorEstado || proyectosPorEstado.length === 0) {\r\n                setNoData(true);\r\n                setProyectos([]);\r\n                return;\r\n            }\r\n\r\n            setProyectos(proyectosPorEstado);\r\n            setNoData(false);\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No se pudieron cargar los proyectos');\r\n            setProyectos([]);\r\n            setNoData(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        fetchProyectos();\r\n    }, [fetchProyectos]);\r\n\r\n    useEffect(() => {\r\n        // Filtrar proyectos según el estado seleccionado\r\n        const filtered = proyectos.filter(proyecto => proyecto.estado_prueba === selectedEstado);\r\n        setFilteredProyectos(filtered);\r\n    }, [proyectos, selectedEstado]);\r\n\r\n    const handleEstadoChange = (e) => {\r\n        setSelectedEstado(e.target.value);\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    // Preparar datos para el gráfico\r\n    const chartData = {\r\n        labels: filteredProyectos.map(proyecto => proyecto.nombre),\r\n        datasets: [{\r\n            data: filteredProyectos.map(proyecto => proyecto.cantidad),\r\n            backgroundColor: filteredProyectos.map((_, index) => `hsl(${index * 40}, 70%, 50%)`),\r\n        }],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Proyectos por Estado</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <select\r\n                    value={selectedEstado}\r\n                    onChange={handleEstadoChange}\r\n                    style={{ padding: '5px', width: '200px' }}\r\n                >\r\n                    {estadosPosibles.map(estado => (\r\n                        <option key={estado} value={estado}>{estado}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {noData && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px ', color: '#888' }}>\r\n                    <p>No hay proyectos en el estado seleccionado. Intenta con otro estado.</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: 'red' }}>\r\n                    <p>{error}</p>\r\n                </ div>\r\n            )}\r\n\r\n            <Pie\r\n                data={chartData}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const index = tooltipItem.dataIndex;\r\n                                    const label = chartData.labels[index] || 'Desconocido';\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${label}: ${value} Proyectos`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsPrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}