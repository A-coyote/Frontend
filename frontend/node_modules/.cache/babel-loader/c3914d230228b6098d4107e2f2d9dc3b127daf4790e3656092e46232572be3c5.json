{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\PlanPruebas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\n  const [nombreProyecto, setNombreProyecto] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaInicio, setFechaInicio] = useState('');\n  const [fechaFin, setFechaFin] = useState('');\n  const [presupuesto, setPresupuesto] = useState('');\n  const [estado, setEstado] = useState('');\n  const [responsable, setResponsable] = useState('');\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para el archivo de imagen\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Valor vacío como predeterminado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n\n  // Verificar si el usuario está autenticado al cargar el componente\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Manejar la subida de imágenes\n  const handleImagenChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImagenPrueba(e.target.files[0]);\n    }\n  };\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\n        const proyecto = response.data;\n\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\n        setNombreProyecto(proyecto.nombre);\n        setDescripcion(proyecto.descripcion);\n        setFechaInicio(formatoFechaInicio);\n        setFechaFin(formatoFechaFin);\n        setPresupuesto(proyecto.presupuesto);\n        setEstado(proyecto.estado);\n        setResponsable(proyecto.u_usuario);\n\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Obtener los hitos de la API\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validaciones simples para el plan de prueba\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterrioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      hitoSeleccionado,\n      // Incluir el hito seleccionado\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      criterrioAceptacion,\n      imagenPrueba // Aquí también debes incluir la imagen en el objeto\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n\n      // Aquí puedes enviar el plan de prueba a la API\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n\n        // Redirigir después de 2 segundos\n        setTimeout(() => {\n          navigate('/proyectos/tareas');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.msg) {\n        setShowAlert({\n          severity: 'error',\n          message: error.response.data.msg\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    }\n  };\n\n  // Habilitar solo los campos debajo del primer botón\n  const handleEnableForm = () => {\n    setFormularioHabilitado(true);\n  };\n\n  // Manejar la selección de un hito\n  const handleHitoSeleccionado = async e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n\n    // Obtener la descripción del hito seleccionado\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    if (hito) {\n      setDescripcionHito(hito.descripcion);\n    } else {\n      setDescripcionHito('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      severity: showAlert.severity,\n      message: showAlert.message,\n      autoHideDuration: 2000,\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Test Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Nombre del Proyecto\",\n            value: nombreProyecto,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Inicio\",\n            type: \"date\",\n            value: fechaInicio,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Fin\",\n            type: \"date\",\n            value: fechaFin,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Presupuesto\",\n            value: presupuesto,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Estado\",\n            value: estado,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Responsable\",\n            value: responsable,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleEnableForm,\n            children: \"Habilitar Formulario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), formularioHabilitado && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Selecciona un Hito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: hitoSeleccionado,\n              onChange: e => handleHitoSeleccionado(e.target.value),\n              displayEmpty: true // Para mostrar el placeholder aunque no se haya seleccionado nada\n              ,\n              disabled: !formularioHabilitado // Solo habilitar si el formulario está habilitado\n              ,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Selecciona un hito...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), \" \", hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: hito.id_hito,\n                children: hito.nombre_hito\n              }, hito.id_hito, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Descripci\\xF3n del Plan de Prueba\",\n              value: descripcionHito,\n              disabled: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Resultado Esperado\",\n              value: resultadoEsperado,\n              onChange: e => setResultadoEsperado(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Prueba Realizada\",\n              value: pruebaRealizada,\n              onChange: e => setPruebaRealizada(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Criterio de aceptaci\\xF3n\",\n              value: criterrioAceptacion,\n              onChange: e => setCriterrioAceptacion(e.target.value),\n              variant: \"outlined\",\n              required: true,\n              multiline: true // Esta propiedad convierte el campo en un textarea\n              ,\n              rows: 4 // Opcional: puedes establecer el número de filas visibles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: estadoPrueba,\n              onChange: e => setEstadoPrueba(e.target.value),\n              displayEmpty: true // Muestra el placeholder aunque no se haya seleccionado nada\n              ,\n              disabled: !formularioHabilitado // Solo habilitar si el formulario está habilitado\n              ,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                disabled: true,\n                children: \"Selecciona un estado...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Aprobado\",\n                children: \"Aprobado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Rechazada\",\n                children: \"Rechazada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pendiente\",\n                children: \"Pendiente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Bloqueado\",\n                children: \"Bloqueado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Desconocido\",\n                children: \"Desconocido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Requiere m\\xE1s pruebas\",\n                children: \"Requiere m\\xE1s pruebas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"No aplicable\",\n                children: \"No aplicable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"label\",\n              fullWidth: true,\n              children: [\"Subir Imagen\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                hidden: true,\n                onChange: handleImagenChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), imagenPrueba && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              mt: 1,\n              children: [\"Imagen seleccionada: \", imagenPrueba.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              type: \"submit\",\n              children: \"Enviar Plan de Prueba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"jyJjbFUM1hFvVQ9foeW/lSb4TGo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","Fragment","_Fragment","CrearPlanDePrueba","_s","showAlert","setShowAlert","nombreProyecto","setNombreProyecto","descripcion","setDescripcion","fechaInicio","setFechaInicio","fechaFin","setFechaFin","presupuesto","setPresupuesto","estado","setEstado","responsable","setResponsable","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterrioAceptacion","setCriterrioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","formularioHabilitado","setFormularioHabilitado","navigate","id","handleImagenChange","e","target","files","fetchProyecto","response","get","proyecto","data","formatoFechaInicio","Date","fecha_inicio","toISOString","split","formatoFechaFin","fecha_finalizacion","nombre","u_usuario","error","console","severity","message","fetchHitos","handleSubmit","preventDefault","planDePrueba","token","localStorage","getItem","config","headers","post","msg","setTimeout","handleEnableForm","handleHitoSeleccionado","hitoId","value","hito","find","id_hito","sx","padding","children","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","item","xs","sm","fullWidth","label","disabled","type","InputLabelProps","shrink","onClick","mt","onChange","displayEmpty","required","map","nombre_hito","multiline","rows","component","accept","hidden","name","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/PlanPruebas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const [nombreProyecto, setNombreProyecto] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('');\r\n  const [fechaFin, setFechaFin] = useState('');\r\n  const [presupuesto, setPresupuesto] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [responsable, setResponsable] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para el archivo de imagen\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState('');  // Valor vacío como predeterminado\r\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Manejar la subida de imágenes\r\n  const handleImagenChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setImagenPrueba(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\r\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\r\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\r\n\r\n        setNombreProyecto(proyecto.nombre);\r\n        setDescripcion(proyecto.descripcion);\r\n        setFechaInicio(formatoFechaInicio);\r\n        setFechaFin(formatoFechaFin);\r\n        setPresupuesto(proyecto.presupuesto);\r\n        setEstado(proyecto.estado);\r\n        setResponsable(proyecto.u_usuario);\r\n\r\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\r\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Obtener los hitos de la API\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\r\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones simples para el plan de prueba\r\n    if ( !hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba  || !criterrioAceptacion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      hitoSeleccionado, // Incluir el hito seleccionado\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      criterrioAceptacion,\r\n      imagenPrueba, // Aquí también debes incluir la imagen en el objeto\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      // Aquí puedes enviar el plan de prueba a la API\r\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\r\n\r\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\r\n        setShowAlert({\r\n          severity: 'success',\r\n          message: response.data.msg,\r\n        });\r\n\r\n        // Redirigir después de 2 segundos\r\n        setTimeout(() => {\r\n          navigate('/proyectos/tareas');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n\r\n      if (error.response && error.response.data && error.response.data.msg) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: error.response.data.msg,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Habilitar solo los campos debajo del primer botón\r\n  const handleEnableForm = () => {\r\n    setFormularioHabilitado(true);\r\n  };\r\n\r\n  // Manejar la selección de un hito\r\n  const handleHitoSeleccionado = async (e) => {\r\n    const hitoId = e.target.value;\r\n    setHitoSeleccionado(hitoId);\r\n\r\n    // Obtener la descripción del hito seleccionado\r\n    const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n    if (hito) {\r\n      setDescripcionHito(hito.descripcion);\r\n    } else {\r\n      setDescripcionHito('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000}\r\n          sx={{ mb: 4 }}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Test Plan\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {/* Información del Proyecto - Solo Lectura */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nombre del Proyecto\"\r\n              value={nombreProyecto}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Inicio\"\r\n              type=\"date\"\r\n              value={fechaInicio}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Fin\"\r\n              type=\"date\"\r\n              value={fechaFin}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Presupuesto\"\r\n              value={presupuesto}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Estado\"\r\n              value={estado}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Responsable\"\r\n              value={responsable}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n        <Grid item xs={12}>\r\n            <Button variant=\"contained\" fullWidth onClick={handleEnableForm}>\r\n              Habilitar Formulario\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Formulario del plan de prueba */}\r\n        {formularioHabilitado && (\r\n          <>\r\n            <Grid container spacing={2} mt={3}>\r\n              <Grid item xs={12} sm={12}>\r\n              <InputLabel>Selecciona un Hito</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  value={hitoSeleccionado}\r\n                  onChange={(e) => handleHitoSeleccionado(e.target.value)}\r\n                  displayEmpty // Para mostrar el placeholder aunque no se haya seleccionado nada\r\n                  disabled={!formularioHabilitado} // Solo habilitar si el formulario está habilitado\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\" disabled>Selecciona un hito...</MenuItem> {/* Este es el placeholder */}\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito.id_hito} value={hito.id_hito}>\r\n                      {hito.nombre_hito}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Descripción del Plan de Prueba\"\r\n                  value={descripcionHito}\r\n                  disabled={true}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Resultado Esperado\"\r\n                  value={resultadoEsperado}\r\n                  onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Prueba Realizada\"\r\n                  value={pruebaRealizada}\r\n                  onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n               <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Criterio de aceptación\"\r\n                  value={criterrioAceptacion}\r\n                  onChange={(e) => setCriterrioAceptacion(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  multiline // Esta propiedad convierte el campo en un textarea\r\n                  rows={4} // Opcional: puedes establecer el número de filas visibles\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  fullWidth\r\n                  value={estadoPrueba}\r\n                  onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                  displayEmpty // Muestra el placeholder aunque no se haya seleccionado nada\r\n                  disabled={!formularioHabilitado} // Solo habilitar si el formulario está habilitado\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\" disabled>Selecciona un estado...</MenuItem> {/* Placeholder */}\r\n                  <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n                  <MenuItem value=\"Rechazada\">Rechazada</MenuItem>\r\n                  <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n                  <MenuItem value=\"Bloqueado\">Bloqueado</MenuItem>\r\n                  <MenuItem value=\"Desconocido\">Desconocido</MenuItem>\r\n                  <MenuItem value=\"Requiere más pruebas\">Requiere más pruebas</MenuItem>\r\n                  <MenuItem value=\"No aplicable\">No aplicable</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n\r\n              {/* Subida de imagen */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  component=\"label\"\r\n                  fullWidth\r\n                >\r\n                  Subir Imagen\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    hidden\r\n                    onChange={handleImagenChange}\r\n                  />\r\n                </Button>\r\n                {imagenPrueba && (\r\n                  <Typography variant=\"body2\" mt={1}>\r\n                    Imagen seleccionada: {imagenPrueba.name}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n             <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                >\r\n                  Enviar Plan de Prueba\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}