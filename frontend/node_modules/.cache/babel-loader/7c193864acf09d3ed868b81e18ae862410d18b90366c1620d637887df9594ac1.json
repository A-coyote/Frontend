{"ast":null,"code":"// import React, { useEffect, useState, useCallback } from 'react';\n// import Box from '@mui/material/Box';\n// import Typography from '@mui/material/Typography';\n// import { createTheme } from '@mui/material/styles';\n// import DescriptionIcon from '@mui/icons-material/Description';\n// import PersonIcon from '@mui/icons-material/Person';\n// import LockIcon from '@mui/icons-material/Lock';\n// import SecurityIcon from '@mui/icons-material/Security';\n// import { AppProvider } from '@toolpad/core/AppProvider';\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\n// import { useNavigate, Routes, Route } from 'react-router-dom';\n// import axios from 'axios';\n// import Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\n// import { jwtDecode } from 'jwt-decode';\n\n// const demoTheme = createTheme({\n//     palette: {\n//         mode: 'light',\n//     },\n// });\n\n// const iconMap = {\n//     Seguridad: <SecurityIcon />,\n//     Roles: <PersonIcon />,\n//     Usuarios: <DescriptionIcon />,\n//     Permisos: <LockIcon />,\n// };\n\n// export default function DashboardLayoutNavigationLinks() {\n//     const navigate = useNavigate();\n//     const [menuItems, setMenuItems] = useState([]);\n//     const token = localStorage.getItem('token');\n//     const isAuthenticated = Boolean(token);\n\n//     const fetchMenus = useCallback(async () => {\n//         if (!token) return;\n\n//         const decoded = jwtDecode(token);\n//         const username = decoded.user.username;\n\n//         try {\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\n//             console.log('API Response:', response.data); // Log para verificar la respuesta\n//             setMenuItems(response.data);\n//         } catch (error) {\n//             console.error('Error fetching menus:', error);\n//         }\n//     }, [token]);\n\n//     useEffect(() => {\n//         if (!isAuthenticated) {\n//             console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\n//             navigate('/login');\n//         } else {\n//             fetchMenus();\n//         }\n//     }, [isAuthenticated, fetchMenus, navigate]);\n\n//     // Ajustar cómo generamos las rutas\n//     const handleMenuClick = (url) => {\n//         if (url) {\n//             console.log('Navegando a:', url); // Para depuración\n//             // Aquí cambiamos la ruta para que no tenga duplicación\n//             navigate(`/dashboard/${url}`); // Ahora no hacemos `trim()`, se utiliza directamente\n//         }\n//     };\n\n//     // Organiza el menú\n//     const navigation = menuItems.map((item) => {\n//         if (item.ParentMenuID === 0) {\n//             return {\n//                 segment: item.MenuURL, // Aquí usas directamente MenuURL\n//                 title: item.DisplayName,\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\n//                 children: menuItems\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\n//                     .map((subItem) => ({\n//                         segment: subItem.MenuURL, // Aquí también usas MenuURL\n//                         title: subItem.DisplayName,\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\n//                         onClick: () => handleMenuClick(subItem.MenuURL), // Usamos MenuURL correctamente\n//                     })),\n//                 onClick: () => handleMenuClick(item.MenuURL), // Usamos MenuURL correctamente\n//             };\n//         }\n//         return null;\n//     }).filter(Boolean);\n\n//     return (\n//         <AppProvider navigation={navigation} theme={demoTheme}>\n//             <DashboardLayout>\n//                 <Routes>\n//                     {/* Aquí aseguramos que las rutas dinámicas sean correctas */}\n//                     {menuItems.map((item) => (\n//                         <Route\n//                             key={item.MenuID}\n//                             path={`/dashboard/${item.MenuURL}`} // Usamos MenuURL sin duplicación\n//                             element={\n//                                 item.MenuURL === 'seguridad/usuarios' ? <Usuario /> : <Welcome />\n//                             }\n//                         />\n//                     ))}\n//                     {/* Aquí está el welcome page, como ruta principal */}\n//                     <Route path=\"/dashboard\" element={<Welcome />} />\n//                     <Route path=\"*\" element={<Welcome />} />\n//                 </Routes>\n//             </DashboardLayout>\n//         </AppProvider>\n//     );\n// }\n\n// function Welcome() {\n//     return (\n//         <Box\n//             sx={{\n//                 py: 35,\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 alignItems: 'center',\n//                 textAlign: 'center',\n//             }}\n//         >\n//             <Typography variant=\"h4\">Bienvenido al Gestor de Control de Calidad!</Typography>\n//         </Box>\n//     );\n// }\n\n// ******************","map":{"version":3,"names":[],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardPageLayout.js"],"sourcesContent":["// import React, { useEffect, useState, useCallback } from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme } from '@mui/material/styles';\r\n// import DescriptionIcon from '@mui/icons-material/Description';\r\n// import PersonIcon from '@mui/icons-material/Person';\r\n// import LockIcon from '@mui/icons-material/Lock';\r\n// import SecurityIcon from '@mui/icons-material/Security';\r\n// import { AppProvider } from '@toolpad/core/AppProvider';\r\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\n// import { useNavigate, Routes, Route } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// const demoTheme = createTheme({\r\n//     palette: {\r\n//         mode: 'light',\r\n//     },\r\n// });\r\n\r\n// const iconMap = {\r\n//     Seguridad: <SecurityIcon />,\r\n//     Roles: <PersonIcon />,\r\n//     Usuarios: <DescriptionIcon />,\r\n//     Permisos: <LockIcon />,\r\n// };\r\n\r\n// export default function DashboardLayoutNavigationLinks() {\r\n//     const navigate = useNavigate();\r\n//     const [menuItems, setMenuItems] = useState([]);\r\n//     const token = localStorage.getItem('token');\r\n//     const isAuthenticated = Boolean(token);\r\n\r\n//     const fetchMenus = useCallback(async () => {\r\n//         if (!token) return;\r\n\r\n//         const decoded = jwtDecode(token);\r\n//         const username = decoded.user.username;\r\n\r\n//         try {\r\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\r\n//             console.log('API Response:', response.data); // Log para verificar la respuesta\r\n//             setMenuItems(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching menus:', error);\r\n//         }\r\n//     }, [token]);\r\n\r\n//     useEffect(() => {\r\n//         if (!isAuthenticated) {\r\n//             console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\r\n//             navigate('/login');\r\n//         } else {\r\n//             fetchMenus();\r\n//         }\r\n//     }, [isAuthenticated, fetchMenus, navigate]);\r\n\r\n//     // Ajustar cómo generamos las rutas\r\n//     const handleMenuClick = (url) => {\r\n//         if (url) {\r\n//             console.log('Navegando a:', url); // Para depuración\r\n//             // Aquí cambiamos la ruta para que no tenga duplicación\r\n//             navigate(`/dashboard/${url}`); // Ahora no hacemos `trim()`, se utiliza directamente\r\n//         }\r\n//     };\r\n\r\n//     // Organiza el menú\r\n//     const navigation = menuItems.map((item) => {\r\n//         if (item.ParentMenuID === 0) {\r\n//             return {\r\n//                 segment: item.MenuURL, // Aquí usas directamente MenuURL\r\n//                 title: item.DisplayName,\r\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\r\n//                 children: menuItems\r\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\r\n//                     .map((subItem) => ({\r\n//                         segment: subItem.MenuURL, // Aquí también usas MenuURL\r\n//                         title: subItem.DisplayName,\r\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\r\n//                         onClick: () => handleMenuClick(subItem.MenuURL), // Usamos MenuURL correctamente\r\n//                     })),\r\n//                 onClick: () => handleMenuClick(item.MenuURL), // Usamos MenuURL correctamente\r\n//             };\r\n//         }\r\n//         return null;\r\n//     }).filter(Boolean);\r\n\r\n//     return (\r\n//         <AppProvider navigation={navigation} theme={demoTheme}>\r\n//             <DashboardLayout>\r\n//                 <Routes>\r\n//                     {/* Aquí aseguramos que las rutas dinámicas sean correctas */}\r\n//                     {menuItems.map((item) => (\r\n//                         <Route\r\n//                             key={item.MenuID}\r\n//                             path={`/dashboard/${item.MenuURL}`} // Usamos MenuURL sin duplicación\r\n//                             element={\r\n//                                 item.MenuURL === 'seguridad/usuarios' ? <Usuario /> : <Welcome />\r\n//                             }\r\n//                         />\r\n//                     ))}\r\n//                     {/* Aquí está el welcome page, como ruta principal */}\r\n//                     <Route path=\"/dashboard\" element={<Welcome />} />\r\n//                     <Route path=\"*\" element={<Welcome />} />\r\n//                 </Routes>\r\n//             </DashboardLayout>\r\n//         </AppProvider>\r\n//     );\r\n// }\r\n\r\n// function Welcome() {\r\n//     return (\r\n//         <Box\r\n//             sx={{\r\n//                 py: 35,\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//                 alignItems: 'center',\r\n//                 textAlign: 'center',\r\n//             }}\r\n//         >\r\n//             <Typography variant=\"h4\">Bienvenido al Gestor de Control de Calidad!</Typography>\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ******************\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}