{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import axios from'axios';import{Pie}from'react-chartjs-2';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import{jwtDecode}from'jwt-decode';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const estadosPosibles=['Aprobado','Rechazada','Pendiente','Bloqueado','Desconocido','Requiere m치s pruebas','No aplicable'];const DashboardChartsPrueba=()=>{const[proyectos,setProyectos]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedProyecto,setSelectedProyecto]=useState('');const[noData,setNoData]=useState(false);const token=localStorage.getItem('token');const isAuthenticated=Boolean(token);const navigate=useNavigate();// Redirect to login if not authenticated\nuseEffect(()=>{if(!isAuthenticated){navigate('/login');}},[navigate,isAuthenticated]);const fetchProyectos=useCallback(async()=>{if(!isAuthenticated)return;setLoading(true);setNoData(false);setError(null);try{var _decoded$user;const decoded=jwtDecode(token);const id=(_decoded$user=decoded.user)===null||_decoded$user===void 0?void 0:_decoded$user.id;const config={headers:{'x-auth-token':token}};const response=await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`,config);const proyectosData=response.data;if(!proyectosData||Object.keys(proyectosData).length===0){setNoData(true);setProyectos({});return;}setProyectos(proyectosData);setSelectedProyecto(Object.keys(proyectosData)[0]);// Seleccionar el primer proyecto por defecto\nsetNoData(false);}catch(err){console.error('Error al obtener los proyectos:',err);setError('No se pudieron cargar los proyectos');setProyectos({});setNoData(true);}finally{setLoading(false);}},[isAuthenticated,token]);useEffect(()=>{fetchProyectos();},[fetchProyectos]);// Preparar datos para el gr치fico\nconst chartData={labels:estadosPosibles,datasets:[{data:selectedProyecto?estadosPosibles.map(estado=>proyectos[selectedProyecto][estado.toLowerCase()]||0):[],backgroundColor:['green','red','yellow','orange','gray','purple','blue']// Colores para cada estado\n}]};const handleProyectoChange=e=>{setSelectedProyecto(e.target.value);};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Cargando datos...\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center'},children:\"Estado de pruebas por proyecto\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'20px',display:'flex',justifyContent:'center',alignItems:'center',gap:'10px'},children:/*#__PURE__*/_jsx(\"select\",{value:selectedProyecto,onChange:handleProyectoChange,style:{padding:'5px',width:'200px'},children:Object.keys(proyectos).map(nombreProyecto=>/*#__PURE__*/_jsx(\"option\",{value:nombreProyecto,children:nombreProyecto},nombreProyecto))})}),noData&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',fontSize:'18px',color:'#888'},children:/*#__PURE__*/_jsx(\"p\",{children:\"No hay proyectos en el estado seleccionado. Intenta con otro estado.\"})}),error&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',fontSize:'18px',color:'red'},children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsx(Pie,{data:chartData,options:{responsive:true,plugins:{legend:{position:'top'},tooltip:{callbacks:{label:tooltipItem=>{const index=tooltipItem.dataIndex;const label=chartData.labels[index]||'Desconocido';const value=tooltipItem.raw;return`${label}: ${value} Prueba`;}}}}}})]});};export default DashboardChartsPrueba;","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","useNavigate","jsx","_jsx","jsxs","_jsxs","register","estadosPosibles","DashboardChartsPrueba","proyectos","setProyectos","loading","setLoading","error","setError","selectedProyecto","setSelectedProyecto","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","navigate","fetchProyectos","_decoded$user","decoded","id","user","config","headers","response","get","proyectosData","data","Object","keys","length","err","console","chartData","labels","datasets","map","estado","toLowerCase","backgroundColor","handleProyectoChange","e","target","value","children","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","onChange","padding","width","nombreProyecto","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","index","dataIndex","raw"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstoPrueba.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere m치s pruebas', 'No aplicable'];\r\n\r\nconst DashboardChartsPrueba = () => {\r\n    const [proyectos, setProyectos] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedProyecto, setSelectedProyecto] = useState('');\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // Redirect to login if not authenticated\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            navigate('/login');\r\n        }\r\n    }, [navigate, isAuthenticated]);\r\n    \r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        setLoading(true);\r\n        setNoData(false);\r\n        setError(null);\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id;\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n            };\r\n\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\r\n            const proyectosData = response.data;\r\n\r\n            if (!proyectosData || Object.keys(proyectosData).length === 0) {\r\n                setNoData(true);\r\n                setProyectos({});\r\n                return;\r\n            }\r\n\r\n            setProyectos(proyectosData);\r\n            setSelectedProyecto(Object.keys(proyectosData)[0]); // Seleccionar el primer proyecto por defecto\r\n            setNoData(false);\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No se pudieron cargar los proyectos');\r\n            setProyectos({});\r\n            setNoData(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        fetchProyectos();\r\n    }, [fetchProyectos]);\r\n\r\n    // Preparar datos para el gr치fico\r\n    const chartData = {\r\n        labels: estadosPosibles,\r\n        datasets: [{\r\n            data: selectedProyecto ? estadosPosibles.map(estado => proyectos[selectedProyecto][estado.toLowerCase()] || 0) : [],\r\n            backgroundColor: ['green', 'red', 'yellow', 'orange', 'gray', 'purple', 'blue'], // Colores para cada estado\r\n        }],\r\n    };\r\n\r\n    const handleProyectoChange = (e) => {\r\n        setSelectedProyecto(e.target.value);\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Estado de pruebas por proyecto</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <select\r\n                    value={selectedProyecto}\r\n                    onChange={handleProyectoChange}\r\n                    style={{ padding: '5px', width: '200px' }}\r\n                >\r\n                    {Object.keys(proyectos).map(nombreProyecto => (\r\n                        <option key={nombreProyecto} value={nombreProyecto}>{nombreProyecto}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {noData && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: '#888' }}>\r\n                    <p>No hay proyectos en el estado seleccionado. Intenta con otro estado.</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: 'red' }}>\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            <Pie\r\n                data={chartData}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const index = tooltipItem.dataIndex;\r\n                                    const label = chartData.labels[index] || 'Desconocido';\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${label}: ${value} Prueba`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsPrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}