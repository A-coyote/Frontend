{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstados.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DashboardChartsEstados = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({\n    labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n    datasets: [],\n    vencidos: {\n      enProgreso: 0,\n      finalizados: 0,\n      suspendidos: 0\n    },\n    noVencidos: {\n      enProgreso: 0,\n      finalizados: 0,\n      suspendidos: 0\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id; // Verifica que `user` exista en el token.\n\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoProyectos/${id}`, config);\n      const {\n        labels,\n        datasets,\n        vencidos,\n        noVencidos\n      } = response.data;\n\n      // Asegúrate de que todos los datos sean correctos\n      if (!Array.isArray(labels) || !Array.isArray(datasets) || !vencidos || !noVencidos) {\n        setError('Datos incompletos o incorrectos recibidos de la API.');\n        return;\n      }\n      setProyectos({\n        labels,\n        datasets: [{\n          label: \"Proyectos Vencidos\",\n          data: [vencidos.enProgreso, vencidos.finalizados, vencidos.suspendidos],\n          backgroundColor: [\"yellow\", \"red\", \"gray\"]\n        }, {\n          label: \"Proyectos No Vencidos\",\n          data: [noVencidos.enProgreso, noVencidos.finalizados, noVencidos.suspendidos],\n          backgroundColor: [\"blue\", \"green\", \"orange\"]\n        }],\n        vencidos,\n        noVencidos\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error al obtener los proyectos:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Error desconocido';\n      setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    fetchProyectos();\n  }, [isAuthenticated, fetchProyectos]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 25\n  }, this);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n  if (!proyectos.labels.length || !proyectos.datasets.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron proyectos asignados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Estado de los Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: proyectos.labels,\n        datasets: proyectos.datasets\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                var _proyectos$datasets$d;\n                const datasetIndex = tooltipItem.datasetIndex;\n                const datasetLabel = ((_proyectos$datasets$d = proyectos.datasets[datasetIndex]) === null || _proyectos$datasets$d === void 0 ? void 0 : _proyectos$datasets$d.label) || 'Desconocido';\n                const state = proyectos.labels[tooltipItem.dataIndex];\n                const value = tooltipItem.raw;\n                return `${datasetLabel}: ${value} Proyectos (${state})`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsEstados, \"8I8ul49trOSU+j/3oLFRt3B6PD0=\");\n_c = DashboardChartsEstados;\nexport default DashboardChartsEstados;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsEstados\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","DashboardChartsEstados","_s","proyectos","setProyectos","labels","datasets","vencidos","enProgreso","finalizados","suspendidos","noVencidos","loading","setLoading","error","setError","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","response","get","data","Array","isArray","label","backgroundColor","err","_err$response","_err$response$data","console","errorMsg","msg","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","textAlign","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","_proyectos$datasets$d","datasetIndex","datasetLabel","state","dataIndex","value","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstados.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DashboardChartsEstados = () => {\r\n    const [proyectos, setProyectos] = useState({\r\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n        datasets: [],\r\n        vencidos: {\r\n            enProgreso: 0,\r\n            finalizados: 0,\r\n            suspendidos: 0\r\n        },\r\n        noVencidos: {\r\n            enProgreso: 0,\r\n            finalizados: 0,\r\n            suspendidos: 0\r\n        }\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id; // Verifica que `user` exista en el token.\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token, \r\n                },\r\n            };\r\n\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/grafica/EstadoProyectos/${id}`,\r\n                config\r\n            );\r\n\r\n            const { labels, datasets, vencidos, noVencidos } = response.data;\r\n\r\n            // Asegúrate de que todos los datos sean correctos\r\n            if (\r\n                !Array.isArray(labels) || \r\n                !Array.isArray(datasets) ||\r\n                !vencidos || \r\n                !noVencidos\r\n            ) {\r\n                setError('Datos incompletos o incorrectos recibidos de la API.');\r\n                return;\r\n            }\r\n\r\n            setProyectos({\r\n                labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"Proyectos Vencidos\",\r\n                        data: [\r\n                            vencidos.enProgreso,\r\n                            vencidos.finalizados,\r\n                            vencidos.suspendidos\r\n                        ],\r\n                        backgroundColor: [\"yellow\", \"red\", \"gray\"],\r\n                    },\r\n                    {\r\n                        label: \"Proyectos No Vencidos\",\r\n                        data: [\r\n                            noVencidos.enProgreso,\r\n                            noVencidos.finalizados,\r\n                            noVencidos.suspendidos\r\n                        ],\r\n                        backgroundColor: [\"blue\", \"green\", \"orange\"],\r\n                    }\r\n                ],\r\n                vencidos,\r\n                noVencidos\r\n            });\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            const errorMsg = err.response?.data?.msg || 'Error desconocido';\r\n            setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) return;\r\n        fetchProyectos();\r\n    }, [isAuthenticated, fetchProyectos]);\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (!proyectos.labels.length || !proyectos.datasets.length) {\r\n        return <div>No se encontraron proyectos asignados.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{textAlign : 'center'}}>Estado de los Proyectos</h2>\r\n            <Pie\r\n                data={{\r\n                    labels: proyectos.labels,\r\n                    datasets: proyectos.datasets,\r\n                }}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const datasetIndex = tooltipItem.datasetIndex;\r\n                                    const datasetLabel = proyectos.datasets[datasetIndex]?.label || 'Desconocido';\r\n                                    const state = proyectos.labels[tooltipItem.dataIndex];\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${datasetLabel}: ${value} Proyectos (${state})`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsEstados;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}