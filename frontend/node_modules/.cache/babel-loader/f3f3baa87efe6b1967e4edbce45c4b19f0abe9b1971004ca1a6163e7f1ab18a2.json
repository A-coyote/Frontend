{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstados.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DashboardChartsEstados = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({\n    labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n    datasets: [],\n    estadoProyectos: {\n      enProgreso: 0,\n      finalizados: 0,\n      suspendidos: 0\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [startDate, setStartDate] = useState(''); // Estado para la fecha de inicio\n  const [endDate, setEndDate] = useState(''); // Estado para la fecha de fin\n\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id; // Verifica que `user` exista en el token.\n\n      const config = {\n        headers: {\n          'x-auth-token': token\n        },\n        params: {} // Añadimos parámetros de fecha para la solicitud\n      };\n\n      // Solo añadimos fechas a la solicitud si están definidas\n      if (startDate) config.params.startDate = startDate;\n      if (endDate) config.params.endDate = endDate;\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoProyectos/${id}`, config);\n\n      // Verifica la respuesta de la API\n      console.log('Datos recibidos de la API:', response.data);\n      const {\n        estadoProyectos\n      } = response.data;\n      if (!estadoProyectos) {\n        setError('Datos incompletos recibidos de la API.');\n        return;\n      }\n      setProyectos({\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n        datasets: [{\n          label: \"Cantidad de Proyectos\",\n          data: [estadoProyectos.enProgreso, estadoProyectos.finalizados, estadoProyectos.suspendidos],\n          backgroundColor: [\"blue\", \"green\", \"orange\"] // Colores para los proyectos\n        }],\n        estadoProyectos\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error al obtener los proyectos:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Error desconocido';\n      setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token, startDate, endDate]);\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    fetchProyectos();\n  }, [isAuthenticated, fetchProyectos]);\n  const handleDateChange = () => {\n    setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\n    fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 25\n  }, this);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Verifica si los datos están correctamente estructurados antes de renderizar\n  if (!proyectos.datasets || proyectos.datasets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron proyectos asignados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Estado de los Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de inicio: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Fecha de fin: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDateChange,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Filtrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: proyectos.labels,\n        datasets: proyectos.datasets\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                var _proyectos$datasets$d;\n                const datasetIndex = tooltipItem.datasetIndex;\n                const datasetLabel = ((_proyectos$datasets$d = proyectos.datasets[datasetIndex]) === null || _proyectos$datasets$d === void 0 ? void 0 : _proyectos$datasets$d.label) || 'Desconocido';\n                const state = proyectos.labels[tooltipItem.dataIndex];\n                const value = tooltipItem.raw;\n                return `${datasetLabel}: ${value} Proyectos (${state})`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsEstados, \"rPtVA153BFKKagZ6okDbKHSrBR4=\");\n_c = DashboardChartsEstados;\nexport default DashboardChartsEstados;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsEstados\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","DashboardChartsEstados","_s","proyectos","setProyectos","labels","datasets","estadoProyectos","enProgreso","finalizados","suspendidos","loading","setLoading","error","setError","startDate","setStartDate","endDate","setEndDate","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","params","response","get","console","log","data","label","backgroundColor","err","_err$response","_err$response$data","errorMsg","msg","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","textAlign","marginBottom","type","value","onChange","e","target","marginLeft","onClick","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","_proyectos$datasets$d","datasetIndex","datasetLabel","state","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstados.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DashboardChartsEstados = () => {\r\n    const [proyectos, setProyectos] = useState({\r\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n        datasets: [],\r\n        estadoProyectos: {\r\n            enProgreso: 0,\r\n            finalizados: 0,\r\n            suspendidos: 0\r\n        }\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');  // Estado para la fecha de inicio\r\n    const [endDate, setEndDate] = useState('');      // Estado para la fecha de fin\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id; // Verifica que `user` exista en el token.\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token, \r\n                },\r\n                params: {} // Añadimos parámetros de fecha para la solicitud\r\n            };\r\n\r\n            // Solo añadimos fechas a la solicitud si están definidas\r\n            if (startDate) config.params.startDate = startDate;\r\n            if (endDate) config.params.endDate = endDate;\r\n\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/grafica/EstadoProyectos/${id}`,\r\n                config\r\n            );\r\n\r\n            // Verifica la respuesta de la API\r\n            console.log('Datos recibidos de la API:', response.data);\r\n\r\n            const { estadoProyectos } = response.data;\r\n\r\n            if (!estadoProyectos) {\r\n                setError('Datos incompletos recibidos de la API.');\r\n                return;\r\n            }\r\n\r\n            setProyectos({\r\n                labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Cantidad de Proyectos\",\r\n                        data: [\r\n                            estadoProyectos.enProgreso,\r\n                            estadoProyectos.finalizados,\r\n                            estadoProyectos.suspendidos\r\n                        ],\r\n                        backgroundColor: [\"blue\", \"green\", \"orange\"], // Colores para los proyectos\r\n                    }\r\n                ],\r\n                estadoProyectos,\r\n            });\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            const errorMsg = err.response?.data?.msg || 'Error desconocido';\r\n            setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token, startDate, endDate]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) return;\r\n        fetchProyectos();\r\n    }, [isAuthenticated, fetchProyectos]);\r\n\r\n    const handleDateChange = () => {\r\n        setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\r\n        fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    // Verifica si los datos están correctamente estructurados antes de renderizar\r\n    if (!proyectos.datasets || proyectos.datasets.length === 0) {\r\n        return <div>No se encontraron proyectos asignados.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Estado de los Proyectos</h2>\r\n\r\n            {/* Filtros de fecha */}\r\n            <div style={{ marginBottom: '20px', textAlign: 'center' }}>\r\n                <label>Fecha de inicio: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n                <label style={{ marginLeft: '10px' }}>Fecha de fin: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n                <button onClick={handleDateChange} style={{ marginLeft: '10px' }}>\r\n                    Filtrar\r\n                </button>\r\n            </div>\r\n\r\n            <Pie\r\n                data={{\r\n                    labels: proyectos.labels,\r\n                    datasets: proyectos.datasets,\r\n                }}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const datasetIndex = tooltipItem.datasetIndex;\r\n                                    const datasetLabel = proyectos.datasets[datasetIndex]?.label || 'Desconocido';\r\n                                    const state = proyectos.labels[tooltipItem.dataIndex];\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${datasetLabel}: ${value} Proyectos (${state})`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsEstados;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}