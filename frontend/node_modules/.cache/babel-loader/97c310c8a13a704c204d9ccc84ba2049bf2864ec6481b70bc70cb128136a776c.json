{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  // Obtener el token del almacenamiento local\n  const token = localStorage.getItem('token');\n  console.log(\"Token obtenido en ProtectedRoute:\", token);\n\n  // Si no hay token, redirige al login\n  if (!token) {\n    console.log(\"Token no encontrado. Redirigiendo a login.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  try {\n    // Decodificar el token\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n\n    // Verificar si el token ha expirado\n    if (decoded.exp < currentTime) {\n      console.log(\"Token expirado. Redirigiendo a login.\");\n      localStorage.removeItem('token'); // Elimina el token expirado\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Verificar si el rol del usuario está en la lista de roles permitidos\n    if (!allowedRoles.includes(decoded.role)) {\n      console.log(\"Rol no autorizado. Redirigiendo a acceso denegado.\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/access-denied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this); // Redirige a una página de acceso denegado\n    }\n\n    // Si el token es válido, no está expirado y el rol es autorizado, renderiza el componente hijo\n    console.log(\"Token válido, no expirado, y rol autorizado:\", decoded);\n    return children;\n  } catch (error) {\n    console.error(\"Error al decodificar el token:\", error);\n    // Si el token es inválido, redirige al login\n    localStorage.removeItem('token'); // Elimina el token inválido\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","token","localStorage","getItem","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","currentTime","Date","now","exp","removeItem","includes","role","error","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n    // Obtener el token del almacenamiento local\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"Token obtenido en ProtectedRoute:\", token);\r\n\r\n    // Si no hay token, redirige al login\r\n    if (!token) {\r\n        console.log(\"Token no encontrado. Redirigiendo a login.\");\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    try {\r\n        // Decodificar el token\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        // Verificar si el token ha expirado\r\n        if (decoded.exp < currentTime) {\r\n            console.log(\"Token expirado. Redirigiendo a login.\");\r\n            localStorage.removeItem('token'); // Elimina el token expirado\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        // Verificar si el rol del usuario está en la lista de roles permitidos\r\n        if (!allowedRoles.includes(decoded.role)) {\r\n            console.log(\"Rol no autorizado. Redirigiendo a acceso denegado.\");\r\n            return <Navigate to=\"/access-denied\" />; // Redirige a una página de acceso denegado\r\n        }\r\n\r\n        // Si el token es válido, no está expirado y el rol es autorizado, renderiza el componente hijo\r\n        console.log(\"Token válido, no expirado, y rol autorizado:\", decoded);\r\n        return children;\r\n    } catch (error) {\r\n        console.error(\"Error al decodificar el token:\", error);\r\n        // Si el token es inválido, redirige al login\r\n        localStorage.removeItem('token'); // Elimina el token inválido\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACnD;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,KAAK,CAAC;;EAEvD;EACA,IAAI,CAACA,KAAK,EAAE;IACRG,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,oBAAOR,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,IAAI;IACA;IACA,MAAMC,OAAO,GAAGhB,SAAS,CAACM,KAAK,CAAC;IAChC,MAAMW,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;;IAErC;IACA,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;MAC3BR,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDH,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;MAClC,oBAAOnB,OAAA,CAACH,QAAQ;QAACY,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnC;;IAEA;IACA,IAAI,CAACV,YAAY,CAACiB,QAAQ,CAACN,OAAO,CAACO,IAAI,CAAC,EAAE;MACtCd,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjE,oBAAOR,OAAA,CAACH,QAAQ;QAACY,EAAE,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC,CAAC;IAC7C;;IAEA;IACAN,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEM,OAAO,CAAC;IACpE,OAAOZ,QAAQ;EACnB,CAAC,CAAC,OAAOoB,KAAK,EAAE;IACZf,OAAO,CAACe,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD;IACAjB,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,oBAAOnB,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;AACJ,CAAC;AAACU,EAAA,GAtCItB,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}