{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstados.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DashboardChartsEstados = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({\n    labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n    datasets: [{\n      label: \"Cantidad de Proyectos\",\n      data: [0, 0, 0],\n      // Valores por defecto (0) en caso de no haber proyectos\n      backgroundColor: [\"blue\", \"green\", \"orange\"] // Colores para los proyectos\n    }],\n    estadoProyectos: {\n      enProgreso: 0,\n      finalizados: 0,\n      suspendidos: 0\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [startDate, setStartDate] = useState(''); // Estado para la fecha de inicio\n  const [endDate, setEndDate] = useState(''); // Estado para la fecha de fin\n  const [noData, setNoData] = useState(false); // Nuevo estado para manejar la falta de datos\n\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id; // Verifica que `user` exista en el token.\n\n      const config = {\n        headers: {\n          'x-auth-token': token\n        },\n        params: {} // Añadimos parámetros de fecha para la solicitud\n      };\n\n      // Solo añadimos fechas a la solicitud si están definidas\n      if (startDate) config.params.startDate = startDate;\n      if (endDate) config.params.endDate = endDate;\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoProyectos/${id}`, config);\n\n      // Verifica la respuesta de la API\n      console.log('Datos recibidos de la API:', response.data);\n      const {\n        estadoProyectos\n      } = response.data;\n      if (!estadoProyectos || estadoProyectos.enProgreso === 0 && estadoProyectos.finalizados === 0 && estadoProyectos.suspendidos === 0) {\n        setNoData(true); // Si no hay proyectos, cambiamos el estado `noData`\n        setError(null); // Reseteamos cualquier error previo\n        return;\n      }\n      setProyectos({\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n        datasets: [{\n          label: \"Cantidad de Proyectos\",\n          data: [estadoProyectos.enProgreso, estadoProyectos.finalizados, estadoProyectos.suspendidos],\n          backgroundColor: [\"blue\", \"green\", \"orange\"] // Colores para los proyectos\n        }],\n        estadoProyectos\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error al obtener los proyectos:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Error desconocido';\n      setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token, startDate, endDate]);\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    fetchProyectos();\n  }, [isAuthenticated, fetchProyectos]);\n  const handleDateChange = () => {\n    setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\n    setNoData(false); // Resetear el estado de `noData` antes de cargar los datos\n    fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }, this);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Si no hay proyectos para mostrar\n  if (noData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: '#888'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron proyectos para este rango de fechas. Intenta con otro per\\xEDodo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: proyectos.labels,\n          datasets: proyectos.datasets\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: tooltipItem => {\n                  var _proyectos$datasets$d;\n                  const datasetIndex = tooltipItem.datasetIndex;\n                  const datasetLabel = ((_proyectos$datasets$d = proyectos.datasets[datasetIndex]) === null || _proyectos$datasets$d === void 0 ? void 0 : _proyectos$datasets$d.label) || 'Desconocido';\n                  const state = proyectos.labels[tooltipItem.dataIndex];\n                  const value = tooltipItem.raw;\n                  return `${datasetLabel}: ${value} Proyectos (${state})`;\n                }\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Verifica si los datos están correctamente estructurados antes de renderizar\n  if (!proyectos.datasets || proyectos.datasets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron proyectos asignados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Estado de los Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de inicio: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Fecha de fin: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDateChange,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Filtrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: proyectos.labels,\n        datasets: proyectos.datasets\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                var _proyectos$datasets$d2;\n                const datasetIndex = tooltipItem.datasetIndex;\n                const datasetLabel = ((_proyectos$datasets$d2 = proyectos.datasets[datasetIndex]) === null || _proyectos$datasets$d2 === void 0 ? void 0 : _proyectos$datasets$d2.label) || 'Desconocido';\n                const state = proyectos.labels[tooltipItem.dataIndex];\n                const value = tooltipItem.raw;\n                return `${datasetLabel}: ${value} Proyectos (${state})`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsEstados, \"is58YrXOGOQf1wy0vfkP2KpvjaI=\");\n_c = DashboardChartsEstados;\nexport default DashboardChartsEstados;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsEstados\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","DashboardChartsEstados","_s","proyectos","setProyectos","labels","datasets","label","data","backgroundColor","estadoProyectos","enProgreso","finalizados","suspendidos","loading","setLoading","error","setError","startDate","setStartDate","endDate","setEndDate","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","params","response","get","console","log","err","_err$response","_err$response$data","errorMsg","msg","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","_proyectos$datasets$d","datasetIndex","datasetLabel","state","dataIndex","value","raw","length","marginBottom","type","onChange","e","target","marginLeft","onClick","_proyectos$datasets$d2","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstados.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DashboardChartsEstados = () => {\r\n    const [proyectos, setProyectos] = useState({\r\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n        datasets: [\r\n            {\r\n                label: \"Cantidad de Proyectos\",\r\n                data: [0, 0, 0], // Valores por defecto (0) en caso de no haber proyectos\r\n                backgroundColor: [\"blue\", \"green\", \"orange\"], // Colores para los proyectos\r\n            }\r\n        ],\r\n        estadoProyectos: {\r\n            enProgreso: 0,\r\n            finalizados: 0,\r\n            suspendidos: 0\r\n        }\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');  // Estado para la fecha de inicio\r\n    const [endDate, setEndDate] = useState('');      // Estado para la fecha de fin\r\n    const [noData, setNoData] = useState(false);    // Nuevo estado para manejar la falta de datos\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id; // Verifica que `user` exista en el token.\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token, \r\n                },\r\n                params: {} // Añadimos parámetros de fecha para la solicitud\r\n            };\r\n\r\n            // Solo añadimos fechas a la solicitud si están definidas\r\n            if (startDate) config.params.startDate = startDate;\r\n            if (endDate) config.params.endDate = endDate;\r\n\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/grafica/EstadoProyectos/${id}`,\r\n                config\r\n            );\r\n\r\n            // Verifica la respuesta de la API\r\n            console.log('Datos recibidos de la API:', response.data);\r\n\r\n            const { estadoProyectos } = response.data;\r\n\r\n            if (!estadoProyectos || \r\n                (estadoProyectos.enProgreso === 0 && estadoProyectos.finalizados === 0 && estadoProyectos.suspendidos === 0)) {\r\n                setNoData(true); // Si no hay proyectos, cambiamos el estado `noData`\r\n                setError(null);   // Reseteamos cualquier error previo\r\n                return;\r\n            }\r\n\r\n            setProyectos({\r\n                labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Cantidad de Proyectos\",\r\n                        data: [\r\n                            estadoProyectos.enProgreso,\r\n                            estadoProyectos.finalizados,\r\n                            estadoProyectos.suspendidos\r\n                        ],\r\n                        backgroundColor: [\"blue\", \"green\", \"orange\"], // Colores para los proyectos\r\n                    }\r\n                ],\r\n                estadoProyectos,\r\n            });\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            const errorMsg = err.response?.data?.msg || 'Error desconocido';\r\n            setError(`No se pudieron cargar los datos de los proyectos: ${errorMsg}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token, startDate, endDate]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) return;\r\n        fetchProyectos();\r\n    }, [isAuthenticated, fetchProyectos]);\r\n\r\n    const handleDateChange = () => {\r\n        setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\r\n        setNoData(false); // Resetear el estado de `noData` antes de cargar los datos\r\n        fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    // Si no hay proyectos para mostrar\r\n    if (noData) {\r\n        return (\r\n            <div style={{ textAlign: 'center', fontSize: '18px', color: '#888' }}>\r\n                <p>No se encontraron proyectos para este rango de fechas. Intenta con otro período.</p>\r\n                {/* Muestra la gráfica vacía */}\r\n                <Pie\r\n                    data={{\r\n                        labels: proyectos.labels,\r\n                        datasets: proyectos.datasets,\r\n                    }}\r\n                    options={{\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                            },\r\n                            tooltip: {\r\n                                callbacks: {\r\n                                    label: (tooltipItem) => {\r\n                                        const datasetIndex = tooltipItem.datasetIndex;\r\n                                        const datasetLabel = proyectos.datasets[datasetIndex]?.label || 'Desconocido';\r\n                                        const state = proyectos.labels[tooltipItem.dataIndex];\r\n                                        const value = tooltipItem.raw;\r\n                                        return `${datasetLabel}: ${value} Proyectos (${state})`;\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Verifica si los datos están correctamente estructurados antes de renderizar\r\n    if (!proyectos.datasets || proyectos.datasets.length === 0) {\r\n        return <div>No se encontraron proyectos asignados.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Estado de los Proyectos</h2>\r\n\r\n            {/* Filtros de fecha */}\r\n            <div style={{ marginBottom: '20px', textAlign: 'center' }}>\r\n                <label>Fecha de inicio: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n                <label style={{ marginLeft: '10px' }}>Fecha de fin: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n                <button onClick={handleDateChange} style={{ marginLeft: '10px' }}>\r\n                    Filtrar\r\n                </button>\r\n            </div>\r\n\r\n            <Pie\r\n                data={{\r\n                    labels: proyectos.labels,\r\n                    datasets: proyectos.datasets,\r\n                }}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const datasetIndex = tooltipItem.datasetIndex;\r\n                                    const datasetLabel = proyectos.datasets[datasetIndex]?.label || 'Desconocido';\r\n                                    const state = proyectos.labels[tooltipItem.dataIndex];\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${datasetLabel}: ${value} Proyectos (${state})`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsEstados;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}