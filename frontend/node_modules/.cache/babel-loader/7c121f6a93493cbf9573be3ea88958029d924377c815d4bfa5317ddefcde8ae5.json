{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstados.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DashboardChartsEstados = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({\n    labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n    datasets: [{\n      label: \"Cantidad de Proyectos\",\n      data: [0, 0, 0],\n      // Valores por defecto (0) en caso de no haber proyectos\n      backgroundColor: [\"blue\", \"green\", \"orange\"] // Colores para los proyectos\n    }]\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [startDate, setStartDate] = useState(''); // Estado para la fecha de inicio\n  const [endDate, setEndDate] = useState(''); // Estado para la fecha de fin\n  const [noData, setNoData] = useState(false); // Nuevo estado para manejar la falta de datos\n\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id; // Verifica que `user` exista en el token.\n\n      const config = {\n        headers: {\n          'x-auth-token': token\n        },\n        params: {} // Añadimos parámetros de fecha para la solicitud\n      };\n\n      // Solo añadimos fechas a la solicitud si están definidas\n      if (startDate) config.params.startDate = startDate;\n      if (endDate) config.params.endDate = endDate;\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoProyectos/${id}`, config);\n      console.log('Datos recibidos de la API:', response.data);\n      const {\n        estadoProyectos\n      } = response.data;\n\n      // Si no hay proyectos, indicamos que no hay datos y no mostramos el mensaje de error\n      if (!estadoProyectos || estadoProyectos.enProgreso === 0 && estadoProyectos.finalizados === 0 && estadoProyectos.suspendidos === 0) {\n        setNoData(true); // Indicamos que no hay proyectos\n        setError(null); // Reseteamos cualquier error previo\n        return;\n      }\n      setProyectos({\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n        datasets: [{\n          label: \"Cantidad de Proyectos\",\n          data: [estadoProyectos.enProgreso, estadoProyectos.finalizados, estadoProyectos.suspendidos],\n          backgroundColor: [\"blue\", \"green\", \"orange\"] // Colores para los proyectos\n        }]\n      });\n    } catch (err) {\n      console.error('Error al obtener los proyectos:', err);\n      setError('No hay proyectos en el rango de fechas'); // Mensaje de error si la solicitud falla\n      setProyectos({\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\n        datasets: [{\n          label: \"Cantidad de Proyectos\",\n          data: [0, 0, 0],\n          // Valores predeterminados para evitar que la gráfica desaparezca\n          backgroundColor: [\"blue\", \"green\", \"orange\"]\n        }]\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token, startDate, endDate]);\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    fetchProyectos();\n  }, [isAuthenticated, fetchProyectos]);\n  const handleDateChange = () => {\n    setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\n    setNoData(false); // Resetear el estado de `noData` antes de cargar los datos\n    fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\n  };\n  const handleClearDates = () => {\n    setStartDate('');\n    setEndDate('');\n    setLoading(true);\n    setNoData(false);\n    fetchProyectos(); // Recargar los datos sin filtros de fecha\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          placeholder: \"Fecha de inicio\",\n          style: {\n            padding: '5px',\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          placeholder: \"Fecha de fin\",\n          style: {\n            padding: '5px',\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearDates,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#f44336',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Limpiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), noData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: '#888'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron proyectos para este rango de fechas. Intenta con otro per\\xEDodo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this) : null, error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: proyectos.labels,\n        datasets: proyectos.datasets\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                var _proyectos$datasets$d;\n                const datasetIndex = tooltipItem.datasetIndex;\n                const datasetLabel = ((_proyectos$datasets$d = proyectos.datasets[datasetIndex]) === null || _proyectos$datasets$d === void 0 ? void 0 : _proyectos$datasets$d.label) || 'Desconocido';\n                const state = proyectos.labels[tooltipItem.dataIndex];\n                const value = tooltipItem.raw;\n                return `${datasetLabel}: ${value} Proyectos (${state})`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsEstados, \"Y1U1W/e8C3Drn+S10qpm4Ar06Zs=\");\n_c = DashboardChartsEstados;\nexport default DashboardChartsEstados;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsEstados\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","DashboardChartsEstados","_s","proyectos","setProyectos","labels","datasets","label","data","backgroundColor","loading","setLoading","error","setError","startDate","setStartDate","endDate","setEndDate","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","params","response","get","console","log","estadoProyectos","enProgreso","finalizados","suspendidos","err","handleDateChange","handleClearDates","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","type","value","onChange","e","target","placeholder","padding","width","onClick","color","border","borderRadius","cursor","fontSize","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","_proyectos$datasets$d","datasetIndex","datasetLabel","state","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstados.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst DashboardChartsEstados = () => {\r\n    const [proyectos, setProyectos] = useState({\r\n        labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n        datasets: [\r\n            {\r\n                label: \"Cantidad de Proyectos\",\r\n                data: [0, 0, 0], // Valores por defecto (0) en caso de no haber proyectos\r\n                backgroundColor: [\"blue\", \"green\", \"orange\"], // Colores para los proyectos\r\n            }\r\n        ]\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');  // Estado para la fecha de inicio\r\n    const [endDate, setEndDate] = useState('');      // Estado para la fecha de fin\r\n    const [noData, setNoData] = useState(false);    // Nuevo estado para manejar la falta de datos\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id; // Verifica que `user` exista en el token.\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n                params: {} // Añadimos parámetros de fecha para la solicitud\r\n            };\r\n\r\n            // Solo añadimos fechas a la solicitud si están definidas\r\n            if (startDate) config.params.startDate = startDate;\r\n            if (endDate) config.params.endDate = endDate;\r\n\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/grafica/EstadoProyectos/${id}`,\r\n                config\r\n            );\r\n\r\n            console.log('Datos recibidos de la API:', response.data);\r\n\r\n            const { estadoProyectos } = response.data;\r\n\r\n            // Si no hay proyectos, indicamos que no hay datos y no mostramos el mensaje de error\r\n            if (!estadoProyectos ||\r\n                (estadoProyectos.enProgreso === 0 && estadoProyectos.finalizados === 0 && estadoProyectos.suspendidos === 0)) {\r\n                setNoData(true); // Indicamos que no hay proyectos\r\n                setError(null);   // Reseteamos cualquier error previo\r\n                return;\r\n            }\r\n\r\n            setProyectos({\r\n                labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Cantidad de Proyectos\",\r\n                        data: [\r\n                            estadoProyectos.enProgreso,\r\n                            estadoProyectos.finalizados,\r\n                            estadoProyectos.suspendidos\r\n                        ],\r\n                        backgroundColor: [\"blue\", \"green\", \"orange\"], // Colores para los proyectos\r\n                    }\r\n                ]\r\n            });\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No hay proyectos en el rango de fechas'); // Mensaje de error si la solicitud falla\r\n            setProyectos({\r\n                labels: [\"En progreso\", \"Finalizado\", \"Suspendido\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Cantidad de Proyectos\",\r\n                        data: [0, 0, 0], // Valores predeterminados para evitar que la gráfica desaparezca\r\n                        backgroundColor: [\"blue\", \"green\", \"orange\"],\r\n                    }\r\n                ]\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token, startDate, endDate]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) return;\r\n        fetchProyectos();\r\n    }, [isAuthenticated, fetchProyectos]);\r\n\r\n    const handleDateChange = () => {\r\n        setLoading(true); // Inicia la carga cuando se cambia el rango de fechas\r\n        setNoData(false); // Resetear el estado de `noData` antes de cargar los datos\r\n        fetchProyectos(); // Vuelve a hacer la solicitud con las nuevas fechas\r\n    };\r\n\r\n    const handleClearDates = () => {\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setLoading(true);\r\n        setNoData(false);\r\n        fetchProyectos(); // Recargar los datos sin filtros de fecha\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    return (\r\n        <div>\r\n                        <h2 style={{textAlign : 'center'}}>Proyectos</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <div>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={startDate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        placeholder=\"Fecha de inicio\"\r\n                        style={{ padding: '5px', width: '150px' }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={endDate}\r\n                        onChange={(e) => setEndDate(e.target.value)}\r\n                        placeholder=\"Fecha de fin\"\r\n                        style={{ padding: '5px', width: '150px' }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={handleClearDates}\r\n                        style={{\r\n                            padding: '6px 12px',\r\n                            backgroundColor: '#f44336',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                    >\r\n                        Limpiar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            {/* Mostrar el mensaje solo cuando no hay proyectos */}\r\n            {noData ? (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: '#888' }}>\r\n                    <p>No se encontraron proyectos para este rango de fechas. Intenta con otro período.</p>\r\n                </div>\r\n            ) : null}\r\n\r\n            {/* Si hay error en la solicitud, se muestra el mensaje de error */}\r\n            {error && (\r\n                <div style={{ color: 'red', textAlign: 'center' }}>\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            <Pie\r\n                data={{\r\n                    labels: proyectos.labels,\r\n                    datasets: proyectos.datasets,\r\n                }}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const datasetIndex = tooltipItem.datasetIndex;\r\n                                    const datasetLabel = proyectos.datasets[datasetIndex]?.label || 'Desconocido';\r\n                                    const state = proyectos.labels[tooltipItem.dataIndex];\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${datasetLabel}: ${value} Proyectos (${state})`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsEstados;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACIC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMK,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,MAAM,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC;IACnDC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjBC,eAAe,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAE;IAClD,CAAC;EAET,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAM;EACjD,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAI;;EAEhD,MAAMgC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,eAAe,GAAGC,OAAO,CAACJ,KAAK,CAAC;EAEtC,MAAMK,cAAc,GAAGpC,WAAW,CAAC,YAAY;IAC3C,IAAI,CAACkC,eAAe,EAAE;IAEtB,IAAI;MAAA,IAAAG,aAAA;MACA,MAAMC,OAAO,GAAG9B,SAAS,CAACuB,KAAK,CAAC;MAChC,MAAMQ,EAAE,IAAAF,aAAA,GAAGC,OAAO,CAACE,IAAI,cAAAH,aAAA,uBAAZA,aAAA,CAAcE,EAAE,CAAC,CAAC;;MAE7B,MAAME,MAAM,GAAG;QACXC,OAAO,EAAE;UACL,cAAc,EAAEX;QACpB,CAAC;QACDY,MAAM,EAAE,CAAC,CAAC,CAAC;MACf,CAAC;;MAED;MACA,IAAIlB,SAAS,EAAEgB,MAAM,CAACE,MAAM,CAAClB,SAAS,GAAGA,SAAS;MAClD,IAAIE,OAAO,EAAEc,MAAM,CAACE,MAAM,CAAChB,OAAO,GAAGA,OAAO;MAE5C,MAAMiB,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAC5B,qDAAqDN,EAAE,EAAE,EACzDE,MACJ,CAAC;MAEDK,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAACzB,IAAI,CAAC;MAExD,MAAM;QAAE6B;MAAgB,CAAC,GAAGJ,QAAQ,CAACzB,IAAI;;MAEzC;MACA,IAAI,CAAC6B,eAAe,IACfA,eAAe,CAACC,UAAU,KAAK,CAAC,IAAID,eAAe,CAACE,WAAW,KAAK,CAAC,IAAIF,eAAe,CAACG,WAAW,KAAK,CAAE,EAAE;QAC9GrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACjBN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;QAClB;MACJ;MAEAT,YAAY,CAAC;QACTC,MAAM,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC;QACnDC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,uBAAuB;UAC9BC,IAAI,EAAE,CACF6B,eAAe,CAACC,UAAU,EAC1BD,eAAe,CAACE,WAAW,EAC3BF,eAAe,CAACG,WAAW,CAC9B;UACD/B,eAAe,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAE;QAClD,CAAC;MAET,CAAC,CAAC;IACN,CAAC,CAAC,OAAOgC,GAAG,EAAE;MACVN,OAAO,CAACvB,KAAK,CAAC,iCAAiC,EAAE6B,GAAG,CAAC;MACrD5B,QAAQ,CAAC,wCAAwC,CAAC,CAAC,CAAC;MACpDT,YAAY,CAAC;QACTC,MAAM,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC;QACnDC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,uBAAuB;UAC9BC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAAE;UACjBC,eAAe,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ;QAC/C,CAAC;MAET,CAAC,CAAC;IACN,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACY,eAAe,EAAEH,KAAK,EAAEN,SAAS,EAAEE,OAAO,CAAC,CAAC;EAEhD7B,SAAS,CAAC,MAAM;IACZ,IAAI,CAACoC,eAAe,EAAE;IACtBE,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACF,eAAe,EAAEE,cAAc,CAAC,CAAC;EAErC,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B/B,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBQ,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAClBM,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B5B,YAAY,CAAC,EAAE,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IACdN,UAAU,CAAC,IAAI,CAAC;IAChBQ,SAAS,CAAC,KAAK,CAAC;IAChBM,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,IAAIf,OAAO,EAAE,oBAAOX,OAAA;IAAA6C,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,oBACIjD,OAAA;IAAA6C,QAAA,gBACgB7C,OAAA;MAAIkD,KAAK,EAAE;QAACC,SAAS,EAAG;MAAQ,CAAE;MAAAN,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DjD,OAAA;MAAKkD,KAAK,EAAE;QAAEE,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAC/G7C,OAAA;QAAA6C,QAAA,eACI7C,OAAA;UACIyD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE3C,SAAU;UACjB4C,QAAQ,EAAGC,CAAC,IAAK5C,YAAY,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,WAAW,EAAC,iBAAiB;UAC7BZ,KAAK,EAAE;YAAEa,OAAO,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNjD,OAAA;QAAA6C,QAAA,eACI7C,OAAA;UACIyD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEzC,OAAQ;UACf0C,QAAQ,EAAGC,CAAC,IAAK1C,UAAU,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,WAAW,EAAC,cAAc;UAC1BZ,KAAK,EAAE;YAAEa,OAAO,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNjD,OAAA;QAAA6C,QAAA,eACI7C,OAAA;UACIiE,OAAO,EAAErB,gBAAiB;UAC1BM,KAAK,EAAE;YACHa,OAAO,EAAE,UAAU;YACnBrD,eAAe,EAAE,SAAS;YAC1BwD,KAAK,EAAE,OAAO;YACdC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE;UACZ,CAAE;UAAAxB,QAAA,EACL;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAKL9B,MAAM,gBACHnB,OAAA;MAAKkD,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEmB,QAAQ,EAAE,MAAM;QAAEJ,KAAK,EAAE;MAAO,CAAE;MAAArB,QAAA,eACjE7C,OAAA;QAAA6C,QAAA,EAAG;MAAgF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,GACN,IAAI,EAGPpC,KAAK,iBACFb,OAAA;MAAKkD,KAAK,EAAE;QAAEgB,KAAK,EAAE,KAAK;QAAEf,SAAS,EAAE;MAAS,CAAE;MAAAN,QAAA,eAC9C7C,OAAA;QAAA6C,QAAA,EAAIhC;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACR,eAEDjD,OAAA,CAACR,GAAG;MACAiB,IAAI,EAAE;QACFH,MAAM,EAAEF,SAAS,CAACE,MAAM;QACxBC,QAAQ,EAAEH,SAAS,CAACG;MACxB,CAAE;MACFgE,OAAO,EAAE;QACLC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACLC,MAAM,EAAE;YACJC,QAAQ,EAAE;UACd,CAAC;UACDC,OAAO,EAAE;YACLC,SAAS,EAAE;cACPrE,KAAK,EAAGsE,WAAW,IAAK;gBAAA,IAAAC,qBAAA;gBACpB,MAAMC,YAAY,GAAGF,WAAW,CAACE,YAAY;gBAC7C,MAAMC,YAAY,GAAG,EAAAF,qBAAA,GAAA3E,SAAS,CAACG,QAAQ,CAACyE,YAAY,CAAC,cAAAD,qBAAA,uBAAhCA,qBAAA,CAAkCvE,KAAK,KAAI,aAAa;gBAC7E,MAAM0E,KAAK,GAAG9E,SAAS,CAACE,MAAM,CAACwE,WAAW,CAACK,SAAS,CAAC;gBACrD,MAAMzB,KAAK,GAAGoB,WAAW,CAACM,GAAG;gBAC7B,OAAO,GAAGH,YAAY,KAAKvB,KAAK,eAAewB,KAAK,GAAG;cAC3D;YACJ;UACJ;QACJ;MACJ;IAAE;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC9C,EAAA,CA9LID,sBAAsB;AAAAmF,EAAA,GAAtBnF,sBAAsB;AAgM5B,eAAeA,sBAAsB;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}