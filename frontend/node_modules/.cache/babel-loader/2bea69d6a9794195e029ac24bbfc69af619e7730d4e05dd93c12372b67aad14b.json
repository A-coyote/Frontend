{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\EditarPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\n  const [hitos, setHitos] = useState([]); // Lista de hitos\n  const [prueba, setPrueba] = useState('');\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para la imagen\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [estadoActualHito, setEstadoActualHito] = useState(''); // Estado actual del hito\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n  const alertRef = useRef(null); // Referencia para la alerta\n\n  // Redirige al login si no está autenticado\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Cargar los datos del plan de prueba existente\n  useEffect(() => {\n    const fetchPlanDePrueba = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setShowAlert({\n            severity: 'error',\n            message: 'No se encontró el token de autenticación.'\n          });\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const response = await axios.get(`http://localhost:5000/api/pruebas/pruebas/${id}`, config);\n        const data = response.data;\n\n        // Asignar valores recuperados a los estados del formulario\n        setPrueba(data.id_plan || '');\n        setHitoSeleccionado(data.hito_seleccionado || '');\n        setResultadoEsperado(data.resultado_esperado || '');\n        setPruebaRealizada(data.prueba_realizada || '');\n        setEstadoPrueba(data.estado_prueba || '');\n        setCriterioAceptacion(data.criterio_aceptacion || '');\n        setImagenPrueba(data.imagen_prueba || '');\n      } catch (error) {\n        console.error('Error al cargar el plan de prueba:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar el plan de prueba.'\n        });\n      }\n    };\n    if (id) {\n      fetchPlanDePrueba();\n    }\n  }, [id]);\n\n  // Manejar selección de hito\n  const handleHitoSeleccionado = e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    if (hito) {\n      setDescripcionHito(hito.descripcion);\n      setEstadoActualHito(hito.estado);\n    } else {\n      setDescripcionHito('');\n      setEstadoActualHito('');\n    }\n  };\n\n  // Manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      hitoSeleccionado,\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      criterioAceptacion,\n      imagenPrueba\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await axios.post(`http://localhost:5000/api/pruebas/registerPrueba/${id}`, planDePrueba, config);\n      if (response.data.msg) {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n        setTimeout(() => navigate('/proyectos/tareas'), 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      setShowAlert({\n        severity: 'error',\n        message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n      });\n    } finally {\n      if (alertRef.current) {\n        alertRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Edici\\xF3n de la prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"N\\xFAmero de Prueba\",\n            value: prueba,\n            variant: \"outlined\",\n            required: true,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Resultado Esperado\",\n            value: resultadoEsperado,\n            onChange: e => setResultadoEsperado(e.target.value),\n            variant: \"outlined\",\n            required: true,\n            multiline: true,\n            rows: 4 // Cambia el número de líneas iniciales si es necesario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Prueba Realizada\",\n            value: pruebaRealizada,\n            onChange: e => setPruebaRealizada(e.target.value),\n            variant: \"outlined\",\n            required: true,\n            multiline: true,\n            rows: 4 // Cambia el número de líneas iniciales si es necesario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Estado de la Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: estadoPrueba,\n            onChange: e => setEstadoPrueba(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Selecciona el estado...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Aprobado\",\n              children: \"Aprobado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Rechazado\",\n              children: \"Rechazado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Pendiente\",\n              children: \"Pendiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Bloqueado\",\n              children: \"Bloqueado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Desconocido\",\n              children: \"Desconocido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Requiere m\\xE1s pruebas\",\n              children: \"Requiere m\\xE1s pruebas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Criterio de Aceptaci\\xF3n\",\n            value: criterioAceptacion,\n            onChange: e => setCriterioAceptacion(e.target.value),\n            variant: \"outlined\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Guardar Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(CrearPlanDePrueba, \"EDcoSTRZ/zZyWTeJvdXFH4gPF4Q=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","hitos","setHitos","prueba","setPrueba","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterioAceptacion","setCriterioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","estadoActualHito","setEstadoActualHito","navigate","id","alertRef","fetchPlanDePrueba","token","localStorage","getItem","severity","message","config","headers","response","get","data","id_plan","hito_seleccionado","resultado_esperado","prueba_realizada","estado_prueba","criterio_aceptacion","imagen_prueba","error","console","handleHitoSeleccionado","e","hitoId","target","value","hito","find","id_hito","descripcion","estado","handleSubmit","preventDefault","planDePrueba","post","msg","setTimeout","current","scrollIntoView","behavior","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","mt","item","xs","fullWidth","label","required","InputProps","readOnly","onChange","multiline","rows","disabled","type","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/EditarPrueba.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\r\n\r\nconst CrearPlanDePrueba = () => {\r\n    const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\r\n    const [hitos, setHitos] = useState([]); // Lista de hitos\r\n    const [prueba, setPrueba] = useState('');\r\n    const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n    const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n    const [criterioAceptacion, setCriterioAceptacion] = useState('');\r\n    const [estadoPrueba, setEstadoPrueba] = useState('');\r\n    const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para la imagen\r\n    const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\r\n    const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n    const [estadoActualHito, setEstadoActualHito] = useState(''); // Estado actual del hito\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n    const alertRef = useRef(null); // Referencia para la alerta\r\n\r\n    // Redirige al login si no está autenticado\r\n    useEffect(() => {\r\n        if (!isAuthenticated()) {\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Cargar los datos del plan de prueba existente\r\n    useEffect(() => {\r\n        const fetchPlanDePrueba = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (!token) {\r\n                    setShowAlert({\r\n                        severity: 'error',\r\n                        message: 'No se encontró el token de autenticación.',\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'x-auth-token': token,\r\n                    },\r\n                };\r\n\r\n                const response = await axios.get(\r\n                    `http://localhost:5000/api/pruebas/pruebas/${id}`,\r\n                    config\r\n                );\r\n\r\n                const data = response.data;\r\n\r\n                // Asignar valores recuperados a los estados del formulario\r\n                setPrueba(data.id_plan || '');\r\n                setHitoSeleccionado(data.hito_seleccionado || '');\r\n                setResultadoEsperado(data.resultado_esperado || '');\r\n                setPruebaRealizada(data.prueba_realizada || '');\r\n                setEstadoPrueba(data.estado_prueba || '');\r\n                setCriterioAceptacion(data.criterio_aceptacion || '');\r\n                setImagenPrueba(data.imagen_prueba || '');\r\n            } catch (error) {\r\n                console.error('Error al cargar el plan de prueba:', error);\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'Hubo un error al cargar el plan de prueba.',\r\n                });\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchPlanDePrueba();\r\n        }\r\n    }, [id]);\r\n\r\n    // Manejar selección de hito\r\n    const handleHitoSeleccionado = (e) => {\r\n        const hitoId = e.target.value;\r\n        setHitoSeleccionado(hitoId);\r\n\r\n        const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n        if (hito) {\r\n            setDescripcionHito(hito.descripcion);\r\n            setEstadoActualHito(hito.estado);\r\n        } else {\r\n            setDescripcionHito('');\r\n            setEstadoActualHito('');\r\n        }\r\n    };\r\n\r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Todos los campos del plan de prueba son obligatorios.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const planDePrueba = {\r\n            hitoSeleccionado,\r\n            resultadoEsperado,\r\n            pruebaRealizada,\r\n            estadoPrueba,\r\n            criterioAceptacion,\r\n            imagenPrueba,\r\n        };\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'No se encontró el token de autenticación.',\r\n                });\r\n                return;\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n\r\n            const response = await axios.post(\r\n                `http://localhost:5000/api/pruebas/registerPrueba/${id}`,\r\n                planDePrueba,\r\n                config\r\n            );\r\n\r\n            if (response.data.msg) {\r\n                setShowAlert({ severity: 'success', message: response.data.msg });\r\n                setTimeout(() => navigate('/proyectos/tareas'), 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al crear el plan de prueba:', error.response || error);\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n            });\r\n        } finally {\r\n            if (alertRef.current) {\r\n                alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 5 }}>\r\n            <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                Edición de la prueba\r\n            </Typography>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={2} mt={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Número de Prueba\"\r\n                            value={prueba}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Resultado Esperado\"\r\n                            value={resultadoEsperado}\r\n                            onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4} // Cambia el número de líneas iniciales si es necesario\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Prueba Realizada\"\r\n                            value={pruebaRealizada}\r\n                            onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4} // Cambia el número de líneas iniciales si es necesario\r\n                        />\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <InputLabel>Estado de la Prueba</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={estadoPrueba}\r\n                            onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                            required\r\n                        >\r\n                            <MenuItem value=\"\" disabled>Selecciona el estado...</MenuItem>\r\n                            <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n                            <MenuItem value=\"Rechazado\">Rechazado</MenuItem>\r\n                            <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n                            <MenuItem value=\"Bloqueado\">Bloqueado</MenuItem>\r\n                            <MenuItem value=\"Desconocido\">Desconocido</MenuItem>\r\n                            <MenuItem value=\"Requiere más pruebas\">Requiere más pruebas</MenuItem>\r\n\r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Criterio de Aceptación\"\r\n                            value={criterioAceptacion}\r\n                            onChange={(e) => setCriterioAceptacion(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Guardar Prueba\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}