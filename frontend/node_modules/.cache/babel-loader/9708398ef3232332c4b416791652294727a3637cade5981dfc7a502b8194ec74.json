{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\n\n// Registrar las partes necesarias de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst DashboardCharts = () => {\n  _s();\n  const [proyectosPorVencer, setProyectosPorVencer] = useState([]);\n  const [proyectosFinalizados, setProyectosFinalizados] = useState([]);\n  const [casosFallidos, setCasosFallidos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n\n  // Función para obtener el usuario logueado\n  const fetchUserData = useCallback(async () => {\n    if (!isAuthenticated) return;\n    const decoded = jwtDecode(token);\n    const id = decoded.user.id;\n    try {\n      // Aquí asumimos que la API te devolverá los datos de los tres gráficos\n      const response = await axios.get(`http://localhost:5000/api/grafica/VencimientoProyecto/${id}`);\n      const {\n        proyectosPorVencer,\n        proyectosFinalizados,\n        casosFallidos\n      } = response.data;\n      setProyectosPorVencer(proyectosPorVencer);\n      setProyectosFinalizados(proyectosFinalizados);\n      setCasosFallidos(casosFallidos);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error al obtener los datos de los proyectos:', error);\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserData();\n    }\n  }, [isAuthenticated, fetchUserData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n\n  // Configuración para las gráficas\n  const chartData = (label, data) => ({\n    labels: label,\n    // Por ejemplo, los meses o nombres de proyectos\n    datasets: [{\n      label: 'Proyectos',\n      data: data,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Proyectos por vencer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData(['Enero', 'Febrero', 'Marzo'], proyectosPorVencer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Proyectos Finalizados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData(['Enero', 'Febrero', 'Marzo'], proyectosFinalizados)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Casos Fallidos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData(['Enero', 'Febrero', 'Marzo'], casosFallidos)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardCharts, \"D5ozsAZD2UcuS45JUYb560tWo9U=\");\n_c = DashboardCharts;\nexport default DashboardCharts;\nvar _c;\n$RefreshReg$(_c, \"DashboardCharts\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","DashboardCharts","_s","proyectosPorVencer","setProyectosPorVencer","proyectosFinalizados","setProyectosFinalizados","casosFallidos","setCasosFallidos","loading","setLoading","token","localStorage","getItem","isAuthenticated","Boolean","fetchUserData","decoded","id","user","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","label","labels","datasets","backgroundColor","borderColor","borderWidth","style","display","justifyContent","marginBottom","width","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChart.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n// Registrar las partes necesarias de Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst DashboardCharts = () => {\r\n    const [proyectosPorVencer, setProyectosPorVencer] = useState([]);\r\n    const [proyectosFinalizados, setProyectosFinalizados] = useState([]);\r\n    const [casosFallidos, setCasosFallidos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    // Función para obtener el usuario logueado\r\n    const fetchUserData = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        const decoded = jwtDecode(token);\r\n        const id = decoded.user.id;\r\n\r\n        try {\r\n            // Aquí asumimos que la API te devolverá los datos de los tres gráficos\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/VencimientoProyecto/${id}`);\r\n            const { proyectosPorVencer, proyectosFinalizados, casosFallidos } = response.data;\r\n\r\n            setProyectosPorVencer(proyectosPorVencer);\r\n            setProyectosFinalizados(proyectosFinalizados);\r\n            setCasosFallidos(casosFallidos);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error al obtener los datos de los proyectos:', error);\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetchUserData();\r\n        }\r\n    }, [isAuthenticated, fetchUserData]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    // Configuración para las gráficas\r\n    const chartData = (label, data) => ({\r\n        labels: label, // Por ejemplo, los meses o nombres de proyectos\r\n        datasets: [\r\n            {\r\n                label: 'Proyectos',\r\n                data: data,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-around', marginBottom: '20px' }}>\r\n                {/* Gráfica Proyectos por vencer */}\r\n                <div style={{ width: '30%' }}>\r\n                    <h3>Proyectos por vencer</h3>\r\n                    <Bar data={chartData(['Enero', 'Febrero', 'Marzo'], proyectosPorVencer)} />\r\n                </div>\r\n\r\n                {/* Gráfica Proyectos Finalizados */}\r\n                <div style={{ width: '30%' }}>\r\n                    <h3>Proyectos Finalizados</h3>\r\n                    <Bar data={chartData(['Enero', 'Febrero', 'Marzo'], proyectosFinalizados)} />\r\n                </div>\r\n\r\n                {/* Gráfica Casos Fallidos */}\r\n                <div style={{ width: '30%' }}>\r\n                    <h3>Casos Fallidos</h3>\r\n                    <Bar data={chartData(['Enero', 'Febrero', 'Marzo'], casosFallidos)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}