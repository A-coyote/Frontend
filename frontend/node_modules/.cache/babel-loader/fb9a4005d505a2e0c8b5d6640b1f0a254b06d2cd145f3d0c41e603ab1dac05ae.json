{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('token');\nconst isAuthenticated = Boolean(token);\n// Registrar las partes necesarias de Chart.js\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst DashboardCharts = () => {\n  _s();\n  const [proyectos, setProyectos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    const decoded = jwtDecode(token);\n    const id = decoded.user.id;\n    try {\n      // Hacer una solicitud GET a la API para obtener los proyectos\n      const response = await axios.get(`http://localhost:5000/api/grafica/VencimientoProyecto/${id}`);\n      const {\n        labels,\n        datasets\n      } = response.data;\n\n      // Guardar los datos para las gráficas\n      setProyectos({\n        labels,\n        datasets\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('Error al obtener los proyectos:', error);\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchProyectos();\n    }\n  }, [isAuthenticated, fetchProyectos]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this);\n  const chartData = {\n    labels: proyectos.labels,\n    datasets: [{\n      label: 'Cantidad de Proyectos',\n      data: proyectos.datasets,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Proyectos por Semana\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardCharts, \"zyXFjyp3nqU+q0hF3T7yAyatDTk=\");\n_c = DashboardCharts;\nexport default DashboardCharts;\nvar _c;\n$RefreshReg$(_c, \"DashboardCharts\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","token","localStorage","getItem","isAuthenticated","Boolean","register","DashboardCharts","_s","proyectos","setProyectos","loading","setLoading","fetchProyectos","decoded","jwtDecode","id","user","response","get","labels","datasets","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","label","backgroundColor","borderColor","borderWidth","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChart.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nconst token = localStorage.getItem('token');\r\nconst isAuthenticated = Boolean(token);\r\n// Registrar las partes necesarias de Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst DashboardCharts = () => {\r\n    const [proyectos, setProyectos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        const decoded = jwtDecode(token);\r\n        const id = decoded.user.id;\r\n\r\n        try {\r\n            // Hacer una solicitud GET a la API para obtener los proyectos\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/VencimientoProyecto/${id}`);\r\n            const { labels, datasets } = response.data;\r\n\r\n            // Guardar los datos para las gráficas\r\n            setProyectos({ labels, datasets });\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error al obtener los proyectos:', error);\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetchProyectos();\r\n        }\r\n    }, [isAuthenticated, fetchProyectos]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    const chartData = {\r\n        labels: proyectos.labels,\r\n        datasets: [\r\n            {\r\n                label: 'Cantidad de Proyectos',\r\n                data: proyectos.datasets,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Proyectos por Semana</h2>\r\n            <Bar data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardCharts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C,MAAMC,eAAe,GAAGC,OAAO,CAACJ,KAAK,CAAC;AACtC;AACAT,OAAO,CAACc,QAAQ,CAACb,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMS,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,eAAe,GAAGC,OAAO,CAACJ,KAAK,CAAC;EAEtC,MAAMY,cAAc,GAAGzB,WAAW,CAAC,YAAY;IAC3C,IAAI,CAACgB,eAAe,EAAE;IAEtB,MAAMU,OAAO,GAAGC,SAAS,CAACd,KAAK,CAAC;IAChC,MAAMe,EAAE,GAAGF,OAAO,CAACG,IAAI,CAACD,EAAE;IAE1B,IAAI;MACA;MACA,MAAME,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,yDAAyDH,EAAE,EAAE,CAAC;MAC/F,MAAM;QAAEI,MAAM;QAAEC;MAAS,CAAC,GAAGH,QAAQ,CAACI,IAAI;;MAE1C;MACAZ,YAAY,CAAC;QAAEU,MAAM;QAAEC;MAAS,CAAC,CAAC;MAClCT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDX,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACR,eAAe,EAAEH,KAAK,CAAC,CAAC;EAE5Bf,SAAS,CAAC,MAAM;IACZ,IAAIkB,eAAe,EAAE;MACjBS,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,CAACT,eAAe,EAAES,cAAc,CAAC,CAAC;EAErC,IAAIF,OAAO,EAAE,oBAAOX,OAAA;IAAAyB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,MAAMC,SAAS,GAAG;IACdV,MAAM,EAAEX,SAAS,CAACW,MAAM;IACxBC,QAAQ,EAAE,CACN;MACIU,KAAK,EAAE,uBAAuB;MAC9BT,IAAI,EAAEb,SAAS,CAACY,QAAQ;MACxBW,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,oBACIlC,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B7B,OAAA,CAACV,GAAG;MAACgC,IAAI,EAAEQ;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd,CAAC;AAACrB,EAAA,CArDID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}