{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box,TextField,Button,Grid,Typography,MenuItem,Select,InputLabel}from'@mui/material';import{useNavigate,useParams}from'react-router-dom';import axios from'axios';import AlertMessage from'../../components/AlertMessage';// Componente de alerta\nimport{isAuthenticated}from'../../utils/auth';// Función para validar autenticación\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CrearPlanDePrueba=()=>{const[showAlert,setShowAlert]=useState(null);// Estado para la alerta\nconst[prueba,setPrueba]=useState('');const[resultadoEsperado,setResultadoEsperado]=useState('');const[pruebaRealizada,setPruebaRealizada]=useState('');const[criterioAceptacion,setCriterioAceptacion]=useState('');const[estadoPrueba,setEstadoPrueba]=useState('');const[imagenPrueba,setImagenPrueba]=useState({file:null,base64:''});const navigate=useNavigate();const{id}=useParams();const alertRef=useRef(null);const MAX_IMAGE_SIZE=2*1024*1024;// 2 MB en bytes\n// Redirige al login si no está autenticado\nuseEffect(()=>{if(!isAuthenticated()){navigate('/login');}},[navigate]);// Manejar la subida de imágenes\nconst handleImagenChange=e=>{const file=e.target.files[0];// Obtén el archivo seleccionado\nif(file){// Verificar el tamaño del archivo\nif(file.size>MAX_IMAGE_SIZE){setShowAlert({severity:'error',message:'La imagen es demasiado grande. El tamaño máximo permitido es de 2 MB.'});setImagenPrueba({file:null,base64:''});// Limpiar el estado de la imagen\nreturn;}const reader=new FileReader();reader.onload=()=>{setImagenPrueba({file,base64:reader.result});// Guarda el archivo y la cadena Base64 en el estado\n};reader.onerror=error=>{console.error(\"Error al convertir la imagen a Base64:\",error);};reader.readAsDataURL(file);// Convierte el archivo a Base64\n}};// Cargar los datos del plan de prueba existente\nuseEffect(()=>{const fetchPlanDePrueba=async()=>{try{const token=localStorage.getItem('token');if(!token){setShowAlert({severity:'error',message:'No se encontró el token de autenticación.'});return;}const config={headers:{'x-auth-token':token}};const response=await axios.get(`http://localhost:5000/api/pruebas/pruebas/${id}`,config);const data=response.data;// Asignar valores recuperados a los estados del formulario\nsetPrueba(data.id_plan||'');setResultadoEsperado(data.resultado_esperado||'');setPruebaRealizada(data.prueba_realizada||'');setEstadoPrueba(data.estado_prueba||'');setCriterioAceptacion(data.criterio_aceptacion||'');setImagenPrueba({file:data.imagen_prueba,base64:data.imagen_prueba});}catch(error){setShowAlert({severity:'error',message:'Hubo un error al cargar el plan de prueba.'});}};if(id){fetchPlanDePrueba();}},[id]);// Manejar el envío del formulario\nconst handleSubmit=async e=>{e.preventDefault();if(!resultadoEsperado||!pruebaRealizada||!estadoPrueba||!criterioAceptacion){setShowAlert({severity:'error',message:'Todos los campos del plan de prueba son obligatorios.'});return;}const planDePrueba={prueba,resultadoEsperado,pruebaRealizada,estadoPrueba,criterioAceptacion,imagenPrueba:imagenPrueba.base64// Solo se envía la representación en Base64\n};try{const token=localStorage.getItem('token');if(!token){setShowAlert({severity:'error',message:'No se encontró el token de autenticación.'});return;}const config={headers:{'x-auth-token':token,'Content-Type':'application/json'}};const response=await axios.put(`http://localhost:5000/api/pruebas/updatePlan/${prueba}`,planDePrueba,config);if(response.data.msg){setShowAlert({severity:'success',message:response.data.msg});setTimeout(()=>navigate('/gestiones/proyectos'),2000);}}catch(error){console.error('Error al crear el plan de prueba:',error.response||error);setShowAlert({severity:'error',message:'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'});}finally{if(alertRef.current){alertRef.current.scrollIntoView({behavior:'smooth'});}}};return/*#__PURE__*/_jsxs(Box,{sx:{padding:5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,align:\"center\",children:\"Edici\\xF3n de la prueba\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,mt:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"N\\xFAmero de Prueba\",value:prueba,variant:\"outlined\",required:true,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Resultado Esperado\",value:resultadoEsperado,onChange:e=>setResultadoEsperado(e.target.value),variant:\"outlined\",required:true,multiline:true,rows:4})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Prueba Realizada\",value:pruebaRealizada,onChange:e=>setPruebaRealizada(e.target.value),variant:\"outlined\",required:true,multiline:true,rows:4})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Estado de la Prueba\"}),/*#__PURE__*/_jsxs(Select,{fullWidth:true,value:estadoPrueba,onChange:e=>setEstadoPrueba(e.target.value),required:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",disabled:true,children:\"Selecciona el estado...\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Aprobado\",children:\"Aprobado\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Rechazada\",children:\"Rechazado\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Pendiente\",children:\"Pendiente\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Bloqueado\",children:\"Bloqueado\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Desconocido\",children:\"Desconocido\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Requiere m\\xE1s pruebas\",children:\"Requiere m\\xE1s pruebas\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"No aplicable\",children:\"No aplicable\"})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Criterio de Aceptaci\\xF3n\",value:criterioAceptacion,onChange:e=>setCriterioAceptacion(e.target.value),variant:\"outlined\",required:true})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",fullWidth:true,children:[\"Subir Imagen\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",hidden:true,onChange:handleImagenChange})]}),imagenPrueba.file&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",mt:1,children:[\"Imagen seleccionada: \",imagenPrueba.file.name]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,children:\"Guardar Prueba\"})})]})}),showAlert&&/*#__PURE__*/_jsx(AlertMessage,{ref:alertRef,severity:showAlert.severity,message:showAlert.message})]});};export default CrearPlanDePrueba;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsx","_jsx","jsxs","_jsxs","CrearPlanDePrueba","showAlert","setShowAlert","prueba","setPrueba","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterioAceptacion","setCriterioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","file","base64","navigate","id","alertRef","MAX_IMAGE_SIZE","handleImagenChange","e","target","files","size","severity","message","reader","FileReader","onload","result","onerror","error","console","readAsDataURL","fetchPlanDePrueba","token","localStorage","getItem","config","headers","response","get","data","id_plan","resultado_esperado","prueba_realizada","estado_prueba","criterio_aceptacion","imagen_prueba","handleSubmit","preventDefault","planDePrueba","put","msg","setTimeout","current","scrollIntoView","behavior","sx","padding","children","variant","gutterBottom","align","onSubmit","container","spacing","mt","item","xs","fullWidth","label","value","required","InputProps","readOnly","onChange","multiline","rows","disabled","sm","component","type","accept","hidden","name","color","ref"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/EditarPrueba.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\r\n\r\nconst CrearPlanDePrueba = () => {\r\n    const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\r\n    const [prueba, setPrueba] = useState('');\r\n    const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n    const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n    const [criterioAceptacion, setCriterioAceptacion] = useState('');\r\n    const [estadoPrueba, setEstadoPrueba] = useState('');\r\n    const [imagenPrueba, setImagenPrueba] = useState({ file: null, base64: '' });\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const alertRef = useRef(null);\r\n\r\n    const MAX_IMAGE_SIZE = 2 * 1024 * 1024; // 2 MB en bytes\r\n\r\n    // Redirige al login si no está autenticado\r\n    useEffect(() => {\r\n        if (!isAuthenticated()) {\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Manejar la subida de imágenes\r\n    const handleImagenChange = (e) => {\r\n        const file = e.target.files[0]; // Obtén el archivo seleccionado\r\n        if (file) {\r\n            // Verificar el tamaño del archivo\r\n            if (file.size > MAX_IMAGE_SIZE) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'La imagen es demasiado grande. El tamaño máximo permitido es de 2 MB.',\r\n                });\r\n                setImagenPrueba({ file: null, base64: '' }); // Limpiar el estado de la imagen\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                setImagenPrueba({ file, base64: reader.result }); // Guarda el archivo y la cadena Base64 en el estado\r\n            };\r\n            reader.onerror = (error) => {\r\n                console.error(\"Error al convertir la imagen a Base64:\", error);\r\n            };\r\n            reader.readAsDataURL(file); // Convierte el archivo a Base64\r\n        }\r\n    };\r\n\r\n    // Cargar los datos del plan de prueba existente\r\n    useEffect(() => {\r\n        const fetchPlanDePrueba = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (!token) {\r\n                    setShowAlert({\r\n                        severity: 'error',\r\n                        message: 'No se encontró el token de autenticación.',\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'x-auth-token': token,\r\n                    },\r\n                };\r\n\r\n                const response = await axios.get(\r\n                    `http://localhost:5000/api/pruebas/pruebas/${id}`,\r\n                    config\r\n                );\r\n\r\n                const data = response.data;\r\n\r\n                // Asignar valores recuperados a los estados del formulario\r\n                setPrueba(data.id_plan || '');\r\n                setResultadoEsperado(data.resultado_esperado || '');\r\n                setPruebaRealizada(data.prueba_realizada || '');\r\n                setEstadoPrueba(data.estado_prueba || '');\r\n                setCriterioAceptacion(data.criterio_aceptacion || '');\r\n                setImagenPrueba({ file: data.imagen_prueba, base64: data.imagen_prueba });\r\n            } catch (error) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'Hubo un error al cargar el plan de prueba.',\r\n                });\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchPlanDePrueba();\r\n        }\r\n    }, [id]);\r\n\r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Todos los campos del plan de prueba son obligatorios.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const planDePrueba = {\r\n            prueba,\r\n            resultadoEsperado,\r\n            pruebaRealizada,\r\n            estadoPrueba,\r\n            criterioAceptacion,\r\n            imagenPrueba: imagenPrueba.base64, // Solo se envía la representación en Base64\r\n        };\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'No se encontró el token de autenticación.',\r\n                });\r\n                return;\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n\r\n            const response = await axios.put(\r\n                `http://localhost:5000/api/pruebas/updatePlan/${prueba}`,\r\n                planDePrueba,\r\n                config\r\n            );\r\n\r\n            if (response.data.msg) {\r\n                setShowAlert({ severity: 'success', message: response.data.msg });\r\n                setTimeout(() => navigate('/gestiones/proyectos'), 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al crear el plan de prueba:', error.response || error);\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n            });\r\n        } finally {\r\n            if (alertRef.current) {\r\n                alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 5 }}>\r\n            <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                Edición de la prueba\r\n            </Typography>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={2} mt={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Número de Prueba\"\r\n                            value={prueba}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Resultado Esperado\"\r\n                            value={resultadoEsperado}\r\n                            onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Prueba Realizada\"\r\n                            value={pruebaRealizada}\r\n                            onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <InputLabel>Estado de la Prueba</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={estadoPrueba}\r\n                            onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                            required\r\n                        >\r\n                            <MenuItem value=\"\" disabled>Selecciona el estado...</MenuItem>\r\n                            <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n                            <MenuItem value=\"Rechazada\">Rechazado</MenuItem>\r\n                            <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n                            <MenuItem value=\"Bloqueado\">Bloqueado</MenuItem>\r\n                            <MenuItem value=\"Desconocido\">Desconocido</MenuItem>\r\n                            <MenuItem value=\"Requiere más pruebas\">Requiere más pruebas</MenuItem>\r\n                            <MenuItem value=\"No aplicable\">No aplicable</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Criterio de Aceptación\"\r\n                            value={criterioAceptacion}\r\n                            onChange={(e) => setCriterioAceptacion(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"label\" fullWidth\r\n                        >\r\n                            Subir Imagen\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                hidden\r\n                                onChange={handleImagenChange}\r\n                            />\r\n                        </Button>\r\n                        {imagenPrueba.file && (\r\n                            <Typography variant=\"body2\" mt={1}>\r\n                                Imagen seleccionada: {imagenPrueba.file.name}\r\n                            </Typography>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Guardar Prueba\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {showAlert && <AlertMessage ref={alertRef} severity={showAlert.severity} message={showAlert.message} />}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CrearPlanDePrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}