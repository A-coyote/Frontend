{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\PlanPruebas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\n  const [nombreProyecto, setNombreProyecto] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaInicio, setFechaInicio] = useState('');\n  const [fechaFin, setFechaFin] = useState('');\n  const [presupuesto, setPresupuesto] = useState('');\n  const [estado, setEstado] = useState('');\n  const [responsable, setResponsable] = useState('');\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Valor vacío como predeterminado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\n  const [imagen, setImagen] = useState(null); // Estado para manejar la imagen\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n\n  // Verificar si el usuario está autenticado al cargar el componente\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\n        const proyecto = response.data;\n\n        // Formatear fechas al formato correcto (YYYY-MM-DD)\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\n        setNombreProyecto(proyecto.nombre);\n        setDescripcion(proyecto.descripcion);\n        setFechaInicio(formatoFechaInicio);\n        setFechaFin(formatoFechaFin);\n        setPresupuesto(proyecto.presupuesto);\n        setEstado(proyecto.estado);\n        setResponsable(proyecto.u_usuario);\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Manejar la selección de un hito\n  const handleHitoSeleccionado = e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    setDescripcionHito(hito ? hito.descripcion : '');\n  };\n\n  // Manejar el cambio de la imagen\n  const handleImageChange = e => {\n    setImagen(e.target.files[0]);\n  };\n\n  // Enviar el formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado || !descripcion || !criterrioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos son obligatorios.'\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('resultadoEsperado', resultadoEsperado);\n    formData.append('pruebaRealizada', pruebaRealizada);\n    formData.append('estadoPrueba', estadoPrueba);\n    formData.append('hitoSeleccionado', hitoSeleccionado);\n    formData.append('descripcion', descripcion);\n    formData.append('criterrioAceptacion', criterrioAceptacion);\n    if (imagen) {\n      formData.append('imagen', imagen);\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, formData, config);\n      setShowAlert({\n        severity: 'success',\n        message: 'Plan de prueba creado correctamente.'\n      });\n      setTimeout(() => {\n        navigate('/proyectos/tareas');\n      }, 2000);\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error);\n      setShowAlert({\n        severity: 'error',\n        message: 'Hubo un error al crear el plan de prueba.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      severity: showAlert.severity,\n      message: showAlert.message,\n      autoHideDuration: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Crear Plan de Prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Nombre del Proyecto\",\n            value: nombreProyecto,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha Inicio\",\n            type: \"date\",\n            value: fechaInicio,\n            disabled: true,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha Fin\",\n            type: \"date\",\n            value: fechaFin,\n            disabled: true,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"imagen\",\n            children: \"Cargar Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"imagen\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Crear Plan de Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"BgZ9tbaZ7FQh4Y6FJUSlrCq8Z7U=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Grid","Typography","MenuItem","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","nombreProyecto","setNombreProyecto","descripcion","setDescripcion","fechaInicio","setFechaInicio","fechaFin","setFechaFin","presupuesto","setPresupuesto","estado","setEstado","responsable","setResponsable","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterrioAceptacion","setCriterrioAceptacion","estadoPrueba","setEstadoPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","formularioHabilitado","setFormularioHabilitado","imagen","setImagen","navigate","id","fetchProyecto","response","get","proyecto","data","formatoFechaInicio","Date","fecha_inicio","toISOString","split","formatoFechaFin","fecha_finalizacion","nombre","u_usuario","error","console","severity","message","handleHitoSeleccionado","e","hitoId","target","value","hito","find","id_hito","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","append","token","localStorage","getItem","config","headers","post","setTimeout","sx","padding","children","autoHideDuration","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","item","xs","sm","fullWidth","label","disabled","type","InputLabelProps","shrink","htmlFor","accept","onChange","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/PlanPruebas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const [nombreProyecto, setNombreProyecto] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('');\r\n  const [fechaFin, setFechaFin] = useState('');\r\n  const [presupuesto, setPresupuesto] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [responsable, setResponsable] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Valor vacío como predeterminado\r\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\r\n  const [imagen, setImagen] = useState(null); // Estado para manejar la imagen\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        // Formatear fechas al formato correcto (YYYY-MM-DD)\r\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\r\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\r\n\r\n        setNombreProyecto(proyecto.nombre);\r\n        setDescripcion(proyecto.descripcion);\r\n        setFechaInicio(formatoFechaInicio);\r\n        setFechaFin(formatoFechaFin);\r\n        setPresupuesto(proyecto.presupuesto);\r\n        setEstado(proyecto.estado);\r\n        setResponsable(proyecto.u_usuario);\r\n\r\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Manejar la selección de un hito\r\n  const handleHitoSeleccionado = (e) => {\r\n    const hitoId = e.target.value;\r\n    setHitoSeleccionado(hitoId);\r\n\r\n    const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n    setDescripcionHito(hito ? hito.descripcion : '');\r\n  };\r\n\r\n  // Manejar el cambio de la imagen\r\n  const handleImageChange = (e) => {\r\n    setImagen(e.target.files[0]);\r\n  };\r\n\r\n  // Enviar el formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado || !descripcion || !criterrioAceptacion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('resultadoEsperado', resultadoEsperado);\r\n    formData.append('pruebaRealizada', pruebaRealizada);\r\n    formData.append('estadoPrueba', estadoPrueba);\r\n    formData.append('hitoSeleccionado', hitoSeleccionado);\r\n    formData.append('descripcion', descripcion);\r\n    formData.append('criterrioAceptacion', criterrioAceptacion);\r\n    if (imagen) {\r\n      formData.append('imagen', imagen);\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`,\r\n        formData,\r\n        config\r\n      );\r\n\r\n      setShowAlert({\r\n        severity: 'success',\r\n        message: 'Plan de prueba creado correctamente.',\r\n      });\r\n\r\n      setTimeout(() => {\r\n        navigate('/proyectos/tareas');\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error);\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Hubo un error al crear el plan de prueba.',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Crear Plan de Prueba\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField fullWidth label=\"Nombre del Proyecto\" value={nombreProyecto} disabled />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField fullWidth label=\"Descripción\" value={descripcion} disabled />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha Inicio\"\r\n              type=\"date\"\r\n              value={fechaInicio}\r\n              disabled\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha Fin\"\r\n              type=\"date\"\r\n              value={fechaFin}\r\n              disabled\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <InputLabel htmlFor=\"imagen\">Cargar Imagen</InputLabel>\r\n            <input id=\"imagen\" type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Crear Plan de Prueba\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}