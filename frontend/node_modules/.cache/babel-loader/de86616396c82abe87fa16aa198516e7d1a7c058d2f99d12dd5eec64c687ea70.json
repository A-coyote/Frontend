{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport DashboardLayoutNavigationLinks from './components/DashboardPageLayout';\nimport Login from './pages/Login';\nimport Usuario from './pages/Seguridad/usuario';\nimport { getAuthToken, isAuthenticated } from './utils/auth'; // Importamos las funciones de auth.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticatedState, setIsAuthenticated] = useState(false);\n\n  // Verificar si el usuario está autenticado (por ejemplo, si hay un token en localStorage)\n  useEffect(() => {\n    const token = getAuthToken(); // Obtenemos el token desde localStorage\n    if (isAuthenticated()) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard/*\",\n        element: isAuthenticatedState ? /*#__PURE__*/_jsxDEV(DashboardLayoutNavigationLinks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"usuarios\",\n          element: /*#__PURE__*/_jsxDEV(Usuario, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Zm7g8HSJcslitgkjw2PnUv6eRes=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","DashboardLayoutNavigationLinks","Login","Usuario","getAuthToken","isAuthenticated","jsxDEV","_jsxDEV","App","_s","isAuthenticatedState","setIsAuthenticated","token","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport DashboardLayoutNavigationLinks from './components/DashboardPageLayout';\nimport Login from './pages/Login';\nimport Usuario from './pages/Seguridad/usuario';\nimport { getAuthToken, isAuthenticated } from './utils/auth'; // Importamos las funciones de auth.js\n\nfunction App() {\n    const [isAuthenticatedState, setIsAuthenticated] = useState(false);\n\n    // Verificar si el usuario está autenticado (por ejemplo, si hay un token en localStorage)\n    useEffect(() => {\n        const token = getAuthToken(); // Obtenemos el token desde localStorage\n        if (isAuthenticated()) {\n            setIsAuthenticated(true);\n        } else {\n            setIsAuthenticated(false);\n        }\n    }, []);\n\n    return (\n        <Router>\n            <Routes>\n                {/* Ruta para Login */}\n                <Route path=\"/login\" element={<Login />} />\n\n                {/* Si el usuario no está autenticado, redirigir al login */}\n                <Route\n                    path=\"/dashboard/*\"\n                    element={\n                        isAuthenticatedState ? (\n                            <DashboardLayoutNavigationLinks />\n                        ) : (\n                            <Navigate to=\"/login\" />\n                        )\n                    }\n                >\n                    {/* Rutas internas del Dashboard */}\n                    <Route path=\"usuarios\" element={<Usuario />} />\n                    {/* Puedes agregar más rutas internas aquí */}\n                    {/* <Route path=\"roles\" element={<Roles />} /> */}\n                    {/* <Route path=\"permisos\" element={<Permisos />} /> */}\n                </Route>\n\n                {/* Redirigir a login si la ruta no existe */}\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,8BAA8B,MAAM,kCAAkC;AAC7E,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,eAAe,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,oBAAoB,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAElE;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMkB,KAAK,GAAGR,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAIC,eAAe,CAAC,CAAC,EAAE;MACnBM,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,MAAM;MACHA,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA,CAACV,MAAM;IAAAgB,QAAA,eACHN,OAAA,CAACT,MAAM;MAAAe,QAAA,gBAEHN,OAAA,CAACR,KAAK;QAACe,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAER,OAAA,CAACL,KAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG3CZ,OAAA,CAACR,KAAK;QACFe,IAAI,EAAC,cAAc;QACnBC,OAAO,EACHL,oBAAoB,gBAChBH,OAAA,CAACN,8BAA8B;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAElCZ,OAAA,CAACP,QAAQ;UAACoB,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAE9B;QAAAN,QAAA,eAGDN,OAAA,CAACR,KAAK;UAACe,IAAI,EAAC,UAAU;UAACC,OAAO,eAAER,OAAA,CAACJ,OAAO;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI5C,CAAC,eAGRZ,OAAA,CAACR,KAAK;QAACe,IAAI,EAAC,GAAG;QAACC,OAAO,eAAER,OAAA,CAACP,QAAQ;UAACoB,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACV,EAAA,CA1CQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}