{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\EditarPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\n  const [prueba, setPrueba] = useState('');\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState({\n    file: null,\n    base64: ''\n  });\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const alertRef = useRef(null);\n  const apiUrl = process.env.REACT_APP_API_URL; // La URL base de la API\n\n  const MAX_IMAGE_SIZE = 2 * 1024 * 1024; // 2 MB en bytes\n\n  // Redirige al login si no está autenticado\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Manejar la subida de imágenes\n  const handleImagenChange = e => {\n    const file = e.target.files[0]; // Obtén el archivo seleccionado\n    if (file) {\n      // Verificar el tamaño del archivo\n      if (file.size > MAX_IMAGE_SIZE) {\n        setShowAlert({\n          severity: 'error',\n          message: 'La imagen es demasiado grande. El tamaño máximo permitido es de 2 MB.'\n        });\n        setImagenPrueba({\n          file: null,\n          base64: ''\n        }); // Limpiar el estado de la imagen\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagenPrueba({\n          file,\n          base64: reader.result\n        }); // Guarda el archivo y la cadena Base64 en el estado\n      };\n      reader.onerror = error => {\n        console.error(\"Error al convertir la imagen a Base64:\", error);\n      };\n      reader.readAsDataURL(file); // Convierte el archivo a Base64\n    }\n  };\n\n  // Cargar los datos del plan de prueba existente\n  useEffect(() => {\n    const fetchPlanDePrueba = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setShowAlert({\n            severity: 'error',\n            message: 'No se encontró el token de autenticación.'\n          });\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const response = await axios.get(`${apiUrl}/api/pruebas/pruebas/${id}`, config);\n        const data = response.data;\n\n        // Asignar valores recuperados a los estados del formulario\n        setPrueba(data.id_plan || '');\n        setResultadoEsperado(data.resultado_esperado || '');\n        setPruebaRealizada(data.prueba_realizada || '');\n        setEstadoPrueba(data.estado_prueba || '');\n        setCriterioAceptacion(data.criterio_aceptacion || '');\n        setImagenPrueba({\n          file: data.imagen_prueba,\n          base64: data.imagen_prueba\n        });\n      } catch (error) {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar el plan de prueba.'\n        });\n      }\n    };\n    if (id) {\n      fetchPlanDePrueba();\n    }\n  }, [id]);\n\n  // Manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      prueba,\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      criterioAceptacion,\n      imagenPrueba: imagenPrueba.base64 // Solo se envía la representación en Base64\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await axios.put(`${apiUrl}/api/pruebas/updatePlan/${prueba}`, planDePrueba, config);\n      if (response.data.msg) {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n        setTimeout(() => navigate('/gestiones/proyectos'), 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      setShowAlert({\n        severity: 'error',\n        message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n      });\n    } finally {\n      if (alertRef.current) {\n        alertRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Edici\\xF3n de la prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"N\\xFAmero de Prueba\",\n            value: prueba,\n            variant: \"outlined\",\n            required: true,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Resultado Esperado\",\n            value: resultadoEsperado,\n            onChange: e => setResultadoEsperado(e.target.value),\n            variant: \"outlined\",\n            required: true,\n            multiline: true,\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Prueba Realizada\",\n            value: pruebaRealizada,\n            onChange: e => setPruebaRealizada(e.target.value),\n            variant: \"outlined\",\n            required: true,\n            multiline: true,\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Estado de la Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: estadoPrueba,\n            onChange: e => setEstadoPrueba(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Selecciona el estado...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Aprobado\",\n              children: \"Aprobado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Rechazada\",\n              children: \"Rechazado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Pendiente\",\n              children: \"Pendiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Bloqueado\",\n              children: \"Bloqueado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Desconocido\",\n              children: \"Desconocido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Requiere m\\xE1s pruebas\",\n              children: \"Requiere m\\xE1s pruebas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"No aplicable\",\n              children: \"No aplicable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Criterio de Aceptaci\\xF3n\",\n            value: criterioAceptacion,\n            onChange: e => setCriterioAceptacion(e.target.value),\n            variant: \"outlined\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"label\",\n            fullWidth: true,\n            children: [\"Subir Imagen\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              hidden: true,\n              onChange: handleImagenChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), imagenPrueba.file && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            mt: 1,\n            children: [\"Imagen seleccionada: \", imagenPrueba.file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Guardar Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      ref: alertRef,\n      severity: showAlert.severity,\n      message: showAlert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(CrearPlanDePrueba, \"hO3xoPcS5or0nnwG9E6ob/GbO4U=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","prueba","setPrueba","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterioAceptacion","setCriterioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","file","base64","navigate","id","alertRef","apiUrl","process","env","REACT_APP_API_URL","MAX_IMAGE_SIZE","handleImagenChange","e","target","files","size","severity","message","reader","FileReader","onload","result","onerror","error","console","readAsDataURL","fetchPlanDePrueba","token","localStorage","getItem","config","headers","response","get","data","id_plan","resultado_esperado","prueba_realizada","estado_prueba","criterio_aceptacion","imagen_prueba","handleSubmit","preventDefault","planDePrueba","put","msg","setTimeout","current","scrollIntoView","behavior","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","mt","item","xs","fullWidth","label","value","required","InputProps","readOnly","onChange","multiline","rows","disabled","sm","component","type","accept","hidden","name","color","ref","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/EditarPrueba.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\r\n\r\nconst CrearPlanDePrueba = () => {\r\n    const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\r\n    const [prueba, setPrueba] = useState('');\r\n    const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n    const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n    const [criterioAceptacion, setCriterioAceptacion] = useState('');\r\n    const [estadoPrueba, setEstadoPrueba] = useState('');\r\n    const [imagenPrueba, setImagenPrueba] = useState({ file: null, base64: '' });\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const alertRef = useRef(null);\r\n    const apiUrl = process.env.REACT_APP_API_URL; // La URL base de la API\r\n\r\n    const MAX_IMAGE_SIZE = 2 * 1024 * 1024; // 2 MB en bytes\r\n\r\n    // Redirige al login si no está autenticado\r\n    useEffect(() => {\r\n        if (!isAuthenticated()) {\r\n            navigate('/login');\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Manejar la subida de imágenes\r\n    const handleImagenChange = (e) => {\r\n        const file = e.target.files[0]; // Obtén el archivo seleccionado\r\n        if (file) {\r\n            // Verificar el tamaño del archivo\r\n            if (file.size > MAX_IMAGE_SIZE) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'La imagen es demasiado grande. El tamaño máximo permitido es de 2 MB.',\r\n                });\r\n                setImagenPrueba({ file: null, base64: '' }); // Limpiar el estado de la imagen\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                setImagenPrueba({ file, base64: reader.result }); // Guarda el archivo y la cadena Base64 en el estado\r\n            };\r\n            reader.onerror = (error) => {\r\n                console.error(\"Error al convertir la imagen a Base64:\", error);\r\n            };\r\n            reader.readAsDataURL(file); // Convierte el archivo a Base64\r\n        }\r\n    };\r\n\r\n    // Cargar los datos del plan de prueba existente\r\n    useEffect(() => {\r\n        const fetchPlanDePrueba = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (!token) {\r\n                    setShowAlert({\r\n                        severity: 'error',\r\n                        message: 'No se encontró el token de autenticación.',\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'x-auth-token': token,\r\n                    },\r\n                };\r\n\r\n                const response = await axios.get(\r\n                    `${apiUrl}/api/pruebas/pruebas/${id}`,\r\n                    config\r\n                );\r\n\r\n                const data = response.data;\r\n\r\n                // Asignar valores recuperados a los estados del formulario\r\n                setPrueba(data.id_plan || '');\r\n                setResultadoEsperado(data.resultado_esperado || '');\r\n                setPruebaRealizada(data.prueba_realizada || '');\r\n                setEstadoPrueba(data.estado_prueba || '');\r\n                setCriterioAceptacion(data.criterio_aceptacion || '');\r\n                setImagenPrueba({ file: data.imagen_prueba, base64: data.imagen_prueba });\r\n            } catch (error) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'Hubo un error al cargar el plan de prueba.',\r\n                });\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchPlanDePrueba();\r\n        }\r\n    }, [id]);\r\n\r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Todos los campos del plan de prueba son obligatorios.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const planDePrueba = {\r\n            prueba,\r\n            resultadoEsperado,\r\n            pruebaRealizada,\r\n            estadoPrueba,\r\n            criterioAceptacion,\r\n            imagenPrueba: imagenPrueba.base64, // Solo se envía la representación en Base64\r\n        };\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setShowAlert({\r\n                    severity: 'error',\r\n                    message: 'No se encontró el token de autenticación.',\r\n                });\r\n                return;\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n\r\n            const response = await axios.put(\r\n                `${apiUrl}/api/pruebas/updatePlan/${prueba}`,\r\n                planDePrueba,\r\n                config\r\n            );\r\n\r\n            if (response.data.msg) {\r\n                setShowAlert({ severity: 'success', message: response.data.msg });\r\n                setTimeout(() => navigate('/gestiones/proyectos'), 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al crear el plan de prueba:', error.response || error);\r\n            setShowAlert({\r\n                severity: 'error',\r\n                message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n            });\r\n        } finally {\r\n            if (alertRef.current) {\r\n                alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 5 }}>\r\n            <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                Edición de la prueba\r\n            </Typography>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={2} mt={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Número de Prueba\"\r\n                            value={prueba}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Resultado Esperado\"\r\n                            value={resultadoEsperado}\r\n                            onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Prueba Realizada\"\r\n                            value={pruebaRealizada}\r\n                            onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <InputLabel>Estado de la Prueba</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={estadoPrueba}\r\n                            onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                            required\r\n                        >\r\n                            <MenuItem value=\"\" disabled>Selecciona el estado...</MenuItem>\r\n                            <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n                            <MenuItem value=\"Rechazada\">Rechazado</MenuItem>\r\n                            <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n                            <MenuItem value=\"Bloqueado\">Bloqueado</MenuItem>\r\n                            <MenuItem value=\"Desconocido\">Desconocido</MenuItem>\r\n                            <MenuItem value=\"Requiere más pruebas\">Requiere más pruebas</MenuItem>\r\n                            <MenuItem value=\"No aplicable\">No aplicable</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Criterio de Aceptación\"\r\n                            value={criterioAceptacion}\r\n                            onChange={(e) => setCriterioAceptacion(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"label\" fullWidth\r\n                        >\r\n                            Subir Imagen\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                hidden\r\n                                onChange={handleImagenChange}\r\n                            />\r\n                        </Button>\r\n                        {imagenPrueba.file && (\r\n                            <Typography variant=\"body2\" mt={1}>\r\n                                Imagen seleccionada: {imagenPrueba.file.name}\r\n                            </Typography>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Guardar Prueba\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {showAlert && <AlertMessage ref={alertRef} severity={showAlert.severity} message={showAlert.message} />}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CrearPlanDePrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}