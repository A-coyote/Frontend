{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstoPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere m치s pruebas', 'No aplicable'];\nconst DashboardChartsPrueba = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedProyecto, setSelectedProyecto] = useState('');\n  const [noData, setNoData] = useState(false);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    setLoading(true);\n    setNoData(false);\n    setError(null);\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id;\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\n      const proyectosData = response.data;\n      if (!proyectosData || Object.keys(proyectosData).length === 0) {\n        setNoData(true);\n        setProyectos({});\n        return;\n      }\n      setProyectos(proyectosData);\n      setSelectedProyecto(Object.keys(proyectosData)[0]); // Seleccionar el primer proyecto por defecto\n      setNoData(false);\n    } catch (err) {\n      console.error('Error al obtener los proyectos:', err);\n      setError('No se pudieron cargar los proyectos');\n      setProyectos({});\n      setNoData(true);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    fetchProyectos();\n  }, [fetchProyectos]);\n\n  // Preparar datos para el gr치fico\n  const chartData = {\n    labels: estadosPosibles,\n    datasets: [{\n      data: selectedProyecto ? estadosPosibles.map(estado => proyectos[selectedProyecto][estado.toLowerCase()] || 0) : [],\n      backgroundColor: ['green', 'red', 'yellow', 'orange', 'gray', 'purple', 'blue'] // Colores para cada estado\n    }]\n  };\n  const handleProyectoChange = e => {\n    setSelectedProyecto(e.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Estado de prubas por proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedProyecto,\n        onChange: handleProyectoChange,\n        style: {\n          padding: '5px',\n          width: '200px'\n        },\n        children: Object.keys(proyectos).map(nombreProyecto => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: nombreProyecto,\n          children: nombreProyecto\n        }, nombreProyecto, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), noData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: '#888'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay proyectos en el estado seleccionado. Intenta con otro estado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: 'red'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                const index = tooltipItem.dataIndex;\n                const label = chartData.labels[index] || 'Desconocido';\n                const value = tooltipItem.raw;\n                return `${label}: ${value} Proyectos`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsPrueba, \"QBWUl4j/OQATYFuqW100KFyO//k=\");\n_c = DashboardChartsPrueba;\nexport default DashboardChartsPrueba;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsPrueba\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","estadosPosibles","DashboardChartsPrueba","_s","proyectos","setProyectos","loading","setLoading","error","setError","selectedProyecto","setSelectedProyecto","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","response","get","proyectosData","data","Object","keys","length","err","console","chartData","labels","datasets","map","estado","toLowerCase","backgroundColor","handleProyectoChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","onChange","padding","width","nombreProyecto","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","index","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstoPrueba.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere m치s pruebas', 'No aplicable'];\r\n\r\nconst DashboardChartsPrueba = () => {\r\n    const [proyectos, setProyectos] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedProyecto, setSelectedProyecto] = useState('');\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        setLoading(true);\r\n        setNoData(false);\r\n        setError(null);\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id;\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n            };\r\n\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\r\n            const proyectosData = response.data;\r\n\r\n            if (!proyectosData || Object.keys(proyectosData).length === 0) {\r\n                setNoData(true);\r\n                setProyectos({});\r\n                return;\r\n            }\r\n\r\n            setProyectos(proyectosData);\r\n            setSelectedProyecto(Object.keys(proyectosData)[0]); // Seleccionar el primer proyecto por defecto\r\n            setNoData(false);\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No se pudieron cargar los proyectos');\r\n            setProyectos({});\r\n            setNoData(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        fetchProyectos();\r\n    }, [fetchProyectos]);\r\n\r\n    // Preparar datos para el gr치fico\r\n    const chartData = {\r\n        labels: estadosPosibles,\r\n        datasets: [{\r\n            data: selectedProyecto ? estadosPosibles.map(estado => proyectos[selectedProyecto][estado.toLowerCase()] || 0) : [],\r\n            backgroundColor: ['green', 'red', 'yellow', 'orange', 'gray', 'purple', 'blue'], // Colores para cada estado\r\n        }],\r\n    };\r\n\r\n    const handleProyectoChange = (e) => {\r\n        setSelectedProyecto(e.target.value);\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Estado de prubas por proyecto</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <select\r\n                    value={selectedProyecto}\r\n                    onChange={handleProyectoChange}\r\n                    style={{ padding: '5px', width: '200px' }}\r\n                >\r\n                    {Object.keys(proyectos).map(nombreProyecto => (\r\n                        <option key={nombreProyecto} value={nombreProyecto}>{nombreProyecto}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {noData && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: '#888' }}>\r\n                    <p>No hay proyectos en el estado seleccionado. Intenta con otro estado.</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: 'red' }}>\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            <Pie\r\n                data={chartData}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const index = tooltipItem.dataIndex;\r\n                                    const label = chartData.labels[index] || 'Desconocido';\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${label}: ${value} Proyectos`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsPrueba;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}