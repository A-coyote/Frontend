{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// const ProtectedRoute = ({ children }) => {\n//     const token = localStorage.getItem('token');\n//     console.log(\"Token obtenido en ProtectedRoute:\", token);\n\n//     if (!token) {\n//         console.log(\"Token no encontrado. Redirigiendo a login.\");\n//         return <Navigate to=\"/login\" />;\n//     }\n\n//     try {\n//         const decoded = jwtDecode(token);\n//         const currentTime = Date.now() / 1000;\n\n//         if (decoded.exp < currentTime) {\n//             console.log(\"Token expirado. Redirigiendo a login.\");\n//             return <Navigate to=\"/login\" />;\n//         }\n\n//         console.log(\"Token válido y permisos suficientes:\", decoded);\n//         return children;\n//     } catch (error) {\n//         console.error(\"Token inválido:\", error);\n//         return <Navigate to=\"/login\" />;\n//     }\n// };\n\n// export default ProtectedRoute;\n\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredPermission\n}) => {\n  _s();\n  const token = localStorage.getItem('token');\n  const [permissions, setPermissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!token) {\n      setLoading(false);\n      return; // Si no hay token, no intentamos obtener permisos\n    }\n    const fetchPermissions = async () => {\n      try {\n        const decoded = jwtDecode(token);\n        const userRoleId = decoded.user.rol;\n\n        // Realiza la solicitud a la API para obtener los permisos del usuario\n        const response = await axios.get(`http://localhost:5000/api/auth/permisosUser/${userRoleId}`);\n        if (response.data && Array.isArray(response.data)) {\n          setPermissions(response.data); // Establece los permisos del usuario\n        } else {\n          setPermissions([]);\n        }\n      } catch (error) {\n        console.error(\"Error al obtener los permisos\", error);\n        setError(\"Error al obtener los permisos\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPermissions();\n  }, [token]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this); // Puedes poner un spinner o algo de carga\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this); // Si ocurre un error al obtener permisos, redirige al login\n  }\n  if (!token) {\n    console.log(\"Token no encontrado. Redirigiendo a login.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      console.log(\"Token expirado. Redirigiendo a login.\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Verificación de permisos solo después de comprobar que el token es válido\n    const hasPermission = permissions.some(permission => permission.MenuID === requiredPermission);\n    if (!hasPermission) {\n      console.log(`Permiso ${requiredPermission} no encontrado. Redirigiendo a login.`);\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this);\n    }\n    console.log(\"Token válido y permisos suficientes:\", decoded);\n    // return children; // Si todo es válido, renderiza los hijos\n    return /*#__PURE__*/React.cloneElement(children, {\n      permissions\n    }); // Pasa los permisos como props a los hijos\n  } catch (error) {\n    console.error(\"Token inválido:\", error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(ProtectedRoute, \"n4MToRgP7O+0WAqmtMQF4X5tYYE=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jwtDecode","axios","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredPermission","_s","token","localStorage","getItem","permissions","setPermissions","loading","setLoading","error","setError","fetchPermissions","decoded","userRoleId","user","rol","response","get","data","Array","isArray","console","fileName","_jsxFileName","lineNumber","columnNumber","to","log","currentTime","Date","now","exp","hasPermission","some","permission","MenuID","cloneElement","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// const ProtectedRoute = ({ children }) => {\r\n//     const token = localStorage.getItem('token');\r\n//     console.log(\"Token obtenido en ProtectedRoute:\", token);\r\n\r\n//     if (!token) {\r\n//         console.log(\"Token no encontrado. Redirigiendo a login.\");\r\n//         return <Navigate to=\"/login\" />;\r\n//     }\r\n\r\n//     try {\r\n//         const decoded = jwtDecode(token);\r\n//         const currentTime = Date.now() / 1000;\r\n\r\n//         if (decoded.exp < currentTime) {\r\n//             console.log(\"Token expirado. Redirigiendo a login.\");\r\n//             return <Navigate to=\"/login\" />;\r\n//         }\r\n\r\n//         console.log(\"Token válido y permisos suficientes:\", decoded);\r\n//         return children;\r\n//     } catch (error) {\r\n//         console.error(\"Token inválido:\", error);\r\n//         return <Navigate to=\"/login\" />;\r\n//     }\r\n// };\r\n\r\n// export default ProtectedRoute;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nconst ProtectedRoute = ({ children, requiredPermission }) => {\r\n    const token = localStorage.getItem('token');\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            setLoading(false);\r\n            return;  // Si no hay token, no intentamos obtener permisos\r\n        }\r\n\r\n        const fetchPermissions = async () => {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                const userRoleId = decoded.user.rol;\r\n\r\n                // Realiza la solicitud a la API para obtener los permisos del usuario\r\n                const response = await axios.get(`http://localhost:5000/api/auth/permisosUser/${userRoleId}`);\r\n\r\n                if (response.data && Array.isArray(response.data)) {\r\n                    setPermissions(response.data);  // Establece los permisos del usuario\r\n                } else {\r\n                    setPermissions([]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error al obtener los permisos\", error);\r\n                setError(\"Error al obtener los permisos\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPermissions();\r\n    }, [token]);\r\n\r\n    if (loading) {\r\n        return <div>Cargando...</div>;  // Puedes poner un spinner o algo de carga\r\n    }\r\n\r\n    if (error) {\r\n        return <Navigate to=\"/login\" />; // Si ocurre un error al obtener permisos, redirige al login\r\n    }\r\n\r\n    if (!token) {\r\n        console.log(\"Token no encontrado. Redirigiendo a login.\");\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    try {\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        if (decoded.exp < currentTime) {\r\n            console.log(\"Token expirado. Redirigiendo a login.\");\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        // Verificación de permisos solo después de comprobar que el token es válido\r\n        const hasPermission = permissions.some(permission => permission.MenuID === requiredPermission);\r\n\r\n        if (!hasPermission) {\r\n            console.log(`Permiso ${requiredPermission} no encontrado. Redirigiendo a login.`);\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        console.log(\"Token válido y permisos suficientes:\", decoded);\r\n       // return children; // Si todo es válido, renderiza los hijos\r\n       return React.cloneElement(children, { permissions }); // Pasa los permisos como props a los hijos\r\n       \r\n    } catch (error) {\r\n        console.error(\"Token inválido:\", error);\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}