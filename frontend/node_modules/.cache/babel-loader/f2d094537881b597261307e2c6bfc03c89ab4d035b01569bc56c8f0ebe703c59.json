{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstoPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\nconst DashboardChartsPrueba = () => {\n  _s();\n  const [proyectos, setProyectos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\n  const [noData, setNoData] = useState(false);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    setLoading(true);\n    setNoData(false);\n    setError(null);\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id;\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\n      const {\n        estadoProyectos\n      } = response.data;\n      if (!estadoProyectos || Object.values(estadoProyectos).every(count => count === 0)) {\n        setNoData(true);\n        setProyectos([]);\n        return;\n      }\n      setProyectos(estadoProyectos);\n      setNoData(false);\n    } catch (err) {\n      console.error('Error al obtener los proyectos:', err);\n      setError('No se pudieron cargar los proyectos');\n      setProyectos([]);\n      setNoData(true);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token]);\n  useEffect(() => {\n    fetchProyectos();\n  }, [fetchProyectos]);\n\n  // Preparar datos para el gráfico\n  const chartData = {\n    labels: estadosPosibles,\n    datasets: [{\n      data: estadosPosibles.map(estado => proyectos[estado.toLowerCase()] || 0),\n      // Mapeo de datos según el estado\n      backgroundColor: ['green', 'red', 'yellow', 'orange', 'gray', 'purple', 'blue'] // Colores para cada estado\n    }]\n  };\n  const handleEstadoChange = e => {\n    setSelectedEstado(e.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Proyectos por Estado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEstado,\n        onChange: handleEstadoChange,\n        style: {\n          padding: '5px',\n          width: '200px'\n        },\n        children: estadosPosibles.map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado,\n          children: estado\n        }, estado, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), noData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: '#888'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay proyectos en el estado seleccionado. Intenta con otro estado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: 'red'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                const index = tooltipItem.dataIndex;\n                const label = chartData.labels[index] || 'Desconocido';\n                const value = tooltipItem.raw;\n                return `${label}: ${value} Proyectos`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsPrueba, \"Kpvdgsk00P9zJQY8BDrPzsqn/cQ=\");\n_c = DashboardChartsPrueba;\nexport default DashboardChartsPrueba;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsPrueba\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","estadosPosibles","DashboardChartsPrueba","_s","proyectos","setProyectos","loading","setLoading","error","setError","selectedEstado","setSelectedEstado","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","response","get","estadoProyectos","data","Object","values","every","count","err","console","chartData","labels","datasets","map","estado","toLowerCase","backgroundColor","handleEstadoChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","onChange","padding","width","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","index","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstoPrueba.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\r\n\r\nconst DashboardChartsPrueba = () => {\r\n    const [proyectos, setProyectos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        setLoading(true);\r\n        setNoData(false);\r\n        setError(null);\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id;\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n            };\r\n\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\r\n            const { estadoProyectos } = response.data;\r\n\r\n            if (!estadoProyectos || Object.values(estadoProyectos).every(count => count === 0)) {\r\n                setNoData(true);\r\n                setProyectos([]);\r\n                return;\r\n            }\r\n\r\n            setProyectos(estadoProyectos);\r\n            setNoData(false);\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No se pudieron cargar los proyectos');\r\n            setProyectos([]);\r\n            setNoData(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token]);\r\n\r\n    useEffect(() => {\r\n        fetchProyectos();\r\n    }, [fetchProyectos]);\r\n\r\n    // Preparar datos para el gráfico\r\n    const chartData = {\r\n        labels: estadosPosibles,\r\n        datasets: [{\r\n            data: estadosPosibles.map(estado => proyectos[estado.toLowerCase()] || 0), // Mapeo de datos según el estado\r\n            backgroundColor: ['green', 'red', 'yellow', 'orange', 'gray', 'purple', 'blue'], // Colores para cada estado\r\n        }],\r\n    };\r\n\r\n    const handleEstadoChange = (e) => {\r\n        setSelectedEstado(e.target.value);\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Proyectos por Estado</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <select\r\n                    value={selectedEstado}\r\n                    onChange={handleEstadoChange}\r\n                    style={{ padding: '5px', width: '200px' }}\r\n                >\r\n                    {estadosPosibles.map(estado => (\r\n                        <option key={estado} value={estado}>{estado}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {noData && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: '#888' }}>\r\n                    <p>No hay proyectos en el estado seleccionado. Intenta con otro estado.</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: 'red' }}>\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            <Pie\r\n                data={chartData}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const index = tooltipItem.dataIndex;\r\n                                    const label = chartData.labels[index] || 'Desconocido';\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${label}: ${value} Proyectos`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsPrueba"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}