{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardLayoutNavigationLinks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme } from '@mui/material/styles';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode'; // Para decodificar el token JWT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demoTheme = createTheme({\n  palette: {\n    mode: 'light' // Tema claro por defecto\n  }\n});\nfunction DemoPageContent({\n  pathname\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Dashboard content for \", pathname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = DemoPageContent;\nexport default function DashboardLayoutNavigationLinks() {\n  _s();\n  const [menuItems, setMenuItems] = useState([]); // Estado para almacenar los menús\n  const navigate = useNavigate();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  // Función para obtener el nombre de usuario desde el token JWT\n  const getUserFromToken = () => {\n    const token = localStorage.getItem('authToken'); // Supongo que almacenas el token en localStorage\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.user.username; // Retorna el nombre de usuario\n    }\n    return null;\n  };\n\n  // useEffect para cargar los menús al montar el componente\n  useEffect(() => {\n    const fetchMenuItems = async () => {\n      const username = getUserFromToken(); // Obtén el nombre de usuario\n      if (!username) return;\n      try {\n        // Llama a la API para obtener los menús según el usuario logueado\n        const response = await axios.get(`/menu/${username}`);\n        const menuData = response.data.map(item => ({\n          segment: item.MenuID,\n          // Usa el campo MenuID como segmento de navegación\n          title: item.MenuName,\n          // Usa el campo MenuName como título\n          icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this) // Icono por defecto (puedes cambiarlo según tu lógica)\n        }));\n        setMenuItems(menuData); // Actualiza el estado con los menús\n      } catch (error) {\n        console.error('Error al obtener los menús:', error);\n      }\n    };\n    fetchMenuItems(); // Llama a la función para obtener los menús\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    navigation: menuItems // Pasa las opciones de menú dinámicas\n    ,\n    router: {\n      pathname,\n      push: path => navigate(path)\n    },\n    theme: demoTheme // Pasa el tema claro aquí\n    ,\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: /*#__PURE__*/_jsxDEV(DemoPageContent, {\n        pathname: pathname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardLayoutNavigationLinks, \"owE5Ga9IEFISBI64uua6Rn75hfs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c2 = DashboardLayoutNavigationLinks;\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoPageContent\");\n$RefreshReg$(_c2, \"DashboardLayoutNavigationLinks\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","createTheme","DescriptionIcon","AppProvider","DashboardLayout","useNavigate","useLocation","axios","jwtDecode","jsxDEV","_jsxDEV","demoTheme","palette","mode","DemoPageContent","pathname","sx","py","display","flexDirection","alignItems","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DashboardLayoutNavigationLinks","_s","menuItems","setMenuItems","navigate","location","getUserFromToken","token","localStorage","getItem","decodedToken","user","username","fetchMenuItems","response","get","menuData","data","map","item","segment","MenuID","title","MenuName","icon","error","console","navigation","router","push","path","theme","_c2","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardLayoutNavigationLinks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode'; // Para decodificar el token JWT\r\n\r\nconst demoTheme = createTheme({\r\n  palette: {\r\n    mode: 'light', // Tema claro por defecto\r\n  },\r\n});\r\n\r\nfunction DemoPageContent({ pathname }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        py: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Typography>Dashboard content for {pathname}</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function DashboardLayoutNavigationLinks() {\r\n  const [menuItems, setMenuItems] = useState([]); // Estado para almacenar los menús\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  // Función para obtener el nombre de usuario desde el token JWT\r\n  const getUserFromToken = () => {\r\n    const token = localStorage.getItem('authToken'); // Supongo que almacenas el token en localStorage\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      return decodedToken.user.username; // Retorna el nombre de usuario\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // useEffect para cargar los menús al montar el componente\r\n  useEffect(() => {\r\n    const fetchMenuItems = async () => {\r\n      const username = getUserFromToken(); // Obtén el nombre de usuario\r\n      if (!username) return;\r\n\r\n      try {\r\n        // Llama a la API para obtener los menús según el usuario logueado\r\n        const response = await axios.get(`/menu/${username}`);\r\n        const menuData = response.data.map(item => ({\r\n          segment: item.MenuID, // Usa el campo MenuID como segmento de navegación\r\n          title: item.MenuName, // Usa el campo MenuName como título\r\n          icon: <DescriptionIcon />, // Icono por defecto (puedes cambiarlo según tu lógica)\r\n        }));\r\n        setMenuItems(menuData); // Actualiza el estado con los menús\r\n      } catch (error) {\r\n        console.error('Error al obtener los menús:', error);\r\n      }\r\n    };\r\n\r\n    fetchMenuItems(); // Llama a la función para obtener los menús\r\n  }, []);\r\n\r\n  return (\r\n    <AppProvider\r\n      navigation={menuItems} // Pasa las opciones de menú dinámicas\r\n      router={{\r\n        pathname,\r\n        push: (path) => navigate(path),\r\n      }}\r\n      theme={demoTheme} // Pasa el tema claro aquí\r\n    >\r\n      <DashboardLayout>\r\n        <DemoPageContent pathname={pathname} />\r\n      </DashboardLayout>\r\n    </AppProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,OAAO,EAAE;IACPC,IAAI,EAAE,OAAO,CAAE;EACjB;AACF,CAAC,CAAC;AAEF,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACrC,oBACEL,OAAA,CAACX,GAAG;IACFiB,EAAE,EAAE;MACFC,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,eAEFZ,OAAA,CAACV,UAAU;MAAAsB,QAAA,GAAC,wBAAsB,EAACP,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACC,EAAA,GAdQb,eAAe;AAgBxB,eAAe,SAASc,8BAA8BA,CAAA,EAAG;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMkC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM4B,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGkB,QAAQ,CAAClB,QAAQ;;EAElC;EACA,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACjD,IAAIF,KAAK,EAAE;MACT,MAAMG,YAAY,GAAG9B,SAAS,CAAC2B,KAAK,CAAC;MACrC,OAAOG,YAAY,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC;IACrC;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA3C,SAAS,CAAC,MAAM;IACd,MAAM4C,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMD,QAAQ,GAAGN,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACrC,IAAI,CAACM,QAAQ,EAAE;MAEf,IAAI;QACF;QACA,MAAME,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAAC,SAASH,QAAQ,EAAE,CAAC;QACrD,MAAMI,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UAC1CC,OAAO,EAAED,IAAI,CAACE,MAAM;UAAE;UACtBC,KAAK,EAAEH,IAAI,CAACI,QAAQ;UAAE;UACtBC,IAAI,eAAE1C,OAAA,CAACR,eAAe;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,CAAE;QAC7B,CAAC,CAAC,CAAC;QACHK,YAAY,CAACa,QAAQ,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDZ,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/B,OAAA,CAACP,WAAW;IACVoD,UAAU,EAAEzB,SAAU,CAAC;IAAA;IACvB0B,MAAM,EAAE;MACNzC,QAAQ;MACR0C,IAAI,EAAGC,IAAI,IAAK1B,QAAQ,CAAC0B,IAAI;IAC/B,CAAE;IACFC,KAAK,EAAEhD,SAAU,CAAC;IAAA;IAAAW,QAAA,eAElBZ,OAAA,CAACN,eAAe;MAAAkB,QAAA,eACdZ,OAAA,CAACI,eAAe;QAACC,QAAQ,EAAEA;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAElB;AAACG,EAAA,CArDuBD,8BAA8B;EAAA,QAEnCvB,WAAW,EACXC,WAAW;AAAA;AAAAsD,GAAA,GAHNhC,8BAA8B;AAAA,IAAAD,EAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}