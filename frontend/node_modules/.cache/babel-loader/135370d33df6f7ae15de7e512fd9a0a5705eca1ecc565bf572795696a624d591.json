{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\PlanPruebas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Función para verificar autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Alerta de error o éxito\n  const [nombreProyecto, setNombreProyecto] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaInicio, setFechaInicio] = useState('');\n  const [fechaFin, setFechaFin] = useState('');\n  const [presupuesto, setPresupuesto] = useState('');\n  const [estado, setEstado] = useState('');\n  const [responsable, setResponsable] = useState('');\n  const [hitos, setHitos] = useState([]); // Arreglo de hitos\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Imagen de prueba\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Control de habilitación del formulario\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // ID del proyecto desde la URL\n\n  // Verificar si el usuario está autenticado\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Manejar el cambio de imagen\n  const handleImagenChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImagenPrueba(e.target.files[0]);\n    }\n  };\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\n        const proyecto = response.data;\n\n        // Convertir fechas al formato correcto\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\n        setNombreProyecto(proyecto.nombre);\n        setDescripcion(proyecto.descripcion);\n        setFechaInicio(formatoFechaInicio);\n        setFechaFin(formatoFechaFin);\n        setPresupuesto(proyecto.presupuesto);\n        setEstado(proyecto.estado);\n        setResponsable(proyecto.u_usuario);\n        setHitos(proyecto.hitos || []); // Arreglo de hitos\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Obtener los hitos del proyecto\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\n        setHitos(response.data || []); // Asegurar que sea un arreglo\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validar campos\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado || !descripcion || !criterrioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      hitoSeleccionado,\n      // Hito seleccionado\n      descripcion,\n      // Descripción añadida\n      criterrioAceptacion\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n\n      // Enviar plan de prueba\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n        setTimeout(() => {\n          navigate('/proyectos/tareas');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.msg) {\n        setShowAlert({\n          severity: 'error',\n          message: error.response.data.msg\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    }\n  };\n\n  // Habilitar el formulario después de hacer clic en el botón\n  const handleEnableForm = () => {\n    setFormularioHabilitado(true);\n  };\n\n  // Manejar la selección de un hito\n  const handleHitoSeleccionado = async e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n\n    // Obtener la descripción del hito seleccionado\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    if (hito) {\n      setDescripcionHito(hito.descripcion);\n    } else {\n      setDescripcionHito('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      severity: showAlert.severity,\n      message: showAlert.message,\n      autoHideDuration: 2000,\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Plan de Prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Nombre del Proyecto\",\n            value: nombreProyecto,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Inicio\",\n            type: \"date\",\n            value: fechaInicio,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Fin\",\n            type: \"date\",\n            value: fechaFin,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Presupuesto\",\n            value: presupuesto,\n            disabled: true // Solo lectura\n            ,\n            type: \"number\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Estado del Proyecto\",\n            value: estado,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Responsable\",\n            value: responsable,\n            disabled: true // Solo lectura\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleEnableForm,\n        children: \"Habilitar Plan de Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), formularioHabilitado && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Resultado Esperado\",\n              value: resultadoEsperado,\n              onChange: e => setResultadoEsperado(e.target.value),\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Prueba Realizada\",\n              value: pruebaRealizada,\n              onChange: e => setPruebaRealizada(e.target.value),\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Hito Seleccionado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: hitoSeleccionado,\n              onChange: handleHitoSeleccionado,\n              variant: \"outlined\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"Seleccione un hito\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: hito.id_hito,\n                children: hito.nombre\n              }, hito.id_hito, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Descripci\\xF3n del Hito\",\n              value: descripcionHito,\n              disabled: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Criterio de Aceptaci\\xF3n\",\n              value: criterrioAceptacion,\n              onChange: e => setCriterrioAceptacion(e.target.value),\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Estado de la Prueba\",\n              value: estadoPrueba,\n              onChange: e => setEstadoPrueba(e.target.value),\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"upload-button\",\n              type: \"file\",\n              onChange: handleImagenChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload-button\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                component: \"span\",\n                children: \"Subir Imagen de Prueba\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), imagenPrueba && /*#__PURE__*/_jsxDEV(Typography, {\n              children: imagenPrueba.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Enviar Plan de Prueba\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"jyJjbFUM1hFvVQ9foeW/lSb4TGo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","nombreProyecto","setNombreProyecto","descripcion","setDescripcion","fechaInicio","setFechaInicio","fechaFin","setFechaFin","presupuesto","setPresupuesto","estado","setEstado","responsable","setResponsable","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterrioAceptacion","setCriterrioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","formularioHabilitado","setFormularioHabilitado","navigate","id","handleImagenChange","e","target","files","fetchProyecto","response","get","proyecto","data","formatoFechaInicio","Date","fecha_inicio","toISOString","split","formatoFechaFin","fecha_finalizacion","nombre","u_usuario","error","console","severity","message","fetchHitos","handleSubmit","preventDefault","planDePrueba","token","localStorage","getItem","config","headers","post","msg","setTimeout","handleEnableForm","handleHitoSeleccionado","hitoId","value","hito","find","id_hito","sx","padding","children","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","item","xs","sm","fullWidth","label","disabled","type","InputLabelProps","shrink","color","onClick","mt","onChange","required","map","accept","style","display","htmlFor","component","name","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/PlanPruebas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Función para verificar autenticación\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Alerta de error o éxito\r\n  const [nombreProyecto, setNombreProyecto] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('');\r\n  const [fechaFin, setFechaFin] = useState('');\r\n  const [presupuesto, setPresupuesto] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [responsable, setResponsable] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Arreglo de hitos\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [criterrioAceptacion, setCriterrioAceptacion] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Imagen de prueba\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\r\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Control de habilitación del formulario\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // ID del proyecto desde la URL\r\n\r\n  // Verificar si el usuario está autenticado\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Manejar el cambio de imagen\r\n  const handleImagenChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setImagenPrueba(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        // Convertir fechas al formato correcto\r\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\r\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\r\n\r\n        setNombreProyecto(proyecto.nombre);\r\n        setDescripcion(proyecto.descripcion);\r\n        setFechaInicio(formatoFechaInicio);\r\n        setFechaFin(formatoFechaFin);\r\n        setPresupuesto(proyecto.presupuesto);\r\n        setEstado(proyecto.estado);\r\n        setResponsable(proyecto.u_usuario);\r\n        setHitos(proyecto.hitos || []); // Arreglo de hitos\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Obtener los hitos del proyecto\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/pruebas/hitos/${id}`);\r\n        setHitos(response.data || []); // Asegurar que sea un arreglo\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validar campos\r\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado || !descripcion || !criterrioAceptacion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      hitoSeleccionado, // Hito seleccionado\r\n      descripcion, // Descripción añadida\r\n      criterrioAceptacion,\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      // Enviar plan de prueba\r\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\r\n\r\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\r\n        setShowAlert({\r\n          severity: 'success',\r\n          message: response.data.msg,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          navigate('/proyectos/tareas');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n\r\n      if (error.response && error.response.data && error.response.data.msg) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: error.response.data.msg,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Habilitar el formulario después de hacer clic en el botón\r\n  const handleEnableForm = () => {\r\n    setFormularioHabilitado(true);\r\n  };\r\n\r\n  // Manejar la selección de un hito\r\n  const handleHitoSeleccionado = async (e) => {\r\n    const hitoId = e.target.value;\r\n    setHitoSeleccionado(hitoId);\r\n\r\n    // Obtener la descripción del hito seleccionado\r\n    const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n    if (hito) {\r\n      setDescripcionHito(hito.descripcion);\r\n    } else {\r\n      setDescripcionHito('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000}\r\n          sx={{ mb: 4 }}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Plan de Prueba\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {/* Información del Proyecto - Solo Lectura */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nombre del Proyecto\"\r\n              value={nombreProyecto}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Inicio\"\r\n              type=\"date\"\r\n              value={fechaInicio}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Fin\"\r\n              type=\"date\"\r\n              value={fechaFin}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Presupuesto\"\r\n              value={presupuesto}\r\n              disabled={true} // Solo lectura\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Estado del Proyecto\"\r\n              value={estado}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Responsable\"\r\n              value={responsable}\r\n              disabled={true} // Solo lectura\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Sección para habilitar la forma de plan de prueba */}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEnableForm}>\r\n          Habilitar Plan de Prueba\r\n        </Button>\r\n\r\n        {/* Campos de Plan de Prueba */}\r\n        {formularioHabilitado && (\r\n          <div>\r\n            {/* Resultados esperados y criterios */}\r\n            <Grid container spacing={2} mt={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Resultado Esperado\"\r\n                  value={resultadoEsperado}\r\n                  onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Prueba Realizada\"\r\n                  value={pruebaRealizada}\r\n                  onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <InputLabel>Hito Seleccionado</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  value={hitoSeleccionado}\r\n                  onChange={handleHitoSeleccionado}\r\n                  variant=\"outlined\"\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Seleccione un hito</em>\r\n                  </MenuItem>\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito.id_hito} value={hito.id_hito}>\r\n                      {hito.nombre}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              {/* Descripción del hito seleccionado */}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Descripción del Hito\"\r\n                  value={descripcionHito}\r\n                  disabled\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n              {/* Criterios de aceptación */}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Criterio de Aceptación\"\r\n                  value={criterrioAceptacion}\r\n                  onChange={(e) => setCriterrioAceptacion(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Estado de la Prueba\"\r\n                  value={estadoPrueba}\r\n                  onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  required\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: 'none' }}\r\n                  id=\"upload-button\"\r\n                  type=\"file\"\r\n                  onChange={handleImagenChange}\r\n                />\r\n                <label htmlFor=\"upload-button\">\r\n                  <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                    Subir Imagen de Prueba\r\n                  </Button>\r\n                </label>\r\n                {imagenPrueba && <Typography>{imagenPrueba.name}</Typography>}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Enviar Plan de Prueba\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}