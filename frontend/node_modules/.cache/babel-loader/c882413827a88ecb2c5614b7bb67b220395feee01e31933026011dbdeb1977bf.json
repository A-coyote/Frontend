{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Navigate}from'react-router-dom';import{jwtDecode}from'jwt-decode';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requiredPermission}=_ref;const token=localStorage.getItem('token');const[permissions,setPermissions]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const apiUrl=process.env.REACT_APP_API_URL;// La URL base de la API\nuseEffect(()=>{if(!token){setLoading(false);return;// Si no hay token, no intentamos obtener permisos\n}const fetchPermissions=async()=>{try{const decoded=jwtDecode(token);const userRoleId=decoded.user.rol;// Realiza la solicitud a la API para obtener los permisos del usuario\nconst response=await axios.get(`${apiUrl}/api/auth/permisosUser/${userRoleId}`);if(response.data&&Array.isArray(response.data)){setPermissions(response.data);// Establece los permisos del usuario\n}else{setPermissions([]);}}catch(error){setError(\"Error al obtener los permisos\");}finally{setLoading(false);}};fetchPermissions();},[token]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Cargando...\"});}if(error){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(!token){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}try{const decoded=jwtDecode(token);const currentTime=Date.now()/1000;if(decoded.exp<currentTime){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}// Verificación de permisos solo después de comprobar que el token es válido\nconst hasPermission=permissions.some(permission=>permission.MenuID===requiredPermission);if(!hasPermission){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return/*#__PURE__*/React.cloneElement(children,{permissions});// Pasa los permisos como props a los hijos\n}catch(error){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}};export default ProtectedRoute;","map":{"version":3,"names":["React","useEffect","useState","Navigate","jwtDecode","axios","jsx","_jsx","ProtectedRoute","_ref","children","requiredPermission","token","localStorage","getItem","permissions","setPermissions","loading","setLoading","error","setError","apiUrl","process","env","REACT_APP_API_URL","fetchPermissions","decoded","userRoleId","user","rol","response","get","data","Array","isArray","to","currentTime","Date","now","exp","hasPermission","some","permission","MenuID","cloneElement"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nconst ProtectedRoute = ({ children, requiredPermission }) => {\r\n    const token = localStorage.getItem('token');\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const apiUrl = process.env.REACT_APP_API_URL; // La URL base de la API\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            setLoading(false);\r\n            return;  // Si no hay token, no intentamos obtener permisos\r\n        }\r\n\r\n        const fetchPermissions = async () => {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                const userRoleId = decoded.user.rol;\r\n\r\n                // Realiza la solicitud a la API para obtener los permisos del usuario\r\n                const response = await axios.get(`${apiUrl}/api/auth/permisosUser/${userRoleId}`);\r\n\r\n                if (response.data && Array.isArray(response.data)) {\r\n                    setPermissions(response.data);  // Establece los permisos del usuario\r\n                } else {\r\n                    setPermissions([]);\r\n                }\r\n            } catch (error) {\r\n                setError(\"Error al obtener los permisos\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPermissions();\r\n    }, [token]);\r\n\r\n    if (loading) {\r\n        return <div>Cargando...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (!token) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    try {\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        if (decoded.exp < currentTime) {\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        // Verificación de permisos solo después de comprobar que el token es válido\r\n        const hasPermission = permissions.some(permission => permission.MenuID === requiredPermission);\r\n\r\n        if (!hasPermission) {\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        \r\n       return React.cloneElement(children, { permissions }); // Pasa los permisos como props a los hijos\r\n       \r\n    } catch (error) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAAQC,SAAS,KAAO,YAAY,CACpC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAsC,IAArC,CAAEC,QAAQ,CAAEC,kBAAmB,CAAC,CAAAF,IAAA,CACpD,KAAM,CAAAG,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAmB,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAE;AAE9CvB,SAAS,CAAC,IAAM,CACZ,GAAI,CAACW,KAAK,CAAE,CACRM,UAAU,CAAC,KAAK,CAAC,CACjB,OAAS;AACb,CAEA,KAAM,CAAAO,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAAC,OAAO,CAAGtB,SAAS,CAACQ,KAAK,CAAC,CAChC,KAAM,CAAAe,UAAU,CAAGD,OAAO,CAACE,IAAI,CAACC,GAAG,CAEnC;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAzB,KAAK,CAAC0B,GAAG,CAAC,GAAGV,MAAM,0BAA0BM,UAAU,EAAE,CAAC,CAEjF,GAAIG,QAAQ,CAACE,IAAI,EAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAAE,CAC/ChB,cAAc,CAACc,QAAQ,CAACE,IAAI,CAAC,CAAG;AACpC,CAAC,IAAM,CACHhB,cAAc,CAAC,EAAE,CAAC,CACtB,CACJ,CAAE,MAAOG,KAAK,CAAE,CACZC,QAAQ,CAAC,+BAA+B,CAAC,CAC7C,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDO,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACb,KAAK,CAAC,CAAC,CAEX,GAAIK,OAAO,CAAE,CACT,mBAAOV,IAAA,QAAAG,QAAA,CAAK,aAAW,CAAK,CAAC,CACjC,CAEA,GAAIS,KAAK,CAAE,CACP,mBAAOZ,IAAA,CAACJ,QAAQ,EAACgC,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAEA,GAAI,CAACvB,KAAK,CAAE,CACR,mBAAOL,IAAA,CAACJ,QAAQ,EAACgC,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAEA,GAAI,CACA,KAAM,CAAAT,OAAO,CAAGtB,SAAS,CAACQ,KAAK,CAAC,CAChC,KAAM,CAAAwB,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAErC,GAAIZ,OAAO,CAACa,GAAG,CAAGH,WAAW,CAAE,CAC3B,mBAAO7B,IAAA,CAACJ,QAAQ,EAACgC,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAEA;AACA,KAAM,CAAAK,aAAa,CAAGzB,WAAW,CAAC0B,IAAI,CAACC,UAAU,EAAIA,UAAU,CAACC,MAAM,GAAKhC,kBAAkB,CAAC,CAE9F,GAAI,CAAC6B,aAAa,CAAE,CAChB,mBAAOjC,IAAA,CAACJ,QAAQ,EAACgC,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAGD,mBAAOnC,KAAK,CAAC4C,YAAY,CAAClC,QAAQ,CAAE,CAAEK,WAAY,CAAC,CAAC,CAAE;AAEzD,CAAE,MAAOI,KAAK,CAAE,CACZ,mBAAOZ,IAAA,CAACJ,QAAQ,EAACgC,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CACJ,CAAC,CAED,cAAe,CAAA3B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}