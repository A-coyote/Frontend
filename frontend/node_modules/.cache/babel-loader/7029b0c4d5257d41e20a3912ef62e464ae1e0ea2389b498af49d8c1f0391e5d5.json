{"ast":null,"code":"// import React, { useEffect, useState, useCallback } from 'react';\n// import { createTheme } from '@mui/material/styles';\n// import DescriptionIcon from '@mui/icons-material/Description';\n// import PersonIcon from '@mui/icons-material/Person';\n// import LockIcon from '@mui/icons-material/Lock';\n// import SecurityIcon from '@mui/icons-material/Security';\n// import { AppProvider } from '@toolpad/core/AppProvider';\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\n// import { Routes, Route, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { jwtDecode } from 'jwt-decode';\n// import Button from '@mui/material/Button'; // Importa el componente Button de MUI\n// import Usuario from '../pages/Seguridad/usuario';\n// import Roles from '../pages/Seguridad/Roles';\n// import CrearUsuario from '../pages/Seguridad/CrearUsuario'; \n// import EditarUsuario from '../pages/Seguridad/EditarUsuario';\n// import CrearRoles from '../pages/Seguridad/CrearRoles'; \n// import EditarRol from '../pages/Seguridad/EditarRol'; \n// import CrearPermisos from '../pages/Seguridad/CrearPermisos'; \n// import Proyectos from '../pages/Gestiones/Proyectos';\n// import CrearProyecto from '../pages/Gestiones/CrearProyectos';\n// import EditarProyecto from '../pages/Gestiones/EditarProyecto'; \n// import CrearHitos from '../pages/Gestiones/CrearHitos'; \n// import EditarHito from '../pages/Gestiones/EditarHito'; \n// import Tareas from '../pages/Proyectos/Tareas'; \n// import EditarTarea from '../pages/Proyectos/EditarTarea'; \n// import CrearPruebas from '../pages/Proyectos/PlanPruebas'; \n// import VerPruebasHito from '../pages/Proyectos/Hitos'; \n// import EditarPrueba from '../pages/Proyectos/EditarPrueba'; \n\n// const iconMap = {\n//     Seguridad: <SecurityIcon />,\n//     Roles: <PersonIcon />,\n//     Usuarios: <DescriptionIcon />,\n//     Permisos: <LockIcon />,\n// };\n\n// const demoTheme = createTheme({\n//     palette: {\n//         mode: 'light',\n//     },\n// });\n\n// export default function DashboardLayoutNavigationLinks() {\n//     const navigate = useNavigate();\n//     const [menuItems, setMenuItems] = useState([]);\n//     const token = localStorage.getItem('token');\n//     const isAuthenticated = Boolean(token);\n\n//     const fetchMenus = useCallback(async () => {\n//         if (!token) return;\n\n//         const decoded = jwtDecode(token);\n//         const username = decoded.user.username;\n\n//         try {\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\n//             console.log('Menú obtenido:', response.data);\n//             setMenuItems(response.data);\n//         } catch (error) {\n//             console.error('Error al obtener los menús:', error);\n//         }\n//     }, [token]);\n\n//     useEffect(() => {\n//         if (!isAuthenticated) {\n//             console.log('Usuario no autenticado, redirigiendo al login.');\n//             navigate('/login');\n//         } else {\n//             fetchMenus();\n//         }\n//     }, [isAuthenticated, fetchMenus, navigate]);\n\n//     const handleMenuClick = (url) => {\n//         if (url) {\n//             console.log('Navegando a:', url);\n//             navigate(`/${url}`);\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem('token'); // Elimina el token del almacenamiento local\n//         navigate('/login'); // Redirige al usuario a la página de inicio de sesión\n//     };\n\n//     const navigation = menuItems.map((item) => {\n//         if (item.ParentMenuID === 0 && item.VisibleUsuario === 1) {\n//             return {\n//                 segment: item.MenuURL,\n//                 title: item.DisplayName,\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\n//                 children: menuItems\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\n//                     .map((subItem) => ({\n//                         segment: subItem.MenuURL,\n//                         title: subItem.DisplayName,\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\n//                         onClick: () => handleMenuClick(subItem.MenuURL),\n//                     })),\n//                 onClick: () => handleMenuClick(item.MenuURL),\n//             };\n//         }\n//         return null;\n//     }).filter(Boolean);\n\n//     return (\n//         <AppProvider navigation={navigation} theme={demoTheme}>\n\n//             <DashboardLayout>\n\n//                 <Routes>\n//                     <Route path=\"seguridad/usuarios\" element={<Usuario />} />\n//                     <Route path=\"seguridad/crear-usuario\" element={<CrearUsuario />} />\n//                     <Route path=\"seguridad/editar-usuario/:id\" element={<EditarUsuario />} />\n//                     <Route path=\"seguridad/roles\" element={<Roles />} />\n//                     <Route path=\"seguridad/crear-roles\" element={<CrearRoles />} />\n//                     <Route path=\"seguridad/editar-roles/:id\" element={<EditarRol />} />\n//                     <Route path=\"seguridad/crear-permisos/:id\" element={<CrearPermisos />} />\n//                     <Route path=\"gestiones/proyectos\" element={<Proyectos />} />\n//                     <Route path=\"gestiones/crear-proyectos\" element={<CrearProyecto />} />\n//                     <Route path=\"gestiones/editar-proyectos/:id\" element={<EditarProyecto />} />\n//                     <Route path=\"gestiones/crear-hitos/:id\" element={<CrearHitos />} />\n//                     <Route path=\"gestiones/editar-hitos/:id\" element={<EditarHito />} />\n//                     <Route path=\"proyectos/tareas\" element={<Tareas />} />\n//                     <Route path=\"proyectos/editar-tarea/:id\" element={<EditarTarea />} />\n//                     <Route path=\"proyectos/crear-pruebas/:id\" element={<CrearPruebas />} />\n//                     <Route path=\"proyectos/hitos-pruebas/:id\" element={<VerPruebasHito />} />\n//                     <Route path=\"proyectos/editar-plan/:id\" element={<EditarPrueba />} />\n//                 </Routes>\n//             </DashboardLayout>\n//         </AppProvider>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardPageLayout.js"],"sourcesContent":["// import React, { useEffect, useState, useCallback } from 'react';\r\n// import { createTheme } from '@mui/material/styles';\r\n// import DescriptionIcon from '@mui/icons-material/Description';\r\n// import PersonIcon from '@mui/icons-material/Person';\r\n// import LockIcon from '@mui/icons-material/Lock';\r\n// import SecurityIcon from '@mui/icons-material/Security';\r\n// import { AppProvider } from '@toolpad/core/AppProvider';\r\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\n// import { Routes, Route, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import Button from '@mui/material/Button'; // Importa el componente Button de MUI\r\n// import Usuario from '../pages/Seguridad/usuario';\r\n// import Roles from '../pages/Seguridad/Roles';\r\n// import CrearUsuario from '../pages/Seguridad/CrearUsuario'; \r\n// import EditarUsuario from '../pages/Seguridad/EditarUsuario';\r\n// import CrearRoles from '../pages/Seguridad/CrearRoles'; \r\n// import EditarRol from '../pages/Seguridad/EditarRol'; \r\n// import CrearPermisos from '../pages/Seguridad/CrearPermisos'; \r\n// import Proyectos from '../pages/Gestiones/Proyectos';\r\n// import CrearProyecto from '../pages/Gestiones/CrearProyectos';\r\n// import EditarProyecto from '../pages/Gestiones/EditarProyecto'; \r\n// import CrearHitos from '../pages/Gestiones/CrearHitos'; \r\n// import EditarHito from '../pages/Gestiones/EditarHito'; \r\n// import Tareas from '../pages/Proyectos/Tareas'; \r\n// import EditarTarea from '../pages/Proyectos/EditarTarea'; \r\n// import CrearPruebas from '../pages/Proyectos/PlanPruebas'; \r\n// import VerPruebasHito from '../pages/Proyectos/Hitos'; \r\n// import EditarPrueba from '../pages/Proyectos/EditarPrueba'; \r\n\r\n// const iconMap = {\r\n//     Seguridad: <SecurityIcon />,\r\n//     Roles: <PersonIcon />,\r\n//     Usuarios: <DescriptionIcon />,\r\n//     Permisos: <LockIcon />,\r\n// };\r\n\r\n// const demoTheme = createTheme({\r\n//     palette: {\r\n//         mode: 'light',\r\n//     },\r\n// });\r\n\r\n// export default function DashboardLayoutNavigationLinks() {\r\n//     const navigate = useNavigate();\r\n//     const [menuItems, setMenuItems] = useState([]);\r\n//     const token = localStorage.getItem('token');\r\n//     const isAuthenticated = Boolean(token);\r\n\r\n//     const fetchMenus = useCallback(async () => {\r\n//         if (!token) return;\r\n\r\n//         const decoded = jwtDecode(token);\r\n//         const username = decoded.user.username;\r\n\r\n//         try {\r\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\r\n//             console.log('Menú obtenido:', response.data);\r\n//             setMenuItems(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error al obtener los menús:', error);\r\n//         }\r\n//     }, [token]);\r\n\r\n//     useEffect(() => {\r\n//         if (!isAuthenticated) {\r\n//             console.log('Usuario no autenticado, redirigiendo al login.');\r\n//             navigate('/login');\r\n//         } else {\r\n//             fetchMenus();\r\n//         }\r\n//     }, [isAuthenticated, fetchMenus, navigate]);\r\n\r\n//     const handleMenuClick = (url) => {\r\n//         if (url) {\r\n//             console.log('Navegando a:', url);\r\n//             navigate(`/${url}`);\r\n//         }\r\n//     };\r\n\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token'); // Elimina el token del almacenamiento local\r\n//         navigate('/login'); // Redirige al usuario a la página de inicio de sesión\r\n//     };\r\n\r\n//     const navigation = menuItems.map((item) => {\r\n//         if (item.ParentMenuID === 0 && item.VisibleUsuario === 1) {\r\n//             return {\r\n//                 segment: item.MenuURL,\r\n//                 title: item.DisplayName,\r\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\r\n//                 children: menuItems\r\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\r\n//                     .map((subItem) => ({\r\n//                         segment: subItem.MenuURL,\r\n//                         title: subItem.DisplayName,\r\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\r\n//                         onClick: () => handleMenuClick(subItem.MenuURL),\r\n//                     })),\r\n//                 onClick: () => handleMenuClick(item.MenuURL),\r\n//             };\r\n//         }\r\n//         return null;\r\n//     }).filter(Boolean);\r\n\r\n//     return (\r\n//         <AppProvider navigation={navigation} theme={demoTheme}>\r\n            \r\n//             <DashboardLayout>\r\n                \r\n//                 <Routes>\r\n//                     <Route path=\"seguridad/usuarios\" element={<Usuario />} />\r\n//                     <Route path=\"seguridad/crear-usuario\" element={<CrearUsuario />} />\r\n//                     <Route path=\"seguridad/editar-usuario/:id\" element={<EditarUsuario />} />\r\n//                     <Route path=\"seguridad/roles\" element={<Roles />} />\r\n//                     <Route path=\"seguridad/crear-roles\" element={<CrearRoles />} />\r\n//                     <Route path=\"seguridad/editar-roles/:id\" element={<EditarRol />} />\r\n//                     <Route path=\"seguridad/crear-permisos/:id\" element={<CrearPermisos />} />\r\n//                     <Route path=\"gestiones/proyectos\" element={<Proyectos />} />\r\n//                     <Route path=\"gestiones/crear-proyectos\" element={<CrearProyecto />} />\r\n//                     <Route path=\"gestiones/editar-proyectos/:id\" element={<EditarProyecto />} />\r\n//                     <Route path=\"gestiones/crear-hitos/:id\" element={<CrearHitos />} />\r\n//                     <Route path=\"gestiones/editar-hitos/:id\" element={<EditarHito />} />\r\n//                     <Route path=\"proyectos/tareas\" element={<Tareas />} />\r\n//                     <Route path=\"proyectos/editar-tarea/:id\" element={<EditarTarea />} />\r\n//                     <Route path=\"proyectos/crear-pruebas/:id\" element={<CrearPruebas />} />\r\n//                     <Route path=\"proyectos/hitos-pruebas/:id\" element={<VerPruebasHito />} />\r\n//                     <Route path=\"proyectos/editar-plan/:id\" element={<EditarPrueba />} />\r\n//                 </Routes>\r\n//             </DashboardLayout>\r\n//         </AppProvider>\r\n//     );\r\n// }"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}