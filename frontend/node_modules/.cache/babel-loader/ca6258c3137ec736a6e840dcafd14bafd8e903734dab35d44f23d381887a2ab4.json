{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\PlanPruebas.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\n  const [nombreProyecto, setNombreProyecto] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaInicio, setFechaInicio] = useState('');\n  const [fechaFin, setFechaFin] = useState('');\n  const [presupuesto, setPresupuesto] = useState('');\n  const [estado, setEstado] = useState('');\n  const [responsable, setResponsable] = useState('');\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Nuevo estado para el hito seleccionado\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n\n  // Verificar si el usuario está autenticado al cargar el componente\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\n        const proyecto = response.data;\n\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\n        setNombreProyecto(proyecto.nombre);\n        setDescripcion(proyecto.descripcion);\n        setFechaInicio(formatoFechaInicio);\n        setFechaFin(formatoFechaFin);\n        setPresupuesto(proyecto.presupuesto);\n        setEstado(proyecto.estado);\n        setResponsable(proyecto.u_usuario);\n\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Obtener los hitos de la API\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/hitos/hito/${id}`);\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validaciones simples para el plan de prueba\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      hitoSeleccionado // Incluir el hito seleccionado\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n\n      // Aquí puedes enviar el plan de prueba a la API\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n\n        // Redirigir después de 2 segundos\n        setTimeout(() => {\n          navigate('/proyectos/tareas');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.msg) {\n        setShowAlert({\n          severity: 'error',\n          message: error.response.data.msg\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    }\n  };\n\n  // Habilitar solo los campos debajo del primer botón\n  const handleEnableForm = () => {\n    setFormularioHabilitado(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      severity: showAlert.severity,\n      message: showAlert.message,\n      autoHideDuration: 2000,\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Crear Plan de Prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Nombre del Proyecto\",\n            value: nombreProyecto,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Inicio\",\n            type: \"date\",\n            value: fechaInicio,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Fin\",\n            type: \"date\",\n            value: fechaFin,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Presupuesto\",\n            value: presupuesto,\n            disabled: true // Mantener deshabilitado\n            ,\n            type: \"number\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Estado del Proyecto\",\n            value: estado,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Responsable\",\n            value: responsable,\n            disabled: true // Mantener deshabilitado\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleEnableForm,\n            children: \"Crear Plan de Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), formularioHabilitado && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Resultado Esperado\",\n            value: resultadoEsperado,\n            onChange: e => setResultadoEsperado(e.target.value),\n            required: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), formularioHabilitado && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Prueba Realizada\",\n              value: pruebaRealizada,\n              onChange: e => setPruebaRealizada(e.target.value),\n              required: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Estado de la Prueba\",\n              value: estadoPrueba,\n              onChange: e => setEstadoPrueba(e.target.value),\n              required: true,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Seleccionar Hito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: hitoSeleccionado,\n              onChange: e => setHitoSeleccionado(e.target.value),\n              fullWidth: true,\n              required: true,\n              children: hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: hito._id,\n                children: hito.nombre\n              }, hito._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), formularioHabilitado && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"rNkgECaPDSTnF1jN8G60KxlVZv8=\", true);\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["CrearPlanDePrueba","_s","showAlert","setShowAlert","useState","nombreProyecto","setNombreProyecto","descripcion","setDescripcion","fechaInicio","setFechaInicio","fechaFin","setFechaFin","presupuesto","setPresupuesto","estado","setEstado","responsable","setResponsable","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","estadoPrueba","setEstadoPrueba","hitoSeleccionado","setHitoSeleccionado","formularioHabilitado","setFormularioHabilitado","navigate","useNavigate","id","useParams","useEffect","isAuthenticated","fetchProyecto","response","axios","get","proyecto","data","formatoFechaInicio","Date","fecha_inicio","toISOString","split","formatoFechaFin","fecha_finalizacion","nombre","u_usuario","error","console","severity","message","fetchHitos","handleSubmit","e","preventDefault","planDePrueba","token","localStorage","getItem","config","headers","post","msg","setTimeout","handleEnableForm","_jsxDEV","Box","sx","padding","children","AlertMessage","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","Typography","variant","gutterBottom","align","onSubmit","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","value","disabled","type","InputLabelProps","shrink","Button","color","onClick","onChange","target","required","_Fragment","InputLabel","Select","map","hito","MenuItem","_id","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/PlanPruebas.js"],"sourcesContent":["  const CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const [nombreProyecto, setNombreProyecto] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('');\r\n  const [fechaFin, setFechaFin] = useState('');\r\n  const [presupuesto, setPresupuesto] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [responsable, setResponsable] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Nuevo estado para el hito seleccionado\r\n  const [formularioHabilitado, setFormularioHabilitado] = useState(false); // Estado para habilitar solo los campos debajo del primer botón\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\r\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\r\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\r\n\r\n        setNombreProyecto(proyecto.nombre);\r\n        setDescripcion(proyecto.descripcion);\r\n        setFechaInicio(formatoFechaInicio);\r\n        setFechaFin(formatoFechaFin);\r\n        setPresupuesto(proyecto.presupuesto);\r\n        setEstado(proyecto.estado);\r\n        setResponsable(proyecto.u_usuario);\r\n        \r\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\r\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Obtener los hitos de la API\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/hitos/hito/${id}`);\r\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones simples para el plan de prueba\r\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      hitoSeleccionado, // Incluir el hito seleccionado\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      // Aquí puedes enviar el plan de prueba a la API\r\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\r\n\r\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\r\n        setShowAlert({\r\n          severity: 'success',\r\n          message: response.data.msg,\r\n        });\r\n\r\n        // Redirigir después de 2 segundos\r\n        setTimeout(() => {\r\n          navigate('/proyectos/tareas');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n\r\n      if (error.response && error.response.data && error.response.data.msg) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: error.response.data.msg,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Habilitar solo los campos debajo del primer botón\r\n  const handleEnableForm = () => {\r\n    setFormularioHabilitado(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000}\r\n          sx={{ mb: 4 }}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Crear Plan de Prueba\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {/* Información del Proyecto - Solo Lectura */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nombre del Proyecto\"\r\n              value={nombreProyecto}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Inicio\"\r\n              type=\"date\"\r\n              value={fechaInicio}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Fin\"\r\n              type=\"date\"\r\n              value={fechaFin}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Presupuesto\"\r\n              value={presupuesto}\r\n              disabled={true}  // Mantener deshabilitado\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Estado del Proyecto\"\r\n              value={estado}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Responsable\"\r\n              value={responsable}\r\n              disabled={true}  // Mantener deshabilitado\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Botón para habilitar formulario */}\r\n          <Grid item xs={12}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleEnableForm}\r\n            >\r\n              Crear Plan de Prueba\r\n            </Button>\r\n          </Grid>\r\n\r\n          {/* Espacio entre los botones y campos habilitados */}\r\n          {formularioHabilitado && (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Resultado Esperado\"\r\n                value={resultadoEsperado}\r\n                onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                required\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          )}\r\n          \r\n          {/* Otros campos habilitados */}\r\n          {formularioHabilitado && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Prueba Realizada\"\r\n                  value={pruebaRealizada}\r\n                  onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Estado de la Prueba\"\r\n                  value={estadoPrueba}\r\n                  onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <InputLabel>Seleccionar Hito</InputLabel>\r\n                <Select\r\n                  value={hitoSeleccionado}\r\n                  onChange={(e) => setHitoSeleccionado(e.target.value)}\r\n                  fullWidth\r\n                  required\r\n                >\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito._id} value={hito._id}>\r\n                      {hito.nombre}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          {/* Botón de envío */}\r\n          {formularioHabilitado && (\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}