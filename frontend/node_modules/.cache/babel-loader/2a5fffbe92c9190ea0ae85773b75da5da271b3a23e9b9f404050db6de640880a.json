{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardLayoutNavigationLinks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demoTheme = createTheme({\n  cssVariables: {\n    colorSchemeSelector: 'data-toolpad-color-scheme'\n  },\n  colorSchemes: {\n    light: true,\n    dark: true\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 600,\n      lg: 1200,\n      xl: 1536\n    }\n  }\n});\nfunction DemoPageContent({\n  pathname\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Dashboard content for \", pathname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = DemoPageContent;\nexport default function DashboardLayoutNavigationLinks() {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Recupera el estado del modo oscuro desde localStorage\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode === 'true'; // Convierte el valor guardado a booleano\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  // Crea el tema basado en el estado del modo oscuro\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light'\n    }\n  });\n  const handleToggleDarkMode = () => {\n    setDarkMode(prev => {\n      const newMode = !prev;\n      localStorage.setItem('darkMode', newMode); // Guarda el nuevo estado en localStorage\n      return newMode;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [\" \", /*#__PURE__*/_jsxDEV(AppProvider, {\n      navigation: [{\n        segment: 'home',\n        title: 'Home',\n        icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)\n      }, {\n        segment: 'about',\n        title: 'About Us',\n        icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)\n      }],\n      router: {\n        pathname,\n        push: path => navigate(path)\n      },\n      children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n        children: [/*#__PURE__*/_jsxDEV(DemoPageContent, {\n          pathname: pathname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleToggleDarkMode,\n            children: darkMode ? 'Modo Claro' : 'Modo Oscuro'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardLayoutNavigationLinks, \"/qyige5V/2Uc8MW+h7TlUcxbKuY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c2 = DashboardLayoutNavigationLinks;\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoPageContent\");\n$RefreshReg$(_c2, \"DashboardLayoutNavigationLinks\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","createTheme","ThemeProvider","DescriptionIcon","AppProvider","DashboardLayout","useNavigate","useLocation","jsxDEV","_jsxDEV","demoTheme","cssVariables","colorSchemeSelector","colorSchemes","light","dark","breakpoints","values","xs","sm","md","lg","xl","DemoPageContent","pathname","sx","py","display","flexDirection","alignItems","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DashboardLayoutNavigationLinks","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","navigate","location","theme","palette","mode","handleToggleDarkMode","prev","newMode","setItem","navigation","segment","title","icon","router","push","path","p","Button","variant","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardLayoutNavigationLinks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\nimport { useNavigate, useLocation } from 'react-router-dom'; \r\n\r\nconst demoTheme = createTheme({\r\n  cssVariables: {\r\n    colorSchemeSelector: 'data-toolpad-color-scheme',\r\n  },\r\n  colorSchemes: { light: true, dark: true },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 600,\r\n      lg: 1200,\r\n      xl: 1536,\r\n    },\r\n  },\r\n});\r\n\r\nfunction DemoPageContent({ pathname }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        py: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Typography>Dashboard content for {pathname}</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function DashboardLayoutNavigationLinks() {\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    // Recupera el estado del modo oscuro desde localStorage\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    return savedMode === 'true'; // Convierte el valor guardado a booleano\r\n  });\r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  // Crea el tema basado en el estado del modo oscuro\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: darkMode ? 'dark' : 'light',\r\n    },\r\n  });\r\n\r\n  const handleToggleDarkMode = () => {\r\n    setDarkMode((prev) => {\r\n      const newMode = !prev;\r\n      localStorage.setItem('darkMode', newMode); // Guarda el nuevo estado en localStorage\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}> {/* Proveedor del tema */}\r\n      <AppProvider\r\n        navigation={[\r\n          {\r\n            segment: 'home',\r\n            title: 'Home',\r\n            icon: <DescriptionIcon />,\r\n          },\r\n          {\r\n            segment: 'about',\r\n            title: 'About Us',\r\n            icon: <DescriptionIcon />,\r\n          },\r\n        ]}\r\n        router={{\r\n          pathname,\r\n          push: (path) => navigate(path),\r\n        }}\r\n      >\r\n        <DashboardLayout>\r\n          <DemoPageContent pathname={pathname} />\r\n          {/* Bot√≥n para alternar el modo oscuro */}\r\n          <Box sx={{ p: 2 }}>\r\n            <Button variant=\"contained\" onClick={handleToggleDarkMode}>\r\n              {darkMode ? 'Modo Claro' : 'Modo Oscuro'}\r\n            </Button>\r\n          </Box>\r\n        </DashboardLayout>\r\n      </AppProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC5BU,YAAY,EAAE;IACZC,mBAAmB,EAAE;EACvB,CAAC;EACDC,YAAY,EAAE;IAAEC,KAAK,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EACzCC,WAAW,EAAE;IACXC,MAAM,EAAE;MACNC,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,GAAG;MACPC,EAAE,EAAE,GAAG;MACPC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE;IACN;EACF;AACF,CAAC,CAAC;AAEF,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACrC,oBACEf,OAAA,CAACV,GAAG;IACF0B,EAAE,EAAE;MACFC,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,eAEFtB,OAAA,CAACT,UAAU;MAAA+B,QAAA,GAAC,wBAAsB,EAACP,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACC,EAAA,GAdQb,eAAe;AAgBxB,eAAe,SAASc,8BAA8BA,CAAA,EAAG;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAM4C,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,OAAOF,SAAS,KAAK,MAAM,CAAC,CAAC;EAC/B,CAAC,CAAC;EAEF,MAAMG,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B,MAAMuC,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGqB,QAAQ,CAACrB,QAAQ;;EAElC;EACA,MAAMsB,KAAK,GAAG7C,WAAW,CAAC;IACxB8C,OAAO,EAAE;MACPC,IAAI,EAAET,QAAQ,GAAG,MAAM,GAAG;IAC5B;EACF,CAAC,CAAC;EAEF,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjCT,WAAW,CAAEU,IAAI,IAAK;MACpB,MAAMC,OAAO,GAAG,CAACD,IAAI;MACrBR,YAAY,CAACU,OAAO,CAAC,UAAU,EAAED,OAAO,CAAC,CAAC,CAAC;MAC3C,OAAOA,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1C,OAAA,CAACP,aAAa;IAAC4C,KAAK,EAAEA,KAAM;IAAAf,QAAA,GAAC,GAAC,eAC5BtB,OAAA,CAACL,WAAW;MACViD,UAAU,EAAE,CACV;QACEC,OAAO,EAAE,MAAM;QACfC,KAAK,EAAE,MAAM;QACbC,IAAI,eAAE/C,OAAA,CAACN,eAAe;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC1B,CAAC,EACD;QACEmB,OAAO,EAAE,OAAO;QAChBC,KAAK,EAAE,UAAU;QACjBC,IAAI,eAAE/C,OAAA,CAACN,eAAe;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC1B,CAAC,CACD;MACFsB,MAAM,EAAE;QACNjC,QAAQ;QACRkC,IAAI,EAAGC,IAAI,IAAKf,QAAQ,CAACe,IAAI;MAC/B,CAAE;MAAA5B,QAAA,eAEFtB,OAAA,CAACJ,eAAe;QAAA0B,QAAA,gBACdtB,OAAA,CAACc,eAAe;UAACC,QAAQ,EAAEA;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEvC1B,OAAA,CAACV,GAAG;UAAC0B,EAAE,EAAE;YAAEmC,CAAC,EAAE;UAAE,CAAE;UAAA7B,QAAA,eAChBtB,OAAA,CAACoD,MAAM;YAACC,OAAO,EAAC,WAAW;YAACC,OAAO,EAAEd,oBAAqB;YAAAlB,QAAA,EACvDQ,QAAQ,GAAG,YAAY,GAAG;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB;AAACG,EAAA,CA1DuBD,8BAA8B;EAAA,QAOnC/B,WAAW,EACXC,WAAW;AAAA;AAAAyD,GAAA,GARN3B,8BAA8B;AAAA,IAAAD,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}