{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  console.log(\"Token obtenido en ProtectedRoute:\", token);\n  if (!token) {\n    console.log(\"Token no encontrado. Redirigiendo a login.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      console.log(\"Token expirado. Redirigiendo a login.\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    }\n    console.log(\"Token v치lido y no expirado:\", decoded);\n    return children;\n  } catch (error) {\n    console.error(\"Token inv치lido:\", error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","currentTime","Date","now","exp","error","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"Token obtenido en ProtectedRoute:\", token);\r\n\r\n    if (!token) {\r\n        console.log(\"Token no encontrado. Redirigiendo a login.\");\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    try {\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        if (decoded.exp < currentTime) {\r\n            console.log(\"Token expirado. Redirigiendo a login.\");\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        console.log(\"Token v치lido y no expirado:\", decoded);\r\n        return children;\r\n    } catch (error) {\r\n        console.error(\"Token inv치lido:\", error);\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,KAAK,CAAC;EAEvD,IAAI,CAACA,KAAK,EAAE;IACRG,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,IAAI;IACA,MAAMC,OAAO,GAAGf,SAAS,CAACK,KAAK,CAAC;IAChC,MAAMW,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IAErC,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;MAC3BR,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD,oBAAOP,OAAA,CAACH,QAAQ;QAACW,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnC;IAEAN,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEM,OAAO,CAAC;IACnD,OAAOX,QAAQ;EACnB,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACZZ,OAAO,CAACY,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,oBAAOlB,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;AACJ,CAAC;AAACO,EAAA,GAxBIlB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}