{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardChartEstoPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\nconst DashboardChartsProyecto = () => {\n  _s();\n  const [proyectos, setProyectos] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: []\n    }]\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\n  const [noData, setNoData] = useState(false);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchProyectos = useCallback(async () => {\n    if (!isAuthenticated) return;\n    setLoading(true);\n    setNoData(false);\n    setError(null);\n    try {\n      var _decoded$user;\n      const decoded = jwtDecode(token);\n      const id = (_decoded$user = decoded.user) === null || _decoded$user === void 0 ? void 0 : _decoded$user.id;\n      const config = {\n        headers: {\n          'x-auth-token': token\n        },\n        params: {\n          estado: selectedEstado\n        }\n      };\n      const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\n      const {\n        proyectosPorEstado\n      } = response.data;\n      if (!proyectosPorEstado || proyectosPorEstado.length === 0) {\n        setNoData(true);\n        setProyectos({\n          labels: [],\n          datasets: [{\n            data: [],\n            backgroundColor: []\n          }]\n        });\n        return;\n      }\n      const labels = proyectosPorEstado.map(proyecto => proyecto.nombre);\n      const data = proyectosPorEstado.map(proyecto => proyecto.cantidad);\n      const backgroundColor = proyectosPorEstado.map((_, index) => `hsl(${index * 40}, 70%, 50%)`);\n      setProyectos({\n        labels,\n        datasets: [{\n          data,\n          backgroundColor\n        }]\n      });\n      setNoData(false);\n    } catch (err) {\n      console.error('Error al obtener los proyectos:', err);\n      setError('No se pudieron cargar los proyectos');\n      setProyectos({\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: []\n        }]\n      });\n      setNoData(true);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token, selectedEstado]);\n  useEffect(() => {\n    fetchProyectos();\n  }, [fetchProyectos]);\n  const handleEstadoChange = e => {\n    setSelectedEstado(e.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando datos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Proyectos por Estado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEstado,\n        onChange: handleEstadoChange,\n        style: {\n          padding: '5px',\n          width: '200px'\n        },\n        children: estadosPosibles.map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado,\n          children: estado\n        }, estado, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), noData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px ',\n        color: '#888'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay proyectos en el estado seleccionado. Intenta con otro estado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '18px',\n        color: 'red'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: proyectos,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                const index = tooltipItem.dataIndex;\n                const label = proyectos.labels[index] || 'Desconocido';\n                const value = tooltipItem.raw;\n                return `${label}: ${value} Proyectos`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardChartsProyecto, \"gvowWbdc0RcYOqO/Zml1XTBxKBk=\");\n_c = DashboardChartsProyecto;\nexport default DashboardChartsProyecto;\nvar _c;\n$RefreshReg$(_c, \"DashboardChartsProyecto\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jwtDecode","jsxDEV","_jsxDEV","register","estadosPosibles","DashboardChartsProyecto","_s","proyectos","setProyectos","labels","datasets","data","backgroundColor","loading","setLoading","error","setError","selectedEstado","setSelectedEstado","noData","setNoData","token","localStorage","getItem","isAuthenticated","Boolean","fetchProyectos","_decoded$user","decoded","id","user","config","headers","params","estado","response","get","proyectosPorEstado","length","map","proyecto","nombre","cantidad","_","index","err","console","handleEstadoChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","display","justifyContent","alignItems","gap","onChange","padding","width","fontSize","color","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","dataIndex","raw","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardChartEstoPrueba.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst estadosPosibles = ['Aprobado', 'Rechazada', 'Pendiente', 'Bloqueado', 'Desconocido', 'Requiere más pruebas', 'No aplicable'];\r\n\r\nconst DashboardChartsProyecto = () => {\r\n    const [proyectos, setProyectos] = useState({\r\n        labels: [],\r\n        datasets: [{\r\n            data: [],\r\n            backgroundColor: [],\r\n        }],\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedEstado, setSelectedEstado] = useState(estadosPosibles[0]);\r\n    const [noData, setNoData] = useState(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchProyectos = useCallback(async () => {\r\n        if (!isAuthenticated) return;\r\n\r\n        setLoading(true);\r\n        setNoData(false);\r\n        setError(null);\r\n\r\n        try {\r\n            const decoded = jwtDecode(token);\r\n            const id = decoded.user?.id;\r\n\r\n            const config = {\r\n                headers: {\r\n                    'x-auth-token': token,\r\n                },\r\n                params: {\r\n                    estado: selectedEstado,\r\n                },\r\n            };\r\n\r\n            const response = await axios.get(`http://localhost:5000/api/grafica/EstadoPrueba/${id}`, config);\r\n            const { proyectosPorEstado } = response.data;\r\n\r\n            if (!proyectosPorEstado || proyectosPorEstado.length === 0) {\r\n                setNoData(true);\r\n                setProyectos({\r\n                    labels: [],\r\n                    datasets: [{\r\n                        data: [],\r\n                        backgroundColor: [],\r\n                    }],\r\n                });\r\n                return;\r\n            }\r\n\r\n            const labels = proyectosPorEstado.map(proyecto => proyecto.nombre);\r\n            const data = proyectosPorEstado.map(proyecto => proyecto.cantidad);\r\n            const backgroundColor = proyectosPorEstado.map((_, index) => `hsl(${index * 40}, 70%, 50%)`);\r\n\r\n            setProyectos({\r\n                labels,\r\n                datasets: [{\r\n                    data,\r\n                    backgroundColor,\r\n                }],\r\n            });\r\n            setNoData(false);\r\n        } catch (err) {\r\n            console.error('Error al obtener los proyectos:', err);\r\n            setError('No se pudieron cargar los proyectos');\r\n            setProyectos({\r\n                labels: [],\r\n                datasets: [{\r\n                    data: [],\r\n                    backgroundColor: [],\r\n                }],\r\n            });\r\n            setNoData(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, token, selectedEstado]);\r\n\r\n    useEffect(() => {\r\n        fetchProyectos();\r\n    }, [fetchProyectos]);\r\n\r\n    const handleEstadoChange = (e) => {\r\n        setSelectedEstado(e.target.value);\r\n    };\r\n\r\n    if (loading) return <div>Cargando datos...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>Proyectos por Estado</h2>\r\n            <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                <select\r\n                    value={selectedEstado}\r\n                    onChange={handleEstadoChange}\r\n                    style={{ padding: '5px', width: '200px' }}\r\n                >\r\n                    {estadosPosibles.map(estado => (\r\n                        <option key={estado} value={estado}>{estado}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {noData && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px ', color: '#888' }}>\r\n                    <p>No hay proyectos en el estado seleccionado. Intenta con otro estado.</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div style={{ textAlign: 'center', fontSize: '18px', color: 'red' }}>\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            <Pie\r\n                data={proyectos}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: (tooltipItem) => {\r\n                                    const index = tooltipItem.dataIndex;\r\n                                    const label = proyectos.labels[index] || 'Desconocido';\r\n                                    const value = tooltipItem.raw;\r\n                                    return `${label}: ${value} Proyectos`;\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardChartsProyecto;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}