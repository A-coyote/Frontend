{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMenu = async () => {\n      const usuarioLogueado = 'usuarioEjemplo'; // Cambia esto por el usuario logueado actual\n      try {\n        const response = await fetch(`http://localhost:5000/api/navigation/menu/${usuarioLogueado}`);\n        const data = await response.json();\n        console.log(\"Datos del menú:\", data); // Verifica los datos\n        setMenuItems(Array.isArray(data) ? data : []); // Asegúrate de que `data` sea un arreglo\n      } catch (error) {\n        console.error('Error al cargar el menú:', error);\n        setMenuItems([]); // Asegúrate de que `menuItems` sea un arreglo vacío\n      }\n    };\n    fetchMenu();\n  }, []);\n  const handleMenuClick = url => {\n    // Navegar a la URL seleccionada\n    navigate(url);\n    setDrawerOpen(false); // Cierra el menú al seleccionar una opción\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: () => setDrawerOpen(true),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: drawerOpen,\n      onClose: () => setDrawerOpen(false),\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: menuItems.length > 0 ? menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => handleMenuClick(item.MenuURL),\n          children: [item.MenuIcon && /*#__PURE__*/_jsxDEV(ListItemIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.DisplayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, item.MenuID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"No hay elementos de men\\xFA disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Bienvenido al Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"vtmudfWZpuveirduZbIoMmO75xo=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","IconButton","Drawer","List","ListItem","ListItemText","ListItemIcon","MenuIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","menuItems","setMenuItems","drawerOpen","setDrawerOpen","navigate","fetchMenu","usuarioLogueado","response","fetch","data","json","console","log","Array","isArray","error","handleMenuClick","url","children","position","edge","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","anchor","open","onClose","length","map","item","button","MenuURL","primary","DisplayName","MenuID","style","padding","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const [menuItems, setMenuItems] = useState([]);\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchMenu = async () => {\r\n            const usuarioLogueado = 'usuarioEjemplo'; // Cambia esto por el usuario logueado actual\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/navigation/menu/${usuarioLogueado}`);\r\n                const data = await response.json();\r\n                console.log(\"Datos del menú:\", data); // Verifica los datos\r\n                setMenuItems(Array.isArray(data) ? data : []); // Asegúrate de que `data` sea un arreglo\r\n            } catch (error) {\r\n                console.error('Error al cargar el menú:', error);\r\n                setMenuItems([]); // Asegúrate de que `menuItems` sea un arreglo vacío\r\n            }\r\n        };\r\n        fetchMenu();\r\n    }, []);\r\n\r\n    const handleMenuClick = (url) => {\r\n        // Navegar a la URL seleccionada\r\n        navigate(url);\r\n        setDrawerOpen(false); // Cierra el menú al seleccionar una opción\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={() => setDrawerOpen(true)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        Dashboard\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer anchor=\"left\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n                <List>\r\n                    {menuItems.length > 0 ? (\r\n                        menuItems.map((item) => (\r\n                            <ListItem button key={item.MenuID} onClick={() => handleMenuClick(item.MenuURL)}>\r\n                                {item.MenuIcon && <ListItemIcon>{/* Aquí puedes agregar el icono correspondiente */}</ListItemIcon>}\r\n                                <ListItemText primary={item.DisplayName} />\r\n                            </ListItem>\r\n                        ))\r\n                    ) : (\r\n                        <ListItem>\r\n                            <ListItemText primary=\"No hay elementos de menú disponibles\" />\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n            </Drawer>\r\n            {/* Aquí puedes agregar el contenido principal del dashboard */}\r\n            <div style={{ padding: '20px' }}>\r\n                <Typography variant=\"h4\">Bienvenido al Dashboard</Typography>\r\n                {/* Contenido adicional aquí */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}