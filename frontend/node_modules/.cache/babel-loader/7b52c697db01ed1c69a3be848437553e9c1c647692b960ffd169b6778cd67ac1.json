{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\EditarPrueba.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\n  const [hitos, setHitos] = useState([]); // Lista de hitos\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para la imagen\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\n  const [estadoActualHito, setEstadoActualHito] = useState(''); // Estado actual del hito\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n  const alertRef = useRef(null); // Referencia para la alerta\n\n  // Redirige al login si no está autenticado\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Cargar la imagen seleccionada\n  const handleImagenChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagenPrueba(reader.result);\n      };\n      reader.onerror = error => {\n        console.error(\"Error al convertir la imagen a Base64:\", error);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Obtener los hitos del proyecto\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/pruebas/Pruebas/${id}`);\n        setHitos(response.data || []);\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Cargar los datos del plan de prueba existente\n  useEffect(() => {\n    const fetchPlanDePrueba = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setShowAlert({\n            severity: 'error',\n            message: 'No se encontró el token de autenticación.'\n          });\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const response = await axios.get(`http://localhost:5000/api/pruebas/plan/${id}`,\n        // Ajusta el endpoint si es necesario\n        config);\n        const data = response.data;\n        setHitoSeleccionado(data.hito_seleccionado || '');\n        setResultadoEsperado(data.resultado_esperado || '');\n        setPruebaRealizada(data.prueba_realizada || '');\n        setEstadoPrueba(data.estado_prueba || '');\n        setCriterioAceptacion(data.criterio_aceptacion || '');\n        setImagenPrueba(data.imagen_prueba || '');\n      } catch (error) {\n        console.error('Error al cargar el plan de prueba:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar el plan de prueba.'\n        });\n      }\n    };\n    if (id) {\n      fetchPlanDePrueba();\n    }\n  }, [id]);\n\n  // Manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      hitoSeleccionado,\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      criterioAceptacion,\n      imagenPrueba\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await axios.post(`http://localhost:5000/api/pruebas/registerPrueba/${id}`, planDePrueba, config);\n      if (response.data.msg) {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n        setTimeout(() => navigate('/proyectos/tareas'), 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.errors) {\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\n        setShowAlert({\n          severity: 'error',\n          message: errorMessages\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    } finally {\n      if (alertRef.current) {\n        alertRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n\n  // Manejar selección de hito\n  const handleHitoSeleccionado = e => {\n    const hitoId = e.target.value;\n    setHitoSeleccionado(hitoId);\n    const hito = hitos.find(hito => hito.id_hito === hitoId);\n    if (hito) {\n      setDescripcionHito(hito.descripcion);\n      setEstadoActualHito(hito.estado);\n    } else {\n      setDescripcionHito('');\n      setEstadoActualHito('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: alertRef,\n      children: showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        severity: showAlert.severity,\n        message: showAlert.message,\n        autoHideDuration: 2000,\n        sx: {\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Edici\\xF3n de la prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Selecciona un Hito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: hitoSeleccionado,\n            onChange: handleHitoSeleccionado,\n            displayEmpty: true,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Selecciona un hito...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: hito.id_hito,\n              children: hito.nombre_hito\n            }, hito.id_hito, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n del Hito\",\n            value: descripcionHito,\n            disabled: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Resultado Esperado\",\n            value: resultadoEsperado,\n            onChange: e => setResultadoEsperado(e.target.value),\n            variant: \"outlined\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Prueba Realizada\",\n            value: pruebaRealizada,\n            onChange: e => setPruebaRealizada(e.target.value),\n            variant: \"outlined\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Estado de la Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: estadoPrueba,\n            onChange: e => setEstadoPrueba(e.target.value),\n            displayEmpty: true,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Selecciona el estado...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Aprobado\",\n              children: \"Aprobado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Rechazado\",\n              children: \"Rechazado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"En Proceso\",\n              children: \"En Proceso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Criterio de Aceptaci\\xF3n\",\n            value: criterioAceptacion,\n            onChange: e => setCriterioAceptacion(e.target.value),\n            variant: \"outlined\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Subir Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"file\",\n            onChange: handleImagenChange,\n            variant: \"outlined\",\n            fullWidth: true,\n            inputProps: {\n              accept: 'image/*'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), imagenPrueba && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagenPrueba,\n            alt: \"Preview\",\n            style: {\n              maxWidth: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Guardar Plan de Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"OrDIACklRgB4wkQxE11kFVjesEc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","criterioAceptacion","setCriterioAceptacion","estadoPrueba","setEstadoPrueba","imagenPrueba","setImagenPrueba","hitoSeleccionado","setHitoSeleccionado","descripcionHito","setDescripcionHito","estadoActualHito","setEstadoActualHito","navigate","id","alertRef","handleImagenChange","e","file","target","files","reader","FileReader","onload","result","onerror","error","console","readAsDataURL","fetchHitos","response","get","data","severity","message","fetchPlanDePrueba","token","localStorage","getItem","config","headers","hito_seleccionado","resultado_esperado","prueba_realizada","estado_prueba","criterio_aceptacion","imagen_prueba","handleSubmit","preventDefault","planDePrueba","post","msg","setTimeout","errors","errorMessages","map","err","join","current","scrollIntoView","behavior","handleHitoSeleccionado","hitoId","value","hito","find","id_hito","descripcion","estado","sx","padding","children","ref","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","mt","item","xs","fullWidth","onChange","displayEmpty","required","disabled","nombre_hito","label","type","inputProps","accept","src","alt","style","maxWidth","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/EditarPrueba.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Función para validar autenticación\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado para la alerta\r\n  const [hitos, setHitos] = useState([]); // Lista de hitos\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [criterioAceptacion, setCriterioAceptacion] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [imagenPrueba, setImagenPrueba] = useState(null); // Estado para la imagen\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Hito seleccionado\r\n  const [descripcionHito, setDescripcionHito] = useState(''); // Descripción del hito\r\n  const [estadoActualHito, setEstadoActualHito] = useState(''); // Estado actual del hito\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n  const alertRef = useRef(null); // Referencia para la alerta\r\n\r\n  // Redirige al login si no está autenticado\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Cargar la imagen seleccionada\r\n  const handleImagenChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setImagenPrueba(reader.result);\r\n      };\r\n      reader.onerror = (error) => {\r\n        console.error(\"Error al convertir la imagen a Base64:\", error);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Obtener los hitos del proyecto\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/pruebas/Pruebas/${id}`);\r\n        setHitos(response.data || []);\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Cargar los datos del plan de prueba existente\r\n  useEffect(() => {\r\n    const fetchPlanDePrueba = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          setShowAlert({\r\n            severity: 'error',\r\n            message: 'No se encontró el token de autenticación.',\r\n          });\r\n          return;\r\n        }\r\n\r\n        const config = {\r\n          headers: {\r\n            'x-auth-token': token,\r\n          },\r\n        };\r\n\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/pruebas/plan/${id}`, // Ajusta el endpoint si es necesario\r\n          config\r\n        );\r\n\r\n        const data = response.data;\r\n        setHitoSeleccionado(data.hito_seleccionado || '');\r\n        setResultadoEsperado(data.resultado_esperado || '');\r\n        setPruebaRealizada(data.prueba_realizada || '');\r\n        setEstadoPrueba(data.estado_prueba || '');\r\n        setCriterioAceptacion(data.criterio_aceptacion || '');\r\n        setImagenPrueba(data.imagen_prueba || '');\r\n      } catch (error) {\r\n        console.error('Error al cargar el plan de prueba:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar el plan de prueba.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchPlanDePrueba();\r\n    }\r\n  }, [id]);\r\n\r\n  // Manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!hitoSeleccionado || !resultadoEsperado || !pruebaRealizada || !estadoPrueba || !criterioAceptacion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      hitoSeleccionado,\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      criterioAceptacion,\r\n      imagenPrueba,\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/pruebas/registerPrueba/${id}`,\r\n        planDePrueba,\r\n        config\r\n      );\r\n\r\n      if (response.data.msg) {\r\n        setShowAlert({ severity: 'success', message: response.data.msg });\r\n        setTimeout(() => navigate('/proyectos/tareas'), 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n      if (error.response && error.response.data && error.response.data.errors) {\r\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: errorMessages,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    } finally {\r\n      if (alertRef.current) {\r\n        alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Manejar selección de hito\r\n  const handleHitoSeleccionado = (e) => {\r\n    const hitoId = e.target.value;\r\n    setHitoSeleccionado(hitoId);\r\n\r\n    const hito = hitos.find((hito) => hito.id_hito === hitoId);\r\n    if (hito) {\r\n      setDescripcionHito(hito.descripcion);\r\n      setEstadoActualHito(hito.estado);\r\n    } else {\r\n      setDescripcionHito('');\r\n      setEstadoActualHito('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      <div ref={alertRef}>\r\n        {showAlert && (\r\n          <AlertMessage\r\n            severity={showAlert.severity}\r\n            message={showAlert.message}\r\n            autoHideDuration={2000}\r\n            sx={{ mb: 4 }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Edición de la prueba\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2} mt={3}>\r\n          <Grid item xs={12}>\r\n            <InputLabel>Selecciona un Hito</InputLabel>\r\n            <Select\r\n              fullWidth\r\n              value={hitoSeleccionado}\r\n              onChange={handleHitoSeleccionado}\r\n              displayEmpty\r\n              required\r\n            >\r\n              <MenuItem value=\"\" disabled>Selecciona un hito...</MenuItem>\r\n              {hitos.map((hito) => (\r\n                <MenuItem key={hito.id_hito} value={hito.id_hito}>\r\n                  {hito.nombre_hito}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción del Hito\"\r\n              value={descripcionHito}\r\n              disabled\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Resultado Esperado\"\r\n              value={resultadoEsperado}\r\n              onChange={(e) => setResultadoEsperado(e.target.value)}\r\n              variant=\"outlined\"\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Prueba Realizada\"\r\n              value={pruebaRealizada}\r\n              onChange={(e) => setPruebaRealizada(e.target.value)}\r\n              variant=\"outlined\"\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <InputLabel>Estado de la Prueba</InputLabel>\r\n            <Select\r\n              fullWidth\r\n              value={estadoPrueba}\r\n              onChange={(e) => setEstadoPrueba(e.target.value)}\r\n              displayEmpty\r\n              required\r\n            >\r\n              <MenuItem value=\"\" disabled>Selecciona el estado...</MenuItem>\r\n              <MenuItem value=\"Aprobado\">Aprobado</MenuItem>\r\n              <MenuItem value=\"Rechazado\">Rechazado</MenuItem>\r\n              <MenuItem value=\"En Proceso\">En Proceso</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Criterio de Aceptación\"\r\n              value={criterioAceptacion}\r\n              onChange={(e) => setCriterioAceptacion(e.target.value)}\r\n              variant=\"outlined\"\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <InputLabel>Subir Imagen</InputLabel>\r\n            <TextField\r\n              type=\"file\"\r\n              onChange={handleImagenChange}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              inputProps={{ accept: 'image/*' }}\r\n            />\r\n          </Grid>\r\n\r\n          {imagenPrueba && (\r\n            <Grid item xs={12}>\r\n              <img src={imagenPrueba} alt=\"Preview\" style={{ maxWidth: '100%' }} />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Guardar Plan de Prueba\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACtG,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,+BAA+B,CAAC,CAAC;AAC1D,SAASC,eAAe,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACoC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAMwC,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAE8B;EAAG,CAAC,GAAG7B,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM8B,QAAQ,GAAGxC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,eAAe,CAAC,CAAC,EAAE;MACtByB,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMG,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpBjB,eAAe,CAACe,MAAM,CAACG,MAAM,CAAC;MAChC,CAAC;MACDH,MAAM,CAACI,OAAO,GAAIC,KAAK,IAAK;QAC1BC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC;MACDL,MAAM,CAACO,aAAa,CAACV,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA5C,SAAS,CAAC,MAAM;IACd,MAAMuD,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,6CAA6CjB,EAAE,EAAE,CAAC;QACnFlB,QAAQ,CAACkC,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC;MAC/B,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDhC,YAAY,CAAC;UACXuC,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAIpB,EAAE,EAAE;MACNe,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACf,EAAE,CAAC,CAAC;;EAER;EACAxC,SAAS,CAAC,MAAM;IACd,MAAM6D,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACV1C,YAAY,CAAC;YACXuC,QAAQ,EAAE,OAAO;YACjBC,OAAO,EAAE;UACX,CAAC,CAAC;UACF;QACF;QAEA,MAAMK,MAAM,GAAG;UACbC,OAAO,EAAE;YACP,cAAc,EAAEJ;UAClB;QACF,CAAC;QAED,MAAMN,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAC9B,0CAA0CjB,EAAE,EAAE;QAAE;QAChDyB,MACF,CAAC;QAED,MAAMP,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1BxB,mBAAmB,CAACwB,IAAI,CAACS,iBAAiB,IAAI,EAAE,CAAC;QACjD3C,oBAAoB,CAACkC,IAAI,CAACU,kBAAkB,IAAI,EAAE,CAAC;QACnD1C,kBAAkB,CAACgC,IAAI,CAACW,gBAAgB,IAAI,EAAE,CAAC;QAC/CvC,eAAe,CAAC4B,IAAI,CAACY,aAAa,IAAI,EAAE,CAAC;QACzC1C,qBAAqB,CAAC8B,IAAI,CAACa,mBAAmB,IAAI,EAAE,CAAC;QACrDvC,eAAe,CAAC0B,IAAI,CAACc,aAAa,IAAI,EAAE,CAAC;MAC3C,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1DhC,YAAY,CAAC;UACXuC,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAIpB,EAAE,EAAE;MACNqB,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACrB,EAAE,CAAC,CAAC;;EAER;EACA,MAAMiC,YAAY,GAAG,MAAO9B,CAAC,IAAK;IAChCA,CAAC,CAAC+B,cAAc,CAAC,CAAC;IAElB,IAAI,CAACzC,gBAAgB,IAAI,CAACV,iBAAiB,IAAI,CAACE,eAAe,IAAI,CAACI,YAAY,IAAI,CAACF,kBAAkB,EAAE;MACvGP,YAAY,CAAC;QACXuC,QAAQ,EAAE,OAAO;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC;MACF;IACF;IAEA,MAAMe,YAAY,GAAG;MACnB1C,gBAAgB;MAChBV,iBAAiB;MACjBE,eAAe;MACfI,YAAY;MACZF,kBAAkB;MAClBI;IACF,CAAC;IAED,IAAI;MACF,MAAM+B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV1C,YAAY,CAAC;UACXuC,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC;QACF;MACF;MAEA,MAAMK,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAEJ,KAAK;UACrB,cAAc,EAAE;QAClB;MACF,CAAC;MAED,MAAMN,QAAQ,GAAG,MAAM5C,KAAK,CAACgE,IAAI,CAC/B,oDAAoDpC,EAAE,EAAE,EACxDmC,YAAY,EACZV,MACF,CAAC;MAED,IAAIT,QAAQ,CAACE,IAAI,CAACmB,GAAG,EAAE;QACrBzD,YAAY,CAAC;UAAEuC,QAAQ,EAAE,SAAS;UAAEC,OAAO,EAAEJ,QAAQ,CAACE,IAAI,CAACmB;QAAI,CAAC,CAAC;QACjEC,UAAU,CAAC,MAAMvC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC;MACvD;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACI,QAAQ,IAAIJ,KAAK,CAAC;MAC3E,IAAIA,KAAK,CAACI,QAAQ,IAAIJ,KAAK,CAACI,QAAQ,CAACE,IAAI,IAAIN,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACqB,MAAM,EAAE;QACvE,MAAMC,aAAa,GAAG5B,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACqB,MAAM,CAACE,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACL,GAAG,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC;QAC/E/D,YAAY,CAAC;UACXuC,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAEoB;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACL5D,YAAY,CAAC;UACXuC,QAAQ,EAAE,OAAO;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC,SAAS;MACR,IAAInB,QAAQ,CAAC2C,OAAO,EAAE;QACpB3C,QAAQ,CAAC2C,OAAO,CAACC,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACzD;IACF;EACF,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAI5C,CAAC,IAAK;IACpC,MAAM6C,MAAM,GAAG7C,CAAC,CAACE,MAAM,CAAC4C,KAAK;IAC7BvD,mBAAmB,CAACsD,MAAM,CAAC;IAE3B,MAAME,IAAI,GAAGrE,KAAK,CAACsE,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,OAAO,KAAKJ,MAAM,CAAC;IAC1D,IAAIE,IAAI,EAAE;MACRtD,kBAAkB,CAACsD,IAAI,CAACG,WAAW,CAAC;MACpCvD,mBAAmB,CAACoD,IAAI,CAACI,MAAM,CAAC;IAClC,CAAC,MAAM;MACL1D,kBAAkB,CAAC,EAAE,CAAC;MACtBE,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC;EAED,oBACEtB,OAAA,CAACd,GAAG;IAAC6F,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACtBjF,OAAA;MAAKkF,GAAG,EAAEzD,QAAS;MAAAwD,QAAA,EAChB9E,SAAS,iBACRH,OAAA,CAACH,YAAY;QACX8C,QAAQ,EAAExC,SAAS,CAACwC,QAAS;QAC7BC,OAAO,EAAEzC,SAAS,CAACyC,OAAQ;QAC3BuC,gBAAgB,EAAE,IAAK;QACvBJ,EAAE,EAAE;UAAEK,EAAE,EAAE;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxF,OAAA,CAACV,UAAU;MAACmG,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbxF,OAAA;MAAM4F,QAAQ,EAAEnC,YAAa;MAAAwB,QAAA,eAC3BjF,OAAA,CAACX,IAAI;QAACwG,SAAS;QAACC,OAAO,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,gBAChCjF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,gBAChBjF,OAAA,CAACP,UAAU;YAAAwF,QAAA,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3CxF,OAAA,CAACR,MAAM;YACL0G,SAAS;YACTzB,KAAK,EAAExD,gBAAiB;YACxBkF,QAAQ,EAAE5B,sBAAuB;YACjC6B,YAAY;YACZC,QAAQ;YAAApB,QAAA,gBAERjF,OAAA,CAACT,QAAQ;cAACkF,KAAK,EAAC,EAAE;cAAC6B,QAAQ;cAAArB,QAAA,EAAC;YAAqB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,EAC3DnF,KAAK,CAAC4D,GAAG,CAAES,IAAI,iBACd1E,OAAA,CAACT,QAAQ;cAAoBkF,KAAK,EAAEC,IAAI,CAACE,OAAQ;cAAAK,QAAA,EAC9CP,IAAI,CAAC6B;YAAW,GADJ7B,IAAI,CAACE,OAAO;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEjB,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA,CAACb,SAAS;YACR+G,SAAS;YACTM,KAAK,EAAC,yBAAsB;YAC5B/B,KAAK,EAAEtD,eAAgB;YACvBmF,QAAQ;YACRb,OAAO,EAAC;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA,CAACb,SAAS;YACR+G,SAAS;YACTM,KAAK,EAAC,oBAAoB;YAC1B/B,KAAK,EAAElE,iBAAkB;YACzB4F,QAAQ,EAAGxE,CAAC,IAAKnB,oBAAoB,CAACmB,CAAC,CAACE,MAAM,CAAC4C,KAAK,CAAE;YACtDgB,OAAO,EAAC,UAAU;YAClBY,QAAQ;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA,CAACb,SAAS;YACR+G,SAAS;YACTM,KAAK,EAAC,kBAAkB;YACxB/B,KAAK,EAAEhE,eAAgB;YACvB0F,QAAQ,EAAGxE,CAAC,IAAKjB,kBAAkB,CAACiB,CAAC,CAACE,MAAM,CAAC4C,KAAK,CAAE;YACpDgB,OAAO,EAAC,UAAU;YAClBY,QAAQ;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,gBAChBjF,OAAA,CAACP,UAAU;YAAAwF,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5CxF,OAAA,CAACR,MAAM;YACL0G,SAAS;YACTzB,KAAK,EAAE5D,YAAa;YACpBsF,QAAQ,EAAGxE,CAAC,IAAKb,eAAe,CAACa,CAAC,CAACE,MAAM,CAAC4C,KAAK,CAAE;YACjD2B,YAAY;YACZC,QAAQ;YAAApB,QAAA,gBAERjF,OAAA,CAACT,QAAQ;cAACkF,KAAK,EAAC,EAAE;cAAC6B,QAAQ;cAAArB,QAAA,EAAC;YAAuB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC9DxF,OAAA,CAACT,QAAQ;cAACkF,KAAK,EAAC,UAAU;cAAAQ,QAAA,EAAC;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC9CxF,OAAA,CAACT,QAAQ;cAACkF,KAAK,EAAC,WAAW;cAAAQ,QAAA,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAChDxF,OAAA,CAACT,QAAQ;cAACkF,KAAK,EAAC,YAAY;cAAAQ,QAAA,EAAC;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA,CAACb,SAAS;YACR+G,SAAS;YACTM,KAAK,EAAC,2BAAwB;YAC9B/B,KAAK,EAAE9D,kBAAmB;YAC1BwF,QAAQ,EAAGxE,CAAC,IAAKf,qBAAqB,CAACe,CAAC,CAACE,MAAM,CAAC4C,KAAK,CAAE;YACvDgB,OAAO,EAAC,UAAU;YAClBY,QAAQ;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,gBAChBjF,OAAA,CAACP,UAAU;YAAAwF,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACrCxF,OAAA,CAACb,SAAS;YACRsH,IAAI,EAAC,MAAM;YACXN,QAAQ,EAAEzE,kBAAmB;YAC7B+D,OAAO,EAAC,UAAU;YAClBS,SAAS;YACTQ,UAAU,EAAE;cAAEC,MAAM,EAAE;YAAU;UAAE;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAENzE,YAAY,iBACXf,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA;YAAK4G,GAAG,EAAE7F,YAAa;YAAC8F,GAAG,EAAC,SAAS;YAACC,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAO;UAAE;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CACP,eAEDxF,OAAA,CAACX,IAAI;UAAC2G,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAhB,QAAA,eAChBjF,OAAA,CAACZ,MAAM;YAACqH,IAAI,EAAC,QAAQ;YAAChB,OAAO,EAAC,WAAW;YAACuB,KAAK,EAAC,SAAS;YAACd,SAAS;YAAAjB,QAAA,EAAC;UAEpE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtF,EAAA,CApTID,iBAAiB;EAAA,QAWJP,WAAW,EACbC,SAAS;AAAA;AAAAsH,EAAA,GAZpBhH,iBAAiB;AAsTvB,eAAeA,iBAAiB;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}