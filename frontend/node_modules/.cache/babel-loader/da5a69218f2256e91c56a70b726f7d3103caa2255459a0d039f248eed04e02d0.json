{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardPageLayout.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useCallback } from 'react';\n// import Box from '@mui/material/Box';\n// import Typography from '@mui/material/Typography';\n// import { createTheme } from '@mui/material/styles';\n// import DescriptionIcon from '@mui/icons-material/Description';\n// import PersonIcon from '@mui/icons-material/Person';\n// import LockIcon from '@mui/icons-material/Lock';\n// import SecurityIcon from '@mui/icons-material/Security';\n// import { AppProvider } from '@toolpad/core/AppProvider';\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\n// import { useNavigate, Routes, Route } from 'react-router-dom';\n// import axios from 'axios';\n// import Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\n// import { jwtDecode } from 'jwt-decode';\n\n// const demoTheme = createTheme({\n//     palette: {\n//         mode: 'light',\n//     },\n// });\n\n// const iconMap = {\n//     Seguridad: <SecurityIcon />,\n//     Roles: <PersonIcon />,\n//     Usuarios: <DescriptionIcon />,\n//     Permisos: <LockIcon />,\n// };\n\n// export default function DashboardLayoutNavigationLinks() {\n//     const navigate = useNavigate();\n//     const [menuItems, setMenuItems] = useState([]);\n//     const token = localStorage.getItem('token');\n//     const isAuthenticated = Boolean(token);\n\n//     const fetchMenus = useCallback(async () => {\n//         if (!token) return;\n\n//         const decoded = jwtDecode(token);\n//         const username = decoded.user.username;\n\n//         try {\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\n//             console.log('API Response:', response.data); // Log para verificar la respuesta\n//             setMenuItems(response.data);\n//         } catch (error) {\n//             console.error('Error fetching menus:', error);\n//         }\n//     }, [token]);\n\n//     useEffect(() => {\n//         if (!isAuthenticated) {\n//             console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\n//             navigate('/login');\n//         } else {\n//             fetchMenus();\n//         }\n//     }, [isAuthenticated, fetchMenus, navigate]);\n\n//     // Ajustar cómo generamos las rutas\n//     const handleMenuClick = (url) => {\n//         if (url) {\n//             console.log('Navegando a:', url); // Para depuración\n//             // Aquí cambiamos la ruta para que no tenga duplicación\n//             navigate(`/dashboard/${url}`); // Ahora no hacemos `trim()`, se utiliza directamente\n//         }\n//     };\n\n//     // Organiza el menú\n//     const navigation = menuItems.map((item) => {\n//         if (item.ParentMenuID === 0) {\n//             return {\n//                 segment: item.MenuURL, // Aquí usas directamente MenuURL\n//                 title: item.DisplayName,\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\n//                 children: menuItems\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\n//                     .map((subItem) => ({\n//                         segment: subItem.MenuURL, // Aquí también usas MenuURL\n//                         title: subItem.DisplayName,\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\n//                         onClick: () => handleMenuClick(subItem.MenuURL), // Usamos MenuURL correctamente\n//                     })),\n//                 onClick: () => handleMenuClick(item.MenuURL), // Usamos MenuURL correctamente\n//             };\n//         }\n//         return null;\n//     }).filter(Boolean);\n\n//     return (\n//         <AppProvider navigation={navigation} theme={demoTheme}>\n//             <DashboardLayout>\n//                 <Routes>\n//                     {/* Aquí aseguramos que las rutas dinámicas sean correctas */}\n//                     {menuItems.map((item) => (\n//                         <Route\n//                             key={item.MenuID}\n//                             path={`/dashboard/${item.MenuURL}`} // Usamos MenuURL sin duplicación\n//                             element={\n//                                 item.MenuURL === 'seguridad/usuarios' ? <Usuario /> : <Welcome />\n//                             }\n//                         />\n//                     ))}\n//                     {/* Aquí está el welcome page, como ruta principal */}\n//                     <Route path=\"/dashboard\" element={<Welcome />} />\n//                     <Route path=\"*\" element={<Welcome />} />\n//                 </Routes>\n//             </DashboardLayout>\n//         </AppProvider>\n//     );\n// }\n\n// function Welcome() {\n//     return (\n//         <Box\n//             sx={{\n//                 py: 35,\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 alignItems: 'center',\n//                 textAlign: 'center',\n//             }}\n//         >\n//             <Typography variant=\"h4\">Bienvenido al Gestor de Control de Calidad!</Typography>\n//         </Box>\n//     );\n// }\n\n// ******************\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme } from '@mui/material/styles';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LockIcon from '@mui/icons-material/Lock';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { useNavigate, Routes, Route, Outlet } from 'react-router-dom'; // Usa Outlet para renderizar las rutas internas\nimport axios from 'axios';\nimport Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demoTheme = createTheme({\n  palette: {\n    mode: 'light'\n  }\n});\nconst iconMap = {\n  Seguridad: /*#__PURE__*/_jsxDEV(SecurityIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 16\n  }, this),\n  Roles: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 12\n  }, this),\n  Usuarios: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 15\n  }, this),\n  Permisos: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 15\n  }, this)\n};\nexport default function DashboardLayoutNavigationLinks() {\n  _s();\n  const navigate = useNavigate();\n  const [menuItems, setMenuItems] = useState([]);\n  const token = localStorage.getItem('token');\n  const isAuthenticated = Boolean(token);\n  const fetchMenus = useCallback(async () => {\n    if (!token) return;\n    const decoded = jwtDecode(token);\n    const username = decoded.user.username;\n    try {\n      const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\n      console.log('API Response:', response.data); // Log para verificar la respuesta\n      setMenuItems(response.data);\n    } catch (error) {\n      console.error('Error fetching menus:', error);\n    }\n  }, [token]);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\n      navigate('/login');\n    } else {\n      fetchMenus();\n    }\n  }, [isAuthenticated, fetchMenus, navigate]);\n\n  // Ajustar cómo generamos las rutas\n  const handleMenuClick = url => {\n    if (url) {\n      console.log('Navegando a:', url); // Para depuración\n      // Navegar directamente a la URL completa sin el prefijo /dashboard\n      navigate(`/${url}`); // Aquí usamos directamente la URL proporcionada\n    }\n  };\n\n  // Organiza el menú\n  const navigation = menuItems.map(item => {\n    if (item.ParentMenuID === 0) {\n      return {\n        segment: item.MenuURL,\n        // Aquí usas MenuURL correctamente\n        title: item.DisplayName,\n        icon: iconMap[item.DisplayName] || /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 52\n        }, this),\n        children: menuItems.filter(subItem => subItem.ParentMenuID === item.MenuID).map(subItem => ({\n          segment: subItem.MenuURL,\n          // Aquí también usas MenuURL\n          title: subItem.DisplayName,\n          icon: iconMap[subItem.DisplayName] || /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 63\n          }, this),\n          onClick: () => handleMenuClick(subItem.MenuURL) // Usamos MenuURL correctamente\n        })),\n        onClick: () => handleMenuClick(item.MenuURL) // Usamos MenuURL correctamente\n      };\n    }\n    return null;\n  }).filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    navigation: navigation,\n    theme: demoTheme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '250px',\n          backgroundColor: '#f5f5f5',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Men\\xFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), navigation.map(item => /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => handleMenuClick(item.segment),\n            sx: {\n              cursor: 'pointer',\n              padding: 1,\n              '&:hover': {\n                backgroundColor: '#ddd'\n              }\n            },\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), item.children && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              paddingLeft: 2\n            },\n            children: item.children.map(subItem => /*#__PURE__*/_jsxDEV(Typography, {\n              onClick: () => handleMenuClick(subItem.segment),\n              sx: {\n                cursor: 'pointer',\n                padding: 1,\n                '&:hover': {\n                  backgroundColor: '#ddd'\n                }\n              },\n              children: subItem.title\n            }, subItem.segment, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 33\n          }, this)]\n        }, item.segment, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          padding: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/seguridad\",\n            element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), menuItems.map(item => /*#__PURE__*/_jsxDEV(Route, {\n            path: `/${item.MenuURL}` // Ruta absoluta sin prefijo\n            ,\n            element: item.MenuURL === 'seguridad/usuarios' ? /*#__PURE__*/_jsxDEV(Usuario, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 77\n            }, this) : /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 91\n            }, this)\n          }, item.MenuID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardLayoutNavigationLinks, \"ncKhh+uLimsN84+szaZMGyCtMkw=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardLayoutNavigationLinks;\nfunction Welcome() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 35,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Bienvenido al Gestor de Control de Calidad!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Welcome;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardLayoutNavigationLinks\");\n$RefreshReg$(_c2, \"Welcome\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Box","Typography","createTheme","DescriptionIcon","PersonIcon","LockIcon","SecurityIcon","AppProvider","useNavigate","Routes","Route","Outlet","axios","Usuario","jwtDecode","jsxDEV","_jsxDEV","demoTheme","palette","mode","iconMap","Seguridad","fileName","_jsxFileName","lineNumber","columnNumber","Roles","Usuarios","Permisos","DashboardLayoutNavigationLinks","_s","navigate","menuItems","setMenuItems","token","localStorage","getItem","isAuthenticated","Boolean","fetchMenus","decoded","username","user","response","get","console","log","data","error","handleMenuClick","url","navigation","map","item","ParentMenuID","segment","MenuURL","title","DisplayName","icon","children","filter","subItem","MenuID","onClick","theme","sx","display","width","backgroundColor","padding","variant","gutterBottom","cursor","paddingLeft","flex","path","element","Welcome","_c","py","flexDirection","alignItems","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardPageLayout.js"],"sourcesContent":["// import React, { useEffect, useState, useCallback } from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme } from '@mui/material/styles';\r\n// import DescriptionIcon from '@mui/icons-material/Description';\r\n// import PersonIcon from '@mui/icons-material/Person';\r\n// import LockIcon from '@mui/icons-material/Lock';\r\n// import SecurityIcon from '@mui/icons-material/Security';\r\n// import { AppProvider } from '@toolpad/core/AppProvider';\r\n// import { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\n// import { useNavigate, Routes, Route } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// const demoTheme = createTheme({\r\n//     palette: {\r\n//         mode: 'light',\r\n//     },\r\n// });\r\n\r\n// const iconMap = {\r\n//     Seguridad: <SecurityIcon />,\r\n//     Roles: <PersonIcon />,\r\n//     Usuarios: <DescriptionIcon />,\r\n//     Permisos: <LockIcon />,\r\n// };\r\n\r\n// export default function DashboardLayoutNavigationLinks() {\r\n//     const navigate = useNavigate();\r\n//     const [menuItems, setMenuItems] = useState([]);\r\n//     const token = localStorage.getItem('token');\r\n//     const isAuthenticated = Boolean(token);\r\n\r\n//     const fetchMenus = useCallback(async () => {\r\n//         if (!token) return;\r\n\r\n//         const decoded = jwtDecode(token);\r\n//         const username = decoded.user.username;\r\n\r\n//         try {\r\n//             const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\r\n//             console.log('API Response:', response.data); // Log para verificar la respuesta\r\n//             setMenuItems(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching menus:', error);\r\n//         }\r\n//     }, [token]);\r\n\r\n//     useEffect(() => {\r\n//         if (!isAuthenticated) {\r\n//             console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\r\n//             navigate('/login');\r\n//         } else {\r\n//             fetchMenus();\r\n//         }\r\n//     }, [isAuthenticated, fetchMenus, navigate]);\r\n\r\n//     // Ajustar cómo generamos las rutas\r\n//     const handleMenuClick = (url) => {\r\n//         if (url) {\r\n//             console.log('Navegando a:', url); // Para depuración\r\n//             // Aquí cambiamos la ruta para que no tenga duplicación\r\n//             navigate(`/dashboard/${url}`); // Ahora no hacemos `trim()`, se utiliza directamente\r\n//         }\r\n//     };\r\n\r\n//     // Organiza el menú\r\n//     const navigation = menuItems.map((item) => {\r\n//         if (item.ParentMenuID === 0) {\r\n//             return {\r\n//                 segment: item.MenuURL, // Aquí usas directamente MenuURL\r\n//                 title: item.DisplayName,\r\n//                 icon: iconMap[item.DisplayName] || <DescriptionIcon />,\r\n//                 children: menuItems\r\n//                     .filter((subItem) => subItem.ParentMenuID === item.MenuID)\r\n//                     .map((subItem) => ({\r\n//                         segment: subItem.MenuURL, // Aquí también usas MenuURL\r\n//                         title: subItem.DisplayName,\r\n//                         icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\r\n//                         onClick: () => handleMenuClick(subItem.MenuURL), // Usamos MenuURL correctamente\r\n//                     })),\r\n//                 onClick: () => handleMenuClick(item.MenuURL), // Usamos MenuURL correctamente\r\n//             };\r\n//         }\r\n//         return null;\r\n//     }).filter(Boolean);\r\n\r\n//     return (\r\n//         <AppProvider navigation={navigation} theme={demoTheme}>\r\n//             <DashboardLayout>\r\n//                 <Routes>\r\n//                     {/* Aquí aseguramos que las rutas dinámicas sean correctas */}\r\n//                     {menuItems.map((item) => (\r\n//                         <Route\r\n//                             key={item.MenuID}\r\n//                             path={`/dashboard/${item.MenuURL}`} // Usamos MenuURL sin duplicación\r\n//                             element={\r\n//                                 item.MenuURL === 'seguridad/usuarios' ? <Usuario /> : <Welcome />\r\n//                             }\r\n//                         />\r\n//                     ))}\r\n//                     {/* Aquí está el welcome page, como ruta principal */}\r\n//                     <Route path=\"/dashboard\" element={<Welcome />} />\r\n//                     <Route path=\"*\" element={<Welcome />} />\r\n//                 </Routes>\r\n//             </DashboardLayout>\r\n//         </AppProvider>\r\n//     );\r\n// }\r\n\r\n// function Welcome() {\r\n//     return (\r\n//         <Box\r\n//             sx={{\r\n//                 py: 35,\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//                 alignItems: 'center',\r\n//                 textAlign: 'center',\r\n//             }}\r\n//         >\r\n//             <Typography variant=\"h4\">Bienvenido al Gestor de Control de Calidad!</Typography>\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ******************\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { useNavigate, Routes, Route, Outlet } from 'react-router-dom'; // Usa Outlet para renderizar las rutas internas\r\nimport axios from 'axios';\r\nimport Usuario from '../pages/Seguridad/usuario'; // Asegúrate de que la ruta sea correcta\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst demoTheme = createTheme({\r\n    palette: {\r\n        mode: 'light',\r\n    },\r\n});\r\n\r\nconst iconMap = {\r\n    Seguridad: <SecurityIcon />,\r\n    Roles: <PersonIcon />,\r\n    Usuarios: <DescriptionIcon />,\r\n    Permisos: <LockIcon />,\r\n};\r\n\r\nexport default function DashboardLayoutNavigationLinks() {\r\n    const navigate = useNavigate();\r\n    const [menuItems, setMenuItems] = useState([]);\r\n    const token = localStorage.getItem('token');\r\n    const isAuthenticated = Boolean(token);\r\n\r\n    const fetchMenus = useCallback(async () => {\r\n        if (!token) return;\r\n\r\n        const decoded = jwtDecode(token);\r\n        const username = decoded.user.username;\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\r\n            console.log('API Response:', response.data); // Log para verificar la respuesta\r\n            setMenuItems(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching menus:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            console.log('Usuario no autenticado, redirigiendo a login.'); // Para depuración\r\n            navigate('/login');\r\n        } else {\r\n            fetchMenus();\r\n        }\r\n    }, [isAuthenticated, fetchMenus, navigate]);\r\n\r\n    // Ajustar cómo generamos las rutas\r\n    const handleMenuClick = (url) => {\r\n        if (url) {\r\n            console.log('Navegando a:', url); // Para depuración\r\n            // Navegar directamente a la URL completa sin el prefijo /dashboard\r\n            navigate(`/${url}`); // Aquí usamos directamente la URL proporcionada\r\n        }\r\n    };\r\n\r\n    // Organiza el menú\r\n    const navigation = menuItems.map((item) => {\r\n        if (item.ParentMenuID === 0) {\r\n            return {\r\n                segment: item.MenuURL, // Aquí usas MenuURL correctamente\r\n                title: item.DisplayName,\r\n                icon: iconMap[item.DisplayName] || <DescriptionIcon />,\r\n                children: menuItems\r\n                    .filter((subItem) => subItem.ParentMenuID === item.MenuID)\r\n                    .map((subItem) => ({\r\n                        segment: subItem.MenuURL, // Aquí también usas MenuURL\r\n                        title: subItem.DisplayName,\r\n                        icon: iconMap[subItem.DisplayName] || <DescriptionIcon />,\r\n                        onClick: () => handleMenuClick(subItem.MenuURL), // Usamos MenuURL correctamente\r\n                    })),\r\n                onClick: () => handleMenuClick(item.MenuURL), // Usamos MenuURL correctamente\r\n            };\r\n        }\r\n        return null;\r\n    }).filter(Boolean);\r\n\r\n    return (\r\n        <AppProvider navigation={navigation} theme={demoTheme}>\r\n            {/* Layout con el menú y las rutas internas */}\r\n            <Box sx={{ display: 'flex' }}>\r\n                {/* Menú de navegación */}\r\n                <Box sx={{ width: '250px', backgroundColor: '#f5f5f5', padding: 2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Menú\r\n                    </Typography>\r\n                    {navigation.map((item) => (\r\n                        <Box key={item.segment}>\r\n                            <Typography\r\n                                onClick={() => handleMenuClick(item.segment)}\r\n                                sx={{\r\n                                    cursor: 'pointer',\r\n                                    padding: 1,\r\n                                    '&:hover': { backgroundColor: '#ddd' },\r\n                                }}\r\n                            >\r\n                                {item.title}\r\n                            </Typography>\r\n                            {/* Submenú */}\r\n                            {item.children && (\r\n                                <Box sx={{ paddingLeft: 2 }}>\r\n                                    {item.children.map((subItem) => (\r\n                                        <Typography\r\n                                            key={subItem.segment}\r\n                                            onClick={() => handleMenuClick(subItem.segment)}\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                padding: 1,\r\n                                                '&:hover': { backgroundColor: '#ddd' },\r\n                                            }}\r\n                                        >\r\n                                            {subItem.title}\r\n                                        </Typography>\r\n                                    ))}\r\n                                </Box>\r\n                            )}\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n                {/* Espacio para las rutas internas */}\r\n                <Box sx={{ flex: 1, padding: 3 }}>\r\n                    <Routes>\r\n                        {/* Ruta principal: /seguridad */}\r\n                        <Route path=\"/seguridad\" element={<Welcome />} />\r\n\r\n                        {/* Rutas dinámicas según los items del menú */}\r\n                        {menuItems.map((item) => (\r\n                            <Route\r\n                                key={item.MenuID}\r\n                                path={`/${item.MenuURL}`} // Ruta absoluta sin prefijo\r\n                                element={\r\n                                    item.MenuURL === 'seguridad/usuarios' ? <Usuario /> : <Welcome />\r\n                                }\r\n                            />\r\n                        ))}\r\n\r\n                        <Route path=\"*\" element={<Welcome />} />\r\n                    </Routes>\r\n                </Box>\r\n            </Box>\r\n        </AppProvider>\r\n    );\r\n}\r\n\r\nfunction Welcome() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                py: 35,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                textAlign: 'center',\r\n            }}\r\n        >\r\n            <Typography variant=\"h4\">Bienvenido al Gestor de Control de Calidad!</Typography>\r\n        </Box>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,WAAW,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB,CAAC,CAAC;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,4BAA4B,CAAC,CAAC;AAClD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC1BgB,OAAO,EAAE;IACLC,IAAI,EAAE;EACV;AACJ,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAG;EACZC,SAAS,eAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}