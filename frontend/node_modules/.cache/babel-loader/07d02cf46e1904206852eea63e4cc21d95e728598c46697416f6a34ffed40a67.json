{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardPageLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme } from '@mui/material/styles';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport GroupIcon from '@mui/icons-material/Group';\nimport PeopleIcon from '@mui/icons-material/People';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\nimport { useDemoRouter } from '@toolpad/core/internal';\n\n// Definición de la variable de temas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demoTheme = createTheme({\n  cssVariables: {\n    colorSchemeSelector: 'data-toolpad-color-scheme'\n  },\n  colorSchemes: {\n    light: true,\n    dark: true\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 600,\n      lg: 1200,\n      xl: 1536\n    }\n  }\n});\n\n// Mapeo de iconos\nconst iconMap = {\n  Group: /*#__PURE__*/_jsxDEV(GroupIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this),\n  People: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this),\n  Description: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 16\n  }, this)\n};\n\n// Componente de contenido del dashboard\nfunction DemoPageContent({\n  pathname\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Dashboard content for \", pathname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = DemoPageContent;\nDemoPageContent.propTypes = {\n  pathname: PropTypes.string.isRequired\n};\n\n// Componente principal del dashboard\nfunction DashboardLayoutNavigationNested(props) {\n  _s();\n  const {\n    window,\n    username\n  } = props; // Asumiendo que username se pasa como prop\n  const [navigation, setNavigation] = useState([]);\n  const router = useDemoRouter('/dashboard/seguridad/usuarios');\n  const demoWindow = window !== undefined ? window() : undefined;\n\n  // Función para obtener los datos de navegación\n  const fetchNavigationData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/navigation/menu/usuario?username=${username}`); // Enviamos el nombre de usuario\n      const data = await response.json();\n      setNavigation(formatNavigationData(data));\n    } catch (error) {\n      console.error('Error fetching navigation data:', error);\n    }\n  };\n\n  // Formatear los datos para la estructura de navegación\n  const formatNavigationData = data => {\n    const navigationMap = {};\n\n    // Mapeamos los datos por MenuID para crear la jerarquía\n    data.forEach(item => {\n      navigationMap[item.MenuID] = {\n        segment: item.MenuURL.replace('/dashboard/', ''),\n        // Se asume que el segmento es el nombre de la URL\n        title: item.DisplayName,\n        icon: iconMap[item.MenuIcon] || null,\n        // Utiliza un icono si existe\n        children: []\n      };\n    });\n\n    // Establecer las relaciones de padre-hijo\n    Object.values(navigationMap).forEach(item => {\n      const segments = item.segment.split('/');\n      if (segments.length > 1) {\n        const parentSegment = segments.slice(0, -1).join('/');\n        const parentItem = navigationMap.find(p => p.segment === parentSegment);\n        if (parentItem) {\n          parentItem.children.push(item);\n        }\n      }\n    });\n\n    // Retornar solo los elementos de nivel superior\n    return Object.values(navigationMap).filter(item => item.segment.split('/').length === 1);\n  };\n  useEffect(() => {\n    fetchNavigationData();\n  }, [username]); // Dependencia de username para refetch al cambiar\n\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    navigation: navigation,\n    router: router,\n    theme: demoTheme,\n    window: demoWindow,\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: /*#__PURE__*/_jsxDEV(DemoPageContent, {\n        pathname: router.pathname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardLayoutNavigationNested, \"Q8YcZkkhWSubsL6wMGouUaN9u28=\", false, function () {\n  return [useDemoRouter];\n});\n_c2 = DashboardLayoutNavigationNested;\nDashboardLayoutNavigationNested.propTypes = {\n  window: PropTypes.func,\n  username: PropTypes.string.isRequired // Asegúrate de que username sea requerido\n};\nexport default DashboardLayoutNavigationNested;\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoPageContent\");\n$RefreshReg$(_c2, \"DashboardLayoutNavigationNested\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Box","Typography","createTheme","DescriptionIcon","GroupIcon","PeopleIcon","AppProvider","DashboardLayout","useDemoRouter","jsxDEV","_jsxDEV","demoTheme","cssVariables","colorSchemeSelector","colorSchemes","light","dark","breakpoints","values","xs","sm","md","lg","xl","iconMap","Group","fileName","_jsxFileName","lineNumber","columnNumber","People","Description","DemoPageContent","pathname","sx","py","display","flexDirection","alignItems","textAlign","children","_c","propTypes","string","isRequired","DashboardLayoutNavigationNested","props","_s","window","username","navigation","setNavigation","router","demoWindow","undefined","fetchNavigationData","response","fetch","data","json","formatNavigationData","error","console","navigationMap","forEach","item","MenuID","segment","MenuURL","replace","title","DisplayName","icon","MenuIcon","Object","segments","split","length","parentSegment","slice","join","parentItem","find","p","push","filter","theme","_c2","func","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardPageLayout.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { DashboardLayout } from '@toolpad/core/DashboardLayout';\r\nimport { useDemoRouter } from '@toolpad/core/internal';\r\n\r\n// Definición de la variable de temas\r\nconst demoTheme = createTheme({\r\n  cssVariables: {\r\n    colorSchemeSelector: 'data-toolpad-color-scheme',\r\n  },\r\n  colorSchemes: { light: true, dark: true },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 600,\r\n      lg: 1200,\r\n      xl: 1536,\r\n    },\r\n  },\r\n});\r\n\r\n// Mapeo de iconos\r\nconst iconMap = {\r\n  Group: <GroupIcon />,\r\n  People: <PeopleIcon />,\r\n  Description: <DescriptionIcon />,\r\n};\r\n\r\n// Componente de contenido del dashboard\r\nfunction DemoPageContent({ pathname }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        py: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <Typography>Dashboard content for {pathname}</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDemoPageContent.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n};\r\n\r\n// Componente principal del dashboard\r\nfunction DashboardLayoutNavigationNested(props) {\r\n  const { window, username } = props; // Asumiendo que username se pasa como prop\r\n  const [navigation, setNavigation] = useState([]);\r\n  const router = useDemoRouter('/dashboard/seguridad/usuarios');\r\n  const demoWindow = window !== undefined ? window() : undefined;\r\n\r\n  // Función para obtener los datos de navegación\r\n  const fetchNavigationData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/navigation/menu/usuario?username=${username}`); // Enviamos el nombre de usuario\r\n      const data = await response.json();\r\n      setNavigation(formatNavigationData(data));\r\n    } catch (error) {\r\n      console.error('Error fetching navigation data:', error);\r\n    }\r\n  };\r\n\r\n  // Formatear los datos para la estructura de navegación\r\n  const formatNavigationData = (data) => {\r\n    const navigationMap = {};\r\n\r\n    // Mapeamos los datos por MenuID para crear la jerarquía\r\n    data.forEach((item) => {\r\n      navigationMap[item.MenuID] = {\r\n        segment: item.MenuURL.replace('/dashboard/', ''), // Se asume que el segmento es el nombre de la URL\r\n        title: item.DisplayName,\r\n        icon: iconMap[item.MenuIcon] || null, // Utiliza un icono si existe\r\n        children: [],\r\n      };\r\n    });\r\n\r\n    // Establecer las relaciones de padre-hijo\r\n    Object.values(navigationMap).forEach((item) => {\r\n      const segments = item.segment.split('/');\r\n      if (segments.length > 1) {\r\n        const parentSegment = segments.slice(0, -1).join('/');\r\n        const parentItem = navigationMap.find((p) => p.segment === parentSegment);\r\n        if (parentItem) {\r\n          parentItem.children.push(item);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Retornar solo los elementos de nivel superior\r\n    return Object.values(navigationMap).filter((item) => item.segment.split('/').length === 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNavigationData();\r\n  }, [username]); // Dependencia de username para refetch al cambiar\r\n\r\n  return (\r\n    <AppProvider\r\n      navigation={navigation}\r\n      router={router}\r\n      theme={demoTheme}\r\n      window={demoWindow}\r\n    >\r\n      <DashboardLayout>\r\n        <DemoPageContent pathname={router.pathname} />\r\n      </DashboardLayout>\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nDashboardLayoutNavigationNested.propTypes = {\r\n  window: PropTypes.func,\r\n  username: PropTypes.string.isRequired, // Asegúrate de que username sea requerido\r\n};\r\n\r\nexport default DashboardLayoutNavigationNested;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}