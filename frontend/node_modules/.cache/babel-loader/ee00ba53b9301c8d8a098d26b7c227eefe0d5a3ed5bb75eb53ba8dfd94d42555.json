{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,TextField,Button,Grid,Typography}from'@mui/material';import{useNavigate,useParams}from'react-router-dom';import axios from'axios';import AlertMessage from'../../components/AlertMessage';import{isAuthenticated}from'../../utils/auth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditarRol=()=>{const[showAlert,setShowAlert]=useState(null);// Estado de la alerta\nconst navigate=useNavigate();const{id}=useParams();// Obtener el id del rol desde la URL\n// Estados para los campos del formulario\nconst[rolName,setRolName]=useState('');const[descripcion,setDescripcion]=useState('');// Verificar si el usuario está autenticado al cargar el componente\nuseEffect(()=>{if(!isAuthenticated()){navigate('/login');// Redirige al login si no está autenticado\n}else{// Cargar los datos del rol si estamos editando\nif(id){fetchRoleData(id);}}},[id,navigate]);// Función para cargar los datos del rol\nconst fetchRoleData=async roleId=>{try{const token=localStorage.getItem('token');if(!token){setShowAlert({severity:'error',message:'No se encontró el token de autenticación.'});return;}const config={headers:{'x-auth-token':token// Enviar el token JWT en la cabecera\n}};const response=await axios.get(`http://localhost:5000/api/roles/roledit/${roleId}`,config);const roleData=response.data;// Llenar los campos del formulario con los datos del rol\nsetRolName(roleData.NOMBRE);setDescripcion(roleData.DESCRIPCION);}catch(error){setShowAlert({severity:'error',message:'Hubo un error al cargar los datos del rol.'});}};// Función para manejar el envío del formulario (actualizar rol)\nconst handleSubmit=async e=>{e.preventDefault();// Validaciones simples\nif(!rolName||!descripcion){setShowAlert({severity:'error',message:'Todos los campos son obligatorios.'});return;}const updatedRole={rolName,descripcion};try{// Obtener el token JWT desde el almacenamiento\nconst token=localStorage.getItem('token');// Verificar si el token existe\nif(!token){setShowAlert({severity:'error',message:'No se encontró el token de autenticación.'});return;}// Configuración del encabezado con el token\nconst config={headers:{'x-auth-token':token// Enviar el token JWT en la cabecera\n}};// Hacer la solicitud PUT para actualizar el rol\nconst response=await axios.put(`http://localhost:5000/api/roles/rol/${id}`,updatedRole,config);// Verificar la respuesta de la API\nif(response.data.msg==='Rol actualizado correctamente'){setShowAlert({severity:'success',message:response.data.msg// Mostrar el mensaje de éxito\n});// Limpiar los campos del formulario si el rol se actualizó con éxito\nsetRolName('');setDescripcion('');// Redirigir a la lista de roles después de 2 segundos\nsetTimeout(()=>{navigate('/seguridad/roles');},2000);}else{setShowAlert({severity:'error',message:response.data.msg||'Error al actualizar el rol.'});}}catch(error){if(error.response&&error.response.data&&error.response.data.msg){setShowAlert({severity:'error',message:error.response.data.msg});}else{setShowAlert({severity:'error',message:'Hubo un error al actualizar el rol. Inténtalo de nuevo.'});}}};return/*#__PURE__*/_jsxs(Box,{sx:{padding:5},children:[showAlert&&/*#__PURE__*/_jsx(AlertMessage,{severity:showAlert.severity,message:showAlert.message,autoHideDuration:2000// La alerta se cierra después de 3 segundos\n,sx:{mb:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Editar Rol\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Nombre del Rol\",value:rolName,onChange:e=>setRolName(e.target.value),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Descripci\\xF3n\",value:descripcion,onChange:e=>setDescripcion(e.target.value),required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,children:\"Actualizar Rol\"})})]})})]});};export default EditarRol;","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Grid","Typography","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsx","_jsx","jsxs","_jsxs","EditarRol","showAlert","setShowAlert","navigate","id","rolName","setRolName","descripcion","setDescripcion","fetchRoleData","roleId","token","localStorage","getItem","severity","message","config","headers","response","get","roleData","data","NOMBRE","DESCRIPCION","error","handleSubmit","e","preventDefault","updatedRole","put","msg","setTimeout","sx","padding","children","autoHideDuration","mb","variant","gutterBottom","onSubmit","container","spacing","item","xs","sm","fullWidth","label","value","onChange","target","required","type","color"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Seguridad/EditarRol.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport { isAuthenticated } from '../../utils/auth';\r\n\r\nconst EditarRol = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el id del rol desde la URL\r\n\r\n  // Estados para los campos del formulario\r\n  const [rolName, setRolName] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    } else {\r\n      // Cargar los datos del rol si estamos editando\r\n      if (id) {\r\n        fetchRoleData(id);\r\n      }\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  // Función para cargar los datos del rol\r\n  const fetchRoleData = async (roleId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token, // Enviar el token JWT en la cabecera\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(`http://localhost:5000/api/roles/roledit/${roleId}`, config);\r\n      const roleData = response.data;\r\n\r\n      // Llenar los campos del formulario con los datos del rol\r\n      setRolName(roleData.NOMBRE);\r\n      setDescripcion(roleData.DESCRIPCION);\r\n    } catch (error) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Hubo un error al cargar los datos del rol.',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Función para manejar el envío del formulario (actualizar rol)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones simples\r\n    if (!rolName || !descripcion) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updatedRole = { rolName, descripcion };\r\n\r\n    try {\r\n      // Obtener el token JWT desde el almacenamiento\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Verificar si el token existe\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Configuración del encabezado con el token\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token, // Enviar el token JWT en la cabecera\r\n        },\r\n      };\r\n\r\n      // Hacer la solicitud PUT para actualizar el rol\r\n      const response = await axios.put(`http://localhost:5000/api/roles/rol/${id}`, updatedRole, config);\r\n\r\n      // Verificar la respuesta de la API\r\n      if (response.data.msg === 'Rol actualizado correctamente') {\r\n        setShowAlert({\r\n          severity: 'success',\r\n          message: response.data.msg, // Mostrar el mensaje de éxito\r\n        });\r\n\r\n        // Limpiar los campos del formulario si el rol se actualizó con éxito\r\n        setRolName('');\r\n        setDescripcion('');\r\n\r\n        // Redirigir a la lista de roles después de 2 segundos\r\n        setTimeout(() => {\r\n          navigate('/seguridad/roles');\r\n        }, 2000);\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: response.data.msg || 'Error al actualizar el rol.',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.msg) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: error.response.data.msg,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al actualizar el rol. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {/* Mostrar la alerta si hay alguna */}\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000} // La alerta se cierra después de 3 segundos\r\n          sx={{ mb: 4 }}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Editar Rol\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {/* Campo para Nombre del Rol */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nombre del Rol\"\r\n              value={rolName}\r\n              onChange={(e) => setRolName(e.target.value)}\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          {/* Campo para Descripción */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              onChange={(e) => setDescripcion(e.target.value)}\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          {/* Botón para enviar el formulario */}\r\n          <Grid item xs={6}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Actualizar Rol\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditarRol;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}