{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\components\\\\DashboardPageLayout.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Dentro de la función DashboardLayoutNavigationLinks\nconst fetchMenus = useCallback(async () => {\n  if (!token) return;\n  const decoded = jwtDecode(token);\n  const username = decoded.user.username;\n  try {\n    const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\n    const data = response.data.map(item => ({\n      ...item,\n      MenuURL: item.MenuURL.startsWith('/dashboard') ? item.MenuURL : `/dashboard${item.MenuURL}`\n    }));\n    setMenuItems(data);\n  } catch (error) {\n    console.error('Error fetching menus:', error);\n  }\n}, [token]);\n\n// Mapea las rutas para asegurarte de que incluyan el prefijo \"/dashboard\"\n{\n  menuItems.map(item => /*#__PURE__*/_jsxDEV(Route, {\n    path: `/dashboard${item.MenuURL}` // Asegúrate de que todas las rutas tengan el prefijo correcto\n    ,\n    element: item.MenuURL === '/seguridad/usuarios' ? /*#__PURE__*/_jsxDEV(Usuario, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 54\n    }, this) : /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 68\n    }, this)\n  }, item.MenuID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"names":["fetchMenus","useCallback","token","decoded","jwtDecode","username","user","response","axios","get","data","map","item","MenuURL","startsWith","setMenuItems","error","console","menuItems","_jsxDEV","Route","path","element","Usuario","fileName","_jsxFileName","lineNumber","columnNumber","Welcome","MenuID"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/components/DashboardPageLayout.js"],"sourcesContent":["// Dentro de la función DashboardLayoutNavigationLinks\r\nconst fetchMenus = useCallback(async () => {\r\n    if (!token) return;\r\n\r\n    const decoded = jwtDecode(token);\r\n    const username = decoded.user.username;\r\n\r\n    try {\r\n        const response = await axios.get(`http://localhost:5000/api/navigation/menu/${username}`);\r\n        const data = response.data.map((item) => ({\r\n            ...item,\r\n            MenuURL: item.MenuURL.startsWith('/dashboard') ? item.MenuURL : `/dashboard${item.MenuURL}`\r\n        }));\r\n        setMenuItems(data);\r\n    } catch (error) {\r\n        console.error('Error fetching menus:', error);\r\n    }\r\n}, [token]);\r\n\r\n// Mapea las rutas para asegurarte de que incluyan el prefijo \"/dashboard\"\r\n{menuItems.map((item) => (\r\n    <Route\r\n        key={item.MenuID}\r\n        path={`/dashboard${item.MenuURL}`} // Asegúrate de que todas las rutas tengan el prefijo correcto\r\n        element={\r\n            item.MenuURL === '/seguridad/usuarios' ? <Usuario /> : <Welcome />\r\n        }\r\n    />\r\n))}\r\n"],"mappings":";;AAAA;AACA,MAAMA,UAAU,GAAGC,WAAW,CAAC,YAAY;EACvC,IAAI,CAACC,KAAK,EAAE;EAEZ,MAAMC,OAAO,GAAGC,SAAS,CAACF,KAAK,CAAC;EAChC,MAAMG,QAAQ,GAAGF,OAAO,CAACG,IAAI,CAACD,QAAQ;EAEtC,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,6CAA6CJ,QAAQ,EAAE,CAAC;IACzF,MAAMK,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;MACtC,GAAGA,IAAI;MACPC,OAAO,EAAED,IAAI,CAACC,OAAO,CAACC,UAAU,CAAC,YAAY,CAAC,GAAGF,IAAI,CAACC,OAAO,GAAG,aAAaD,IAAI,CAACC,OAAO;IAC7F,CAAC,CAAC,CAAC;IACHE,YAAY,CAACL,IAAI,CAAC;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EACjD;AACJ,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;;AAEX;AACA;EAACgB,SAAS,CAACP,GAAG,CAAEC,IAAI,iBAChBO,OAAA,CAACC,KAAK;IAEFC,IAAI,EAAE,aAAaT,IAAI,CAACC,OAAO,EAAG,CAAC;IAAA;IACnCS,OAAO,EACHV,IAAI,CAACC,OAAO,KAAK,qBAAqB,gBAAGM,OAAA,CAACI,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGR,OAAA,CAACS,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpE,GAJIf,IAAI,CAACiB,MAAM;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKnB,CACJ,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}