{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  if (!titulo || !descripcion || !fechaInicio || !fechaFin) {\n    setShowAlert({\n      severity: 'error',\n      message: 'Todos los campos son obligatorios.'\n    });\n    return;\n  }\n\n  // Verifica que proyectoId tenga un valor válido\n  if (!proyectoId) {\n    setShowAlert({\n      severity: 'error',\n      message: 'ID del proyecto no encontrado.'\n    });\n    return;\n  }\n\n  // Crear el nuevo hito con el proyectoId incluido\n  const newHito = {\n    titulo,\n    descripcion,\n    fechaInicio,\n    fechaFin,\n    estado,\n    proyectoId // Agregar el proyectoId al cuerpo de la solicitud\n  };\n\n  // Realizar la solicitud POST\n  const response = await makeRequest('post', 'http://localhost:5000/api/hitos/register', newHito);\n  if (response) {\n    setShowAlert({\n      severity: response.success ? 'success' : 'error',\n      message: response.msg || (response.success ? 'Hito creado correctamente.' : 'Error al crear el hito.')\n    });\n    if (response.success) {\n      // Limpiar el formulario\n      setTitulo('');\n      setDescripcion('');\n      setFechaInicio('');\n      setFechaFin('');\n      setEstado('Pendiente');\n\n      // Obtener la lista de hitos actualizada\n      fetchHitos();\n    }\n\n    // Limpiar la alerta después de 2 segundos\n    setTimeout(() => {\n      setShowAlert(null);\n    }, 2000); // 2000ms = 2 segundos\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","titulo","descripcion","fechaInicio","fechaFin","setShowAlert","severity","message","proyectoId","newHito","estado","response","makeRequest","success","msg","setTitulo","setDescripcion","setFechaInicio","setFechaFin","setEstado","fetchHitos","setTimeout"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Gestiones/CrearHitos.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!titulo || !descripcion || !fechaInicio || !fechaFin) {\r\n        setShowAlert({\r\n            severity: 'error',\r\n            message: 'Todos los campos son obligatorios.',\r\n        });\r\n        return;\r\n    }\r\n\r\n    // Verifica que proyectoId tenga un valor válido\r\n    if (!proyectoId) {\r\n        setShowAlert({\r\n            severity: 'error',\r\n            message: 'ID del proyecto no encontrado.',\r\n        });\r\n        return;\r\n    }\r\n\r\n    // Crear el nuevo hito con el proyectoId incluido\r\n    const newHito = { \r\n        titulo, \r\n        descripcion, \r\n        fechaInicio, \r\n        fechaFin, \r\n        estado,\r\n        proyectoId // Agregar el proyectoId al cuerpo de la solicitud\r\n    };\r\n\r\n    // Realizar la solicitud POST\r\n    const response = await makeRequest('post', 'http://localhost:5000/api/hitos/register', newHito);\r\n\r\n    if (response) {\r\n        setShowAlert({\r\n            severity: response.success ? 'success' : 'error',\r\n            message: response.msg || (response.success ? 'Hito creado correctamente.' : 'Error al crear el hito.'),\r\n        });\r\n\r\n        if (response.success) {\r\n            // Limpiar el formulario\r\n            setTitulo('');\r\n            setDescripcion('');\r\n            setFechaInicio('');\r\n            setFechaFin('');\r\n            setEstado('Pendiente');\r\n\r\n            // Obtener la lista de hitos actualizada\r\n            fetchHitos();\r\n        }\r\n\r\n        // Limpiar la alerta después de 2 segundos\r\n        setTimeout(() => {\r\n            setShowAlert(null);\r\n        }, 2000); // 2000ms = 2 segundos\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI,CAACC,MAAM,IAAI,CAACC,WAAW,IAAI,CAACC,WAAW,IAAI,CAACC,QAAQ,EAAE;IACtDC,YAAY,CAAC;MACTC,QAAQ,EAAE,OAAO;MACjBC,OAAO,EAAE;IACb,CAAC,CAAC;IACF;EACJ;;EAEA;EACA,IAAI,CAACC,UAAU,EAAE;IACbH,YAAY,CAAC;MACTC,QAAQ,EAAE,OAAO;MACjBC,OAAO,EAAE;IACb,CAAC,CAAC;IACF;EACJ;;EAEA;EACA,MAAME,OAAO,GAAG;IACZR,MAAM;IACNC,WAAW;IACXC,WAAW;IACXC,QAAQ;IACRM,MAAM;IACNF,UAAU,CAAC;EACf,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAG,MAAMC,WAAW,CAAC,MAAM,EAAE,0CAA0C,EAAEH,OAAO,CAAC;EAE/F,IAAIE,QAAQ,EAAE;IACVN,YAAY,CAAC;MACTC,QAAQ,EAAEK,QAAQ,CAACE,OAAO,GAAG,SAAS,GAAG,OAAO;MAChDN,OAAO,EAAEI,QAAQ,CAACG,GAAG,KAAKH,QAAQ,CAACE,OAAO,GAAG,4BAA4B,GAAG,yBAAyB;IACzG,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAACE,OAAO,EAAE;MAClB;MACAE,SAAS,CAAC,EAAE,CAAC;MACbC,cAAc,CAAC,EAAE,CAAC;MAClBC,cAAc,CAAC,EAAE,CAAC;MAClBC,WAAW,CAAC,EAAE,CAAC;MACfC,SAAS,CAAC,WAAW,CAAC;;MAEtB;MACAC,UAAU,CAAC,CAAC;IAChB;;IAEA;IACAC,UAAU,CAAC,MAAM;MACbhB,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}