{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\Proyectos\\\\control_calidad\\\\frontend\\\\src\\\\pages\\\\Proyectos\\\\PlanPruebas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPlanDePrueba = () => {\n  _s();\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\n  const [nombreProyecto, setNombreProyecto] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaInicio, setFechaInicio] = useState('');\n  const [fechaFin, setFechaFin] = useState('');\n  const [presupuesto, setPresupuesto] = useState('');\n  const [estado, setEstado] = useState('');\n  const [responsable, setResponsable] = useState('');\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\n  const [estadoPrueba, setEstadoPrueba] = useState('');\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Nuevo estado para el hito seleccionado\n  const [formEnabled, setFormEnabled] = useState(false); // Estado para habilitar el formulario\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Obtener el ID del proyecto desde la URL\n\n  // Verificar si el usuario está autenticado al cargar el componente\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate('/login'); // Redirige al login si no está autenticado\n    }\n  }, [navigate]);\n\n  // Obtener los datos del proyecto\n  useEffect(() => {\n    const fetchProyecto = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\n        const proyecto = response.data;\n\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\n        setNombreProyecto(proyecto.nombre);\n        setDescripcion(proyecto.descripcion);\n        setFechaInicio(formatoFechaInicio);\n        setFechaFin(formatoFechaFin);\n        setPresupuesto(proyecto.presupuesto);\n        setEstado(proyecto.estado);\n        setResponsable(proyecto.u_usuario);\n\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\n      } catch (error) {\n        console.error('Error al obtener el proyecto:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los datos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchProyecto();\n    }\n  }, [id]);\n\n  // Obtener los hitos de la API\n  useEffect(() => {\n    const fetchHitos = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/hitos/hito/${id}`);\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\n      } catch (error) {\n        console.error('Error al obtener los hitos:', error);\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al cargar los hitos del proyecto.'\n        });\n      }\n    };\n    if (id) {\n      fetchHitos();\n    }\n  }, [id]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validaciones simples para el plan de prueba\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado) {\n      setShowAlert({\n        severity: 'error',\n        message: 'Todos los campos del plan de prueba son obligatorios.'\n      });\n      return;\n    }\n    const planDePrueba = {\n      resultadoEsperado,\n      pruebaRealizada,\n      estadoPrueba,\n      hitoSeleccionado // Incluir el hito seleccionado\n    };\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setShowAlert({\n          severity: 'error',\n          message: 'No se encontró el token de autenticación.'\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n\n      // Aquí puedes enviar el plan de prueba a la API\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\n        setShowAlert({\n          severity: 'success',\n          message: response.data.msg\n        });\n\n        // Redirigir después de 2 segundos\n        setTimeout(() => {\n          navigate('/proyectos/tareas');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error al crear el plan de prueba:', error.response || error);\n      if (error.response && error.response.data && error.response.data.msg) {\n        setShowAlert({\n          severity: 'error',\n          message: error.response.data.msg\n        });\n      } else {\n        setShowAlert({\n          severity: 'error',\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.'\n        });\n      }\n    }\n  };\n\n  // Habilitar formulario al hacer clic en \"Crear Plan de Prueba\"\n  const handleEnableForm = () => {\n    setFormEnabled(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 5\n    },\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      severity: showAlert.severity,\n      message: showAlert.message,\n      autoHideDuration: 2000,\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Crear Plan de Prueba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Nombre del Proyecto\",\n            value: nombreProyecto,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Descripci\\xF3n\",\n            value: descripcion,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Inicio\",\n            type: \"date\",\n            value: fechaInicio,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Fecha de Fin\",\n            type: \"date\",\n            value: fechaFin,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Presupuesto\",\n            value: presupuesto,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            type: \"number\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Estado del Proyecto\",\n            value: estado,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Responsable\",\n            value: responsable,\n            disabled: !formEnabled // Habilitar solo después de hacer clic\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleEnableForm,\n            children: \"Crear Plan de Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), formEnabled && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"hito-label\",\n              children: \"Seleccionar Hito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"hito-label\",\n              value: hitoSeleccionado,\n              onChange: e => setHitoSeleccionado(e.target.value),\n              label: \"Seleccionar Hito\",\n              children: hitos.map(hito => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: hito.id,\n                children: hito.nombre\n              }, hito.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Resultado Esperado\",\n            value: resultadoEsperado,\n            onChange: e => setResultadoEsperado(e.target.value),\n            variant: \"outlined\",\n            style: {\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Prueba Realizada\",\n            value: pruebaRealizada,\n            onChange: e => setPruebaRealizada(e.target.value),\n            variant: \"outlined\",\n            style: {\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Estado de la Prueba\",\n            value: estadoPrueba,\n            onChange: e => setEstadoPrueba(e.target.value),\n            variant: \"outlined\",\n            style: {\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), formEnabled && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Enviar Plan de Prueba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPlanDePrueba, \"7SUuo4e1SxJpVKRPwt5Y98eNa/U=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrearPlanDePrueba;\nexport default CrearPlanDePrueba;\nvar _c;\n$RefreshReg$(_c, \"CrearPlanDePrueba\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Grid","Typography","MenuItem","Select","InputLabel","FormControl","useNavigate","useParams","axios","AlertMessage","isAuthenticated","jsxDEV","_jsxDEV","CrearPlanDePrueba","_s","showAlert","setShowAlert","nombreProyecto","setNombreProyecto","descripcion","setDescripcion","fechaInicio","setFechaInicio","fechaFin","setFechaFin","presupuesto","setPresupuesto","estado","setEstado","responsable","setResponsable","hitos","setHitos","resultadoEsperado","setResultadoEsperado","pruebaRealizada","setPruebaRealizada","estadoPrueba","setEstadoPrueba","hitoSeleccionado","setHitoSeleccionado","formEnabled","setFormEnabled","navigate","id","fetchProyecto","response","get","proyecto","data","formatoFechaInicio","Date","fecha_inicio","toISOString","split","formatoFechaFin","fecha_finalizacion","nombre","u_usuario","error","console","severity","message","fetchHitos","handleSubmit","e","preventDefault","planDePrueba","token","localStorage","getItem","config","headers","post","msg","setTimeout","handleEnableForm","sx","padding","children","autoHideDuration","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","onSubmit","container","spacing","item","xs","sm","fullWidth","label","value","disabled","type","InputLabelProps","shrink","color","onClick","style","marginTop","labelId","onChange","target","map","hito","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/Proyectos/control_calidad/frontend/src/pages/Proyectos/PlanPruebas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, TextField, Button, Grid, Typography, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertMessage from '../../components/AlertMessage'; // Importar el componente de alerta\r\nimport { isAuthenticated } from '../../utils/auth'; // Importar la función isAuthenticated\r\n\r\nconst CrearPlanDePrueba = () => {\r\n  const [showAlert, setShowAlert] = useState(null); // Estado de la alerta\r\n  const [nombreProyecto, setNombreProyecto] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('');\r\n  const [fechaFin, setFechaFin] = useState('');\r\n  const [presupuesto, setPresupuesto] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [responsable, setResponsable] = useState('');\r\n  const [hitos, setHitos] = useState([]); // Inicializar como array vacío\r\n  const [resultadoEsperado, setResultadoEsperado] = useState('');\r\n  const [pruebaRealizada, setPruebaRealizada] = useState('');\r\n  const [estadoPrueba, setEstadoPrueba] = useState('');\r\n  const [hitoSeleccionado, setHitoSeleccionado] = useState(''); // Nuevo estado para el hito seleccionado\r\n  const [formEnabled, setFormEnabled] = useState(false); // Estado para habilitar el formulario\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Obtener el ID del proyecto desde la URL\r\n\r\n  // Verificar si el usuario está autenticado al cargar el componente\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      navigate('/login'); // Redirige al login si no está autenticado\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Obtener los datos del proyecto\r\n  useEffect(() => {\r\n    const fetchProyecto = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/proyectos/proyecto/${id}`);\r\n        const proyecto = response.data;\r\n\r\n        // Asegúrate de convertir las fechas al formato correcto: YYYY-MM-DD\r\n        const formatoFechaInicio = new Date(proyecto.fecha_inicio).toISOString().split('T')[0];\r\n        const formatoFechaFin = new Date(proyecto.fecha_finalizacion).toISOString().split('T')[0];\r\n\r\n        setNombreProyecto(proyecto.nombre);\r\n        setDescripcion(proyecto.descripcion);\r\n        setFechaInicio(formatoFechaInicio);\r\n        setFechaFin(formatoFechaFin);\r\n        setPresupuesto(proyecto.presupuesto);\r\n        setEstado(proyecto.estado);\r\n        setResponsable(proyecto.u_usuario);\r\n        \r\n        // Obtener los hitos del proyecto, asegurándote de que siempre sea un array\r\n        setHitos(proyecto.hitos || []); // Si 'hitos' no existe, asigna un array vacío\r\n      } catch (error) {\r\n        console.error('Error al obtener el proyecto:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los datos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchProyecto();\r\n    }\r\n  }, [id]);\r\n\r\n  // Obtener los hitos de la API\r\n  useEffect(() => {\r\n    const fetchHitos = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/hitos/hito/${id}`);\r\n        setHitos(response.data || []); // Asegúrate de que siempre sea un array\r\n      } catch (error) {\r\n        console.error('Error al obtener los hitos:', error);\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al cargar los hitos del proyecto.',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchHitos();\r\n    }\r\n  }, [id]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validaciones simples para el plan de prueba\r\n    if (!resultadoEsperado || !pruebaRealizada || !estadoPrueba || !hitoSeleccionado) {\r\n      setShowAlert({\r\n        severity: 'error',\r\n        message: 'Todos los campos del plan de prueba son obligatorios.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const planDePrueba = {\r\n      resultadoEsperado,\r\n      pruebaRealizada,\r\n      estadoPrueba,\r\n      hitoSeleccionado, // Incluir el hito seleccionado\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'No se encontró el token de autenticación.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      // Aquí puedes enviar el plan de prueba a la API\r\n      const response = await axios.post(`http://localhost:5000/api/proyectos/crearPlanDePrueba/${id}`, planDePrueba, config);\r\n\r\n      if (response.data.msg === 'Plan de prueba creado correctamente') {\r\n        setShowAlert({\r\n          severity: 'success',\r\n          message: response.data.msg,\r\n        });\r\n\r\n        // Redirigir después de 2 segundos\r\n        setTimeout(() => {\r\n          navigate('/proyectos/tareas');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear el plan de prueba:', error.response || error);\r\n\r\n      if (error.response && error.response.data && error.response.data.msg) {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: error.response.data.msg,\r\n        });\r\n      } else {\r\n        setShowAlert({\r\n          severity: 'error',\r\n          message: 'Hubo un error al crear el plan de prueba. Inténtalo de nuevo.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Habilitar formulario al hacer clic en \"Crear Plan de Prueba\"\r\n  const handleEnableForm = () => {\r\n    setFormEnabled(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 5 }}>\r\n      {showAlert && (\r\n        <AlertMessage\r\n          severity={showAlert.severity}\r\n          message={showAlert.message}\r\n          autoHideDuration={2000}\r\n          sx={{ mb: 4 }}\r\n        />\r\n      )}\r\n\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Crear Plan de Prueba\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {/* Información del Proyecto - Solo Lectura */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Nombre del Proyecto\"\r\n              value={nombreProyecto}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Descripción\"\r\n              value={descripcion}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Inicio\"\r\n              type=\"date\"\r\n              value={fechaInicio}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Fecha de Fin\"\r\n              type=\"date\"\r\n              value={fechaFin}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Presupuesto\"\r\n              value={presupuesto}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Estado del Proyecto\"\r\n              value={estado}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Responsable\"\r\n              value={responsable}\r\n              disabled={!formEnabled}  // Habilitar solo después de hacer clic\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Botón para habilitar formulario */}\r\n          <Grid item xs={12}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleEnableForm}\r\n            >\r\n              Crear Plan de Prueba\r\n            </Button>\r\n          </Grid>\r\n\r\n          {/* Espacio entre los botones y campos habilitados */}\r\n          {formEnabled && (\r\n            <Grid item xs={12} style={{ marginTop: '20px' }}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"hito-label\">Seleccionar Hito</InputLabel>\r\n                <Select\r\n                  labelId=\"hito-label\"\r\n                  value={hitoSeleccionado}\r\n                  onChange={(e) => setHitoSeleccionado(e.target.value)}\r\n                  label=\"Seleccionar Hito\"\r\n                >\r\n                  {hitos.map((hito) => (\r\n                    <MenuItem key={hito.id} value={hito.id}>\r\n                      {hito.nombre}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Resultado Esperado\"\r\n                value={resultadoEsperado}\r\n                onChange={(e) => setResultadoEsperado(e.target.value)}\r\n                variant=\"outlined\"\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Prueba Realizada\"\r\n                value={pruebaRealizada}\r\n                onChange={(e) => setPruebaRealizada(e.target.value)}\r\n                variant=\"outlined\"\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Estado de la Prueba\"\r\n                value={estadoPrueba}\r\n                onChange={(e) => setEstadoPrueba(e.target.value)}\r\n                variant=\"outlined\"\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          {/* Botón de Enviar */}\r\n          {formEnabled && (\r\n            <Grid item xs={12}>\r\n              <Button\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Enviar Plan de Prueba\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrearPlanDePrueba;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}